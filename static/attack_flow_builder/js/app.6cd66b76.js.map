{"version":3,"file":"js/app.6cd66b76.js","mappings":"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","sources":["webpack://attack-flow-builder/./src/components/Containers/FocusBox.vue?edc7","webpack://attack-flow-builder/./src/components/Containers/FocusBox.vue?7a21","webpack://attack-flow-builder/./src/components/Containers/FocusBox.vue","webpack://attack-flow-builder/./src/components/Containers/ScrollBox.vue?c889","webpack://attack-flow-builder/./src/components/Containers/ScrollBox.vue?1897","webpack://attack-flow-builder/./src/components/Containers/ScrollBox.vue","webpack://attack-flow-builder/./src/components/Controls/Fields/DictionaryFieldContents.vue?0533","webpack://attack-flow-builder/./src/components/Controls/Fields/TextField.vue?eb6a","webpack://attack-flow-builder/./src/components/Controls/Fields/TextField.vue?2395","webpack://attack-flow-builder/./src/components/Controls/Fields/TextField.vue","webpack://attack-flow-builder/./src/components/Controls/Fields/ListField.vue?b9b6","webpack://attack-flow-builder/./src/components/Icons/Plus.vue?c790","webpack://attack-flow-builder/./src/components/Icons/Plus.vue?de05","webpack://attack-flow-builder/./src/components/Icons/Plus.vue","webpack://attack-flow-builder/./src/components/Controls/Fields/EnumField.vue?1d55","webpack://attack-flow-builder/./src/components/Controls/Fields/EnumField.vue?e510","webpack://attack-flow-builder/./src/components/Controls/Fields/EnumField.vue","webpack://attack-flow-builder/./src/components/Controls/Fields/NumberField.vue?8319","webpack://attack-flow-builder/./src/components/Controls/Fields/NumberField.vue?d5e1","webpack://attack-flow-builder/./src/components/Controls/Fields/NumberField.vue","webpack://attack-flow-builder/./src/components/Controls/Fields/DateTimeField.vue?8b1f","webpack://attack-flow-builder/./src/components/Controls/Fields/DateTimeField.vue?6a61","webpack://attack-flow-builder/./src/components/Controls/Fields/DateTimeField.vue","webpack://attack-flow-builder/./src/components/Controls/Fields/ListField.vue?f4e8","webpack://attack-flow-builder/./src/components/Controls/Fields/ListField.vue","webpack://attack-flow-builder/./src/components/Controls/Fields/DictionaryFieldContents.vue?dd88","webpack://attack-flow-builder/./src/components/Controls/Fields/DictionaryFieldContents.vue","webpack://attack-flow-builder/./src/components/Icons/CollapseArrow.vue?94b1","webpack://attack-flow-builder/./src/components/Icons/CollapseArrow.vue?a73c","webpack://attack-flow-builder/./src/components/Icons/CollapseArrow.vue","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Attributes.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramElement/DiagramObjectMover.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramElement/DiagramDisplaySettings.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramElement/BlockDiagram.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramElement/RasterCache.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramElement/ViewportRegion.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramFactory/Themes.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactoryError.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramTemplateTypes.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramFactory/BuiltinTemplates.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactory.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramObjectModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorableModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineEndingModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineHandleModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramRootModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineEndingPointModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHandlePointModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHorizontalElbowModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineVerticalElbowModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/AnchorPointModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/DictionaryBlockModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/BranchBlockModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/TextBlockModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramModelTypes/PageModel.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramObjectView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorableView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineEndingView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineHandleView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramRootView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineEndingPointView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHandlePointView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHorizontalElbowView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineVerticalElbowView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/AnchorPointView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/DictionaryBlockView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/BranchBlockView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/TextBlockView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/DiagramViewTypes/PageView.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/PageImage.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/PropertyDescriptorTypes.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/Property.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/DateProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/StringProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/NumberProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/CollectionProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/DictionaryProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/ListProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/EnumProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Property/RootProperty.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Utilities/MD5.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Utilities/Drawing.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Utilities/Events.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Utilities/Fonts.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Utilities/Math.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Utilities/String.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/Utilities/WebTypes.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/SemanticAnalyzer/SemanticAnalyzer.ts","webpack://attack-flow-builder/./src/assets/scripts/BlockDiagram/SemanticAnalyzer/GraphExportTypes.ts","webpack://attack-flow-builder/./src/assets/scripts/PointerTracker.ts","webpack://attack-flow-builder/./src/App.vue?be56","webpack://attack-flow-builder/./src/assets/scripts/DiagramValidator/DiagramValidator.ts","webpack://attack-flow-builder/./src/assets/builder.config.validator.ts","webpack://attack-flow-builder/./src/assets/scripts/DiagramPublisher/DiagramPublisher.ts","webpack://attack-flow-builder/./src/assets/builder.config.publisher.ts","webpack://attack-flow-builder/./src/assets/builder.config.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommand.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/CopySelectedChildren.ts","webpack://attack-flow-builder/./src/assets/scripts/Browser.ts","webpack://attack-flow-builder/./src/store/PageEditor.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/LoadFile.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/LoadSettings.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/OpenHyperlink.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/PublishPageToDevice.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/SavePageImageToDevice.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/SavePageToDevice.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/SaveSelectionImageToDevice.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/SetEditorPointerLocation.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/SetEditorViewParams.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/SetRenderQuality.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/SwitchToFullscreen.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/ToggleDebugDisplay.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/ToggleGridDisplay.ts","webpack://attack-flow-builder/./src/store/Commands/AppCommands/ToggleShadowDisplay.ts","webpack://attack-flow-builder/./src/components/Elements/AppTitleBar.vue?806f","webpack://attack-flow-builder/./src/components/Controls/TitleBar.vue?1c91","webpack://attack-flow-builder/./src/components/Controls/ContextMenuListing.vue?28c6","webpack://attack-flow-builder/./src/assets/scripts/ContextMenuTypes.ts","webpack://attack-flow-builder/./src/components/Controls/ContextMenuListing.vue?4e45","webpack://attack-flow-builder/./src/components/Controls/ContextMenuListing.vue","webpack://attack-flow-builder/./src/components/Controls/TitleBar.vue?db14","webpack://attack-flow-builder/./src/components/Controls/TitleBar.vue","webpack://attack-flow-builder/./src/components/Elements/AppTitleBar.vue?9cd0","webpack://attack-flow-builder/./src/components/Elements/AppTitleBar.vue","webpack://attack-flow-builder/./src/components/Elements/AppHotkeyBox.vue?7274","webpack://attack-flow-builder/./src/components/Containers/HotkeyBox.vue?506d","webpack://attack-flow-builder/./src/assets/scripts/HotkeyObserver.ts","webpack://attack-flow-builder/./src/components/Containers/HotkeyBox.vue?302c","webpack://attack-flow-builder/./src/components/Containers/HotkeyBox.vue","webpack://attack-flow-builder/./src/components/Elements/AppHotkeyBox.vue?2e3b","webpack://attack-flow-builder/./src/components/Elements/AppHotkeyBox.vue","webpack://attack-flow-builder/./src/store/Commands/PageCommands/ReorderObject.ts","webpack://attack-flow-builder/./src/components/Elements/BlockDiagram.vue?1e3f","webpack://attack-flow-builder/./src/store/Commands/PageCommand.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/AddLineObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/AddObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/AttachObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/CreateSubproperty.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/GroupCommand.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/RemoveObjects.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/UnhoverObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/UnselectObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/RemoveSelectedChildren.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/CutSelectedChildren.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/DeleteSubproperty.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/DetachObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/DuplicateSelectedChildren.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/HoverObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/SelectObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/UnselectDescendants.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/MoveCameraToObjects.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/MoveCameraToChildren.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/MoveCameraToParents.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/MoveCameraToSelection.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/MoveObjectBy.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/MoveObjectTo.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/PasteToObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/RedoPageCommand.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/ReorderSelectedChildren.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/ResetCamera.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/SelectChildren.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/SetDateProperty.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/SetEnumProperty.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/SetNumberProperty.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/SetStringProperty.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/SpawnObject.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/UndoPageCommand.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/UnhoverDescendants.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/UserSetObjectPosition.ts","webpack://attack-flow-builder/./src/store/Commands/PageCommands/ZoomCamera.ts","webpack://attack-flow-builder/./src/components/Controls/ContextMenu.vue?de56","webpack://attack-flow-builder/./src/components/Controls/ContextMenu.vue?43fe","webpack://attack-flow-builder/./src/components/Controls/ContextMenu.vue","webpack://attack-flow-builder/./src/components/Elements/BlockDiagram.vue?c224","webpack://attack-flow-builder/./src/components/Elements/BlockDiagram.vue","webpack://attack-flow-builder/./src/components/Elements/AppFooterBar.vue?93f8","webpack://attack-flow-builder/./src/components/Elements/AppFooterBar.vue?9868","webpack://attack-flow-builder/./src/components/Elements/AppFooterBar.vue","webpack://attack-flow-builder/./src/components/Elements/EditorSidebar.vue?7edd","webpack://attack-flow-builder/./src/components/Containers/AccordionBox.vue?ed10","webpack://attack-flow-builder/./src/components/Containers/AccordionBox.vue","webpack://attack-flow-builder/./src/components/Containers/AccordionPane.vue?fc1e","webpack://attack-flow-builder/./src/components/Containers/AccordionPane.vue?b6ee","webpack://attack-flow-builder/./src/components/Containers/AccordionPane.vue","webpack://attack-flow-builder/./src/components/Elements/PropertyEditor.vue?297b","webpack://attack-flow-builder/./src/components/Elements/PropertyEditor.vue?7f9e","webpack://attack-flow-builder/./src/components/Elements/PropertyEditor.vue","webpack://attack-flow-builder/./src/components/Elements/ValidatorProblems.vue?9996","webpack://attack-flow-builder/./src/components/Elements/ValidatorProblems.vue?612f","webpack://attack-flow-builder/./src/components/Elements/ValidatorProblems.vue","webpack://attack-flow-builder/./src/components/Elements/EditorSidebar.vue?67d3","webpack://attack-flow-builder/./src/components/Elements/EditorSidebar.vue","webpack://attack-flow-builder/./src/App.vue?4811","webpack://attack-flow-builder/./src/App.vue","webpack://attack-flow-builder/./src/store/StoreTypes.ts","webpack://attack-flow-builder/./src/store/Stores/ApplicationStore.ts","webpack://attack-flow-builder/./src/store/Stores/ContextMenuStore.ts","webpack://attack-flow-builder/./src/store/Stores/HotkeyStore.ts","webpack://attack-flow-builder/./src/store/index.ts","webpack://attack-flow-builder/./src/main.ts","webpack://attack-flow-builder/webpack/bootstrap","webpack://attack-flow-builder/webpack/runtime/chunk loaded","webpack://attack-flow-builder/webpack/runtime/define property getters","webpack://attack-flow-builder/webpack/runtime/ensure chunk","webpack://attack-flow-builder/webpack/runtime/get javascript chunk filename","webpack://attack-flow-builder/webpack/runtime/get mini-css chunk filename","webpack://attack-flow-builder/webpack/runtime/global","webpack://attack-flow-builder/webpack/runtime/hasOwnProperty shorthand","webpack://attack-flow-builder/webpack/runtime/load script","webpack://attack-flow-builder/webpack/runtime/make namespace object","webpack://attack-flow-builder/webpack/runtime/publicPath","webpack://attack-flow-builder/webpack/runtime/css loading","webpack://attack-flow-builder/webpack/runtime/jsonp chunk loading","webpack://attack-flow-builder/webpack/startup"],"sourcesContent":["import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    onPointerdown: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('focus'))),\n    class: \"focus-box-container\"\n  }, [\n    _renderSlot(_ctx.$slots, \"default\")\n  ], 32))\n}","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'FocusBox',\n  data() {\n    return {\n      onFocusOut: (\n        function(this: any, event: MouseEvent) {\n          // If clicked item isn't this container or a child of it, emit\n          // unfocus.\n          if (this.$el != event.target && !this.$el.contains(event.target)) {\n            this.$emit(\"unfocus\");\n          }\n        }\n      ).bind(this)\n    }\n  },\n  emits: [\"focus\", \"unfocus\"],\n  mounted() {\n    // Exit current event chain before binding to the pointerdown event.\n    // Otherwise, any click event that triggered mounted() will bubble up to\n    // this bound document event and cause focus to be left immediately.\n    setTimeout(() => {\n        document.body.addEventListener(\"pointerdown\", this.onFocusOut)\n    }, 0);\n  },\n  unmounted() {\n    document.body.removeEventListener('pointerdown', this.onFocusOut)\n  },\n});\n","import { render } from \"./FocusBox.vue?vue&type=template&id=0145f1c3&ts=true\"\nimport script from \"./FocusBox.vue?vue&type=script&lang=ts\"\nexport * from \"./FocusBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, vShow as _vShow, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-cf54a08c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"scrollbox-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: \"content\",\n      class: \"scroll-content\",\n      onWheelPassive: _cache[0] || (_cache[0] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ], 544),\n    _withDirectives(_createElementVNode(\"div\", {\n      class: \"scroll-bar\",\n      style: _normalizeStyle(_ctx.scroll.sty),\n      onWheelPassive: _cache[3] || (_cache[3] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _withDirectives(_createElementVNode(\"div\", {\n        class: \"scroll-handle\",\n        style: _normalizeStyle(_ctx.handle.sty),\n        onPointerdown: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.startDrag && _ctx.startDrag(...args))),\n        onPointerup: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.stopDrag && _ctx.stopDrag(...args)))\n      }, null, 36), [\n        [_vShow, _ctx.showScrollbar]\n      ])\n    ], 36), [\n      [_vShow, _ctx.alwaysShowScrollBar || _ctx.showScrollbar]\n    ])\n  ]))\n}","\nimport { clamp } from \"@/assets/scripts/BlockDiagram\";\nimport { PointerTracker } from \"@/assets/scripts/PointerTracker\";\nimport { defineComponent, markRaw, Ref, ref } from 'vue';\n\nexport default defineComponent({\n  name: \"ScrollBox\",\n  setup() {\n    return { \n      content: ref<HTMLElement | null>(null)\n    }\n  },\n  props: {\n    resetScrollOnChange: {\n      type: Boolean,\n      default: false,\n    },\n    alwaysShowScrollBar: {\n      type: Boolean,\n      default: false\n    },\n    propagateScroll: {\n      type: Boolean,\n      default: true\n    },\n    handleColor: {\n      type: String,\n      default: \"#333333\"\n    },\n    scrollColor: {\n      type: String,\n      default: \"none\"\n    },\n    borderColor: {\n      type: String,\n      default: \"#404040\"\n    },\n    width: {\n      type: Number,\n      default: 17\n    }\n  },\n  data() {\n    return {\n      scrollTop: 0,\n      windowMax: 0,\n      scroll: {\n        sty: { \n          width: `${this.width}px`,\n          background: this.scrollColor\n        },\n      },\n      handle: {\n        trk: markRaw(new PointerTracker()),\n        hei: 0, \n        max: 0, \n        pos: 0,\n        sty: { \n          height: \"0px\", \n          transform: \"translateY(0px)\", \n          background: this.handleColor, \n          borderColor: this.borderColor,\n        },\n      },\n      showScrollbar: false,\n      onResizeObserver: null as ResizeObserver | null,\n      onMutateObserver: null as MutationObserver | null,\n    };\n  },\n  methods: {\n\n    /**\n     * Scroll handle drag start behavior.\n     * @param event\n     *  The pointer event.\n     */\n    startDrag(event: PointerEvent) {\n      this.handle.trk.capture(event, this.onDrag);\n      document.addEventListener(\"pointerup\", this.stopDrag, { once: true });\n    },\n\n    /**\n     * Scroll handle drag behavior.\n     * @param event\n     *  The pointer event.\n     * @param track\n     *  The mouse tracker.\n     */\n    onDrag(_: PointerEvent, track: PointerTracker) {\n      this.moveScrollPosition(\n        this.handleTopToTop(this.handle.pos + track.movementY)\n      );\n    },\n\n    /**\n     * Scroll handle drag stop behavior.\n     * @param event\n     *  The pointer event.\n     */\n    stopDrag(event: PointerEvent) {\n      this.handle.trk.release(event);\n    },\n\n    /**\n     * Calculates and configures the parameters required to mimic scrolling.\n     * \n     * NOTE:\n     * This function should be called anytime:\n     *  - The height of the scroll box changes.\n     *  - The height of the scroll content changes.\n     * \n     * @param resetTop\n     *  [true]\n     *   The scroll position will be set to 0, after recalculation.\n     *  [false]\n     *   The scroll position will go to its original spot, after recalculation.\n     *  (Default: true)\n     */\n    recalculateScrollState(resetTop: boolean = true) {\n      let showScrollbar = this.showScrollbar;\n      let content = this.content!;\n      // Ignore scroll content with no height\n      if(content.clientHeight === 0) {\n       this.showScrollbar = false;\n       return;\n      }\n      // Compute ratio\n      let ratio = content.clientHeight / content.scrollHeight;\n      // Update scroll state (-4 for the 2px of padding around the scrollbar)\n      this.handle.hei = Math.max(15, Math.round((content.clientHeight - 4) * ratio));\n      this.handle.max = content.clientHeight - this.handle.hei - 4;\n      this.windowMax  = content.scrollHeight - content.clientHeight;\n      // Update scroll handle\n      this.showScrollbar = ratio !== 1;\n      this.handle.sty.height = `${this.handle.hei}px`;\n      // Update scroll position\n      this.moveScrollPosition(resetTop ? 0 : content.scrollTop);\n      // If scrollbar added, recalculate state after scrollbar applied\n      if(!showScrollbar && this.showScrollbar) {\n        setTimeout(() => this.recalculateScrollState(resetTop), 0);\n      }\n    },\n\n    /**\n     * Moves the scroll position.\n     * @param position\n     *  The new scroll position.\n     * @param event\n     *  The scroll wheel event, if applicable.\n     */\n    moveScrollPosition(position: number, event: WheelEvent | null = null) {\n      let scrollTop = this.scrollTop;\n      this.scrollTop = clamp(position, 0, this.windowMax);\n      this.handle.pos = this.topToHandleTop(this.scrollTop);\n      this.handle.sty.transform = `translateY(${this.handle.pos}px)`;\n      this.content!.scrollTop = this.scrollTop;\n      // Selectively propagate scroll event\n      let hasMoved = scrollTop - this.scrollTop !== 0;\n      let canMove = 0 < this.scrollTop && this.scrollTop < this.windowMax;\n      if(!this.propagateScroll || hasMoved || canMove) {\n        event?.stopPropagation();\n      }\n    },\n    \n    /**\n     * Calculates the scroll handle position from the scroll position.\n     * @param top\n     *  The current scroll position.\n     * @returns\n     *  The calculated scroll handle position.\n     */\n    topToHandleTop(top: number): number {\n      return (top / this.windowMax) * this.handle.max;\n    },\n\n    /**\n     * Calculates the scroll position from the scroll handle position.\n     * @param top\n     *  The current scroll handle position.\n     * @returns\n     *  The calculated scroll position.\n     */\n    handleTopToTop(top: number): number {\n      return (top / this.handle.max) * this.windowMax;\n    }\n\n  },\n  mounted() {\n    // Configure mutation observer\n    let mutateOptions = { childList: true, characterData: true, subtree: true };\n    this.onMutateObserver = new MutationObserver(() => \n      this.recalculateScrollState(this.resetScrollOnChange)\n    );\n    // Configure resize observer\n    this.onResizeObserver = new ResizeObserver(() =>\n      this.recalculateScrollState(false)\n    );\n    this.onResizeObserver.observe(this.$el);\n    this.onMutateObserver.observe(this.content!, mutateOptions);\n  },\n  unmounted() {\n    this.onResizeObserver!.disconnect();\n    this.onMutateObserver!.disconnect();\n  },\n});\n","import { render } from \"./ScrollBox.vue?vue&type=template&id=cf54a08c&scoped=true&ts=true\"\nimport script from \"./ScrollBox.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollBox.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollBox.vue?vue&type=style&index=0&id=cf54a08c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cf54a08c\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5181abbf\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"dictionary-field-contents-control\" }\nconst _hoisted_2 = { class: \"field-name\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.fields, ([key, value]) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"field-item\",\n        key: key\n      }, [\n        _createElementVNode(\"p\", _hoisted_2, _toDisplayString(_ctx.titleCase(key)), 1),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n          class: \"field-value\",\n          property: value,\n          onChange: _cache[0] || (_cache[0] = (...args) => _ctx.$emit('change', ...args)),\n          onCreate: _cache[1] || (_cache[1] = (...args) => _ctx.$emit('create', ...args)),\n          onDelete: _cache[2] || (_cache[2] = (...args) => _ctx.$emit('delete', ...args))\n        }, null, 40, [\"property\"]))\n      ]))\n    }), 128))\n  ]))\n}","import { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-cfce8e40\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid-container\" }\nconst _hoisted_2 = { class: \"placeholder\" }\nconst _hoisted_3 = [\"contenteditable\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['text-field-control', { disabled: !_ctx.isEditable }]),\n    tabindex: \"0\",\n    onFocus: _cache[4] || (_cache[4] = ($event: any) => (_ctx.onFocus()))\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _withDirectives(_createElementVNode(\"p\", _hoisted_2, \" Null \", 512), [\n        [_vShow, _ctx.showPlaceholder]\n      ]),\n      _createElementVNode(\"div\", {\n        ref: \"field\",\n        class: \"field\",\n        onInput: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onInput && _ctx.onInput(...args))),\n        onKeyup: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"])),\n        onKeydown: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"])),\n        onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n        contenteditable: _ctx.isEditable\n      }, _toDisplayString(this.value), 41, _hoisted_3)\n    ])\n  ], 34))\n}","\nimport { StringProperty } from \"@/assets/scripts/BlockDiagram\";\nimport { defineComponent, markRaw, PropType, ref } from \"vue\";\n\nexport default defineComponent({\n  name: \"TextField\",\n  setup() {\n    return { field: ref<HTMLElement | null>(null) };\n  },\n  props: {\n    property: {\n      type: Object as PropType<StringProperty>,\n      required: true\n    },\n    updateTimeout: {\n      type: Number,\n      default: 300\n    }\n  },\n  data() {\n    return {\n      sto: 0,\n      value: \"\",\n      showPlaceholder: true,\n      activeProperty: markRaw(this.property)\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): StringProperty {\n      let trigger = this.activeProperty.trigger.value;\n      return trigger ? this.activeProperty : this.activeProperty; \n    },\n\n    /**\n     * Tests if the property is editable.\n     * @returns\n     *  True if the property is editable, false otherwise. \n     */\n    isEditable(): boolean {\n      return this._property.descriptor.is_editable ?? true;\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Field focus behavior.\n     */\n    onFocus() {\n      this.$nextTick(() => {\n        this.field!.focus();\n      });\n    },\n\n    /**\n     * Field input behavior.\n     */\n    onInput() {\n      // Clear timeout\n      clearTimeout(this.sto)\n      // Update cached value\n      this.value = this.field!.innerText;\n      // Configure timeout\n      this.sto = setTimeout(() => {\n        this.updateProperty();\n      }, this.updateTimeout);\n      // Update placeholder\n      this.showPlaceholder = this.field!.innerText === \"\";\n    },\n\n    /**\n     * Field blur behavior.\n     */\n    onBlur() {\n      // Clear timeout\n      clearTimeout(this.sto);\n      // Update property\n      this.updateProperty();\n    },\n\n    /**\n     * Updates the field's property value.\n     */\n    updateProperty() {\n      let value = this.value || null;\n      if(this._property.toRawValue() !== value) {\n        // Update property\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }\n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      this.value = this._property.toRawValue() || \"\";\n      this.showPlaceholder = this.value === \"\";\n    }\n\n  },\n  emits: [\"change\"],\n  watch: {\n    \"property\"() {\n        this.updateProperty();\n        this.activeProperty = markRaw(this.property);\n        this.refreshValue();\n    },\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    this.refreshValue();\n  },\n  unmounted() {\n    this.updateProperty();\n  }\n});\n","import { render } from \"./TextField.vue?vue&type=template&id=cfce8e40&scoped=true&ts=true\"\nimport script from \"./TextField.vue?vue&type=script&lang=ts\"\nexport * from \"./TextField.vue?vue&type=script&lang=ts\"\n\nimport \"./TextField.vue?vue&type=style&index=0&id=cfce8e40&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cfce8e40\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx, createBlock as _createBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f8ec412\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"list-field-control\" }\nconst _hoisted_2 = [\"onPointerdown\"]\nconst _hoisted_3 = [\"onPointerdown\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Plus = _resolveComponent(\"Plus\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx._property.value, ([key, value]) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"field-item\",\n        key: key\n      }, [\n        (_ctx.getField(value.type) === 'DictionaryField')\n          ? (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n              key: 0,\n              property: value,\n              onChange: _cache[0] || (_cache[0] = (...args) => _ctx.$emit('change', ...args)),\n              onCreate: _cache[1] || (_cache[1] = (...args) => _ctx.$emit('create', ...args)),\n              onDelete: _cache[2] || (_cache[2] = (...args) => _ctx.$emit('delete', ...args))\n            }, {\n              default: _withCtx(() => [\n                (_ctx.isEditable)\n                  ? (_openBlock(), _createElementBlock(\"button\", {\n                      key: 0,\n                      class: \"delete-button\",\n                      onPointerdown: ($event: any) => (_ctx.onDelete(key)),\n                      tabindex: \"-1\"\n                    }, \"✗\", 40, _hoisted_2))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 2\n            }, 1064, [\"property\"]))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n                property: value,\n                onChange: _cache[3] || (_cache[3] = (...args) => _ctx.$emit('change', ...args)),\n                onCreate: _cache[4] || (_cache[4] = (...args) => _ctx.$emit('create', ...args)),\n                onDelete: _cache[5] || (_cache[5] = (...args) => _ctx.$emit('delete', ...args))\n              }, null, 40, [\"property\"])),\n              (_ctx.isEditable)\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    class: \"delete-button\",\n                    onPointerdown: ($event: any) => (_ctx.onDelete(key)),\n                    tabindex: \"-1\"\n                  }, \"✗\", 40, _hoisted_3))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n      ]))\n    }), 128)),\n    (_ctx.isEditable)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: \"create-button\",\n          onPointerdown: _cache[6] || (_cache[6] = ($event: any) => (_ctx.onCreate()))\n        }, [\n          _createElementVNode(\"span\", null, [\n            _createVNode(_component_Plus)\n          ]),\n          _createTextVNode(\"Add \")\n        ], 32))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"fill\"]\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"m0.79375 0v0.79375h-0.79375v0.52917h0.79375v0.79375h0.52917v-0.79375h0.79375v-0.52917h-0.79375v-0.79375z\" }, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    width: \"8\",\n    height: \"8\",\n    version: \"1.1\",\n    viewBox: \"0 0 2.1167 2.1167\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: _ctx.color\n  }, _hoisted_3, 8, _hoisted_1))\n}","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({ \n  name: \"Plus\",\n  props: {\n    color: {\n      type: String,\n      default: \"#737373\"\n    }\n  }\n});\n","import { render } from \"./Plus.vue?vue&type=template&id=4511a762&ts=true\"\nimport script from \"./Plus.vue?vue&type=script&lang=ts\"\nexport * from \"./Plus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2178b796\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid-container\" }\nconst _hoisted_2 = { class: \"value-container\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dropdown-arrow\"\n}\nconst _hoisted_4 = { class: \"dropdown-options\" }\nconst _hoisted_5 = [\"onMouseenter\", \"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    class: _normalizeClass(['enum-field-control', { disabled: !_ctx.isEditable, open: _ctx.showMenu }]),\n    onFocus: _ctx.openMenu,\n    onUnfocus: _ctx.closeMenu\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(['value-text', { 'is-null': _ctx.isNull }])\n          }, _toDisplayString(_ctx._property.toString()), 3),\n          (_ctx.isEditable)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"▼\"))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (_ctx.showMenu)\n          ? (_openBlock(), _createBlock(_component_ScrollBox, {\n              key: 0,\n              propagateScroll: false,\n              style: _normalizeStyle(_ctx.style)\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"ul\", _hoisted_4, [\n                  _createElementVNode(\"li\", {\n                    class: _normalizeClass([{ active: _ctx.hovered === 'null' }, 'null']),\n                    onMouseenter: _cache[0] || (_cache[0] = ($event: any) => (_ctx.hovered = 'null')),\n                    onClick: _cache[1] || (_cache[1] = _withModifiers(($event: any) => (_ctx.updateProperty(null)), [\"stop\"]))\n                  }, \" Null \", 34),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.options, ([k, v]) => {\n                    return (_openBlock(), _createElementBlock(\"li\", {\n                      key: k,\n                      class: _normalizeClass({ active: _ctx.hovered === k }),\n                      onMouseenter: ($event: any) => (_ctx.hovered = k),\n                      onClick: _withModifiers(($event: any) => (_ctx.updateProperty(k)), [\"stop\"])\n                    }, _toDisplayString(v.toString()), 43, _hoisted_5))\n                  }), 128))\n                ])\n              ]),\n              _: 1\n            }, 8, [\"style\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _: 1\n  }, 8, [\"class\", \"onFocus\", \"onUnfocus\"]))\n}","\n// Dependencies\nimport { EnumProperty, Property } from \"@/assets/scripts/BlockDiagram\";\nimport { defineComponent, PropType } from \"vue\";\n// Components\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\n\nexport default defineComponent({\n  name: \"EnumField\",\n  props: {\n    property: {\n      type: Object as PropType<EnumProperty>,\n      required: true\n    },\n    maxHeight: {\n      type: Number,\n      default: 200\n    }\n  },\n  data() {\n    return {\n      hovered: \"\",\n      showMenu: false\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): EnumProperty {\n      let trigger = this.property.trigger.value;\n      return trigger ? this.property : this.property; \n    },\n\n    /**\n     * Tests if the property is editable.\n     * @returns\n     *  True if the property is editable, false otherwise. \n     */\n    isEditable(): boolean {\n      return this._property.descriptor.is_editable ?? true;\n    },\n\n    /**\n     * Returns the property's set of options.\n     * @returns\n     *  The property's set of options.\n     */\n    options(): Map<string, Property> {\n      return this._property.options.value;\n    },\n\n    /**\n     * Tests if the property's value is null.\n     * @returns\n     *  True if the property's value is null, false otherwise.\n     */\n    isNull(): boolean {\n      return this._property.toRawValue() === null;\n    },\n\n    /**\n     * Returns the scrollbox's style.\n     * @returns\n     *  The scrollbox's style.\n     */\n    style(): { maxHeight: string } {\n      return { maxHeight: `${ this.maxHeight }px` };\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Opens the options menu.\n     */\n    openMenu() {\n      if(!this.isEditable) {\n        return;\n      }\n      this.showMenu = true;      \n    },\n\n    /**\n     * Closes the options menu.\n     */\n    closeMenu() {\n      // Close menu\n      this.showMenu = false;\n      // Refresh value\n      this.refreshValue();\n    },\n\n    /**\n     * Updates the field's property value.\n     * @param value\n     *  The property's new value.\n     */\n    updateProperty(value: string | null) {\n      if(this._property.toRawValue() !== value) {\n        // Update property\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }\n      // Close menu\n      this.showMenu = false;\n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      this.hovered = this._property.toRawValue() ?? \"null\"\n    }\n    \n  },\n  emits: [\"change\"],\n  watch: {\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    this.refreshValue();\n  },\n  components: { FocusBox, ScrollBox }\n});\n","import { render } from \"./EnumField.vue?vue&type=template&id=2178b796&scoped=true&ts=true\"\nimport script from \"./EnumField.vue?vue&type=script&lang=ts\"\nexport * from \"./EnumField.vue?vue&type=script&lang=ts\"\n\nimport \"./EnumField.vue?vue&type=style&index=0&id=2178b796&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2178b796\"]])\n\nexport default __exports__","import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9dabcc18\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"disabled\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"increment-arrows\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['number-field-control', { disabled: !_ctx.isEditable }]),\n    tabindex: \"0\",\n    onFocus: _cache[6] || (_cache[6] = ($event: any) => (_ctx.onFocus()))\n  }, [\n    _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.value) = $event)),\n      type: \"text\",\n      ref: \"field\",\n      placeholder: \"Null\",\n      onInput: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onInput && _ctx.onInput(...args))),\n      onKeydown: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n      onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n      disabled: !_ctx.isEditable\n    }, null, 40, _hoisted_1), [\n      [_vModelText, _ctx.value]\n    ]),\n    (_ctx.isEditable)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: \"up-arrow\",\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.updateProperty(+1)))\n          }, \"▲\"),\n          _createElementVNode(\"div\", {\n            class: \"down-arrow\",\n            onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.updateProperty(-1)))\n          }, \"▼\")\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 34))\n}","\nimport { defineComponent, markRaw, PropType, ref } from \"vue\";\nimport { clamp, NumberProperty, PropertyType } from \"@/assets/scripts/BlockDiagram\";\n\nexport default defineComponent({\n  name: \"NumberField\",\n  setup() {\n    return { field: ref<HTMLInputElement | null>(null) };\n  },\n  props: {\n    property: {\n      type: Object as PropType<NumberProperty>,\n      required: true\n    }\n  },\n  data() {\n    return {\n      value: \"\",\n      activeProperty: markRaw(this.property)\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): NumberProperty {\n      let trigger = this.activeProperty.trigger.value;\n      return trigger ? this.activeProperty : this.activeProperty; \n    },\n    \n    /**\n     * Tests if the property is editable.\n     * @returns\n     *  True if the property is editable, false otherwise. \n     */\n    isEditable(): boolean {\n      return this._property.descriptor.is_editable ?? true;\n    }\n\n  },\n  methods: {\n\n    /**\n     * Field focus behavior.\n     */\n    onFocus() {\n      this.$nextTick(() => {\n        this.field!.focus();\n      });\n    },\n\n    /**\n     * Field input behavior.\n     */\n    onInput() {\n      if(this.value === \"\") {\n        this.updateProperty(0);\n      }\n    },\n\n    /**\n     * Field blur behavior.\n     */\n    onBlur() {\n      this.updateProperty(0);\n    },\n\n    /**\n     * Field keydown behavior.\n     * @param event\n     *  The keydown event.\n     */\n    onKeyDown(event: KeyboardEvent) {\n      switch(event.key) {\n        case \"ArrowUp\":\n          event.preventDefault();\n          this.updateProperty(+1);\n          break;\n        case \"ArrowDown\":\n          event.preventDefault();\n          this.updateProperty(-1);\n          break;\n      }\n    },\n\n    /**\n     * Updates the field's property value.\n     * @param delta\n     *  The amount to add to the parsed value.\n     *  (Default: 0)\n     */\n    updateProperty(delta: number = 0) {\n      let value;\n      if(this.value === \"\" && delta === 0) {\n        // Parse null\n        value = null;\n      } else {\n        // Parse value\n        value = parseFloat(this.value);\n        if(Number.isNaN(value)) {\n          value = 0;\n        } else {\n          value += delta;\n        }\n        // Bound value\n        let { min, max } = this._property;\n        value = clamp(value, min, max); \n        // Bound type\n        if(this._property.type === PropertyType.Int) {\n          value = Math.round(value);\n        }\n      }\n      if(this._property.toRawValue() !== value) {\n        // Update value\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }  \n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      this.value = `${ this._property.toRawValue() ?? \"\" }`\n    }\n    \n  },\n  emits: [\"change\"],\n  watch: {\n    \"property\"() {\n      this.updateProperty();\n      this.activeProperty = markRaw(this.property);\n      this.refreshValue();\n    },\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    this.refreshValue();\n  },\n  unmounted() {\n    this.updateProperty();\n  }\n});\n","import { render } from \"./NumberField.vue?vue&type=template&id=9dabcc18&scoped=true&ts=true\"\nimport script from \"./NumberField.vue?vue&type=script&lang=ts\"\nexport * from \"./NumberField.vue?vue&type=script&lang=ts\"\n\nimport \"./NumberField.vue?vue&type=style&index=0&id=9dabcc18&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9dabcc18\"]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f049ed0a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid-container\" }\nconst _hoisted_2 = { class: \"value\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"null-value\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"date-value\"\n}\nconst _hoisted_5 = { class: \"editor\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"/\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"/\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"space\" }, null, -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1))\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"timezone\" }, \"Z\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['datetime-field-control', { disabled: !_ctx.isEditable }]),\n    tabindex: \"0\",\n    onFocus: _cache[18] || (_cache[18] = ($event: any) => (_ctx.enterEditMode()))\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n        (_ctx.value === null)\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \" Null \"))\n          : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(_ctx.prop_M) + \" \" + _toDisplayString(_ctx.prop_D) + \", \" + _toDisplayString(_ctx.prop_Y) + \" - \" + _toDisplayString(_ctx.prop_H) + \":\" + _toDisplayString(_ctx.prop_m) + \":\" + _toDisplayString(_ctx.prop_s), 1))\n      ], 512), [\n        [_vShow, !_ctx.showEditor]\n      ]),\n      _withDirectives(_createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"M\",\n          ref: \"M\",\n          class: \"M\",\n          placeholder: \"MM\",\n          onBlur: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.value_M) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_M]\n        ]),\n        _hoisted_6,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"D\",\n          ref: \"D\",\n          class: \"D\",\n          placeholder: \"DD\",\n          onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.value_D) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_D]\n        ]),\n        _hoisted_7,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"4\",\n          segment: \"Y\",\n          ref: \"Y\",\n          class: \"Y\",\n          placeholder: \"YYYY\",\n          onBlur: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.value_Y) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_Y]\n        ]),\n        _hoisted_8,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"H\",\n          ref: \"H\",\n          class: \"H\",\n          placeholder: \"HH\",\n          onBlur: _cache[9] || (_cache[9] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[10] || (_cache[10] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.value_H) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_H]\n        ]),\n        _hoisted_9,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"m\",\n          ref: \"m\",\n          class: \"m\",\n          placeholder: \"mm\",\n          onBlur: _cache[12] || (_cache[12] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[13] || (_cache[13] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.value_m) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_m]\n        ]),\n        _hoisted_10,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"s\",\n          ref: \"s\",\n          class: \"s\",\n          placeholder: \"ss\",\n          onBlur: _cache[15] || (_cache[15] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[16] || (_cache[16] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.value_s) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_s]\n        ]),\n        _hoisted_11\n      ], 512), [\n        [_vShow, _ctx.showEditor]\n      ])\n    ])\n  ], 34))\n}","\nimport { DateProperty } from \"@/assets/scripts/BlockDiagram\";\nimport { defineComponent, markRaw, PropType, ref } from \"vue\";\n\nconst Segment = [\n  \"M\", \"D\", \"Y\",\n  \"H\", \"m\", \"s\"\n]\n\nconst Months = [\n  \"Jan\", \"Feb\", \"Mar\", \n  \"Apr\", \"May\", \"Jun\",\n  \"Jul\", \"Aug\", \"Sep\",\n  \"Oct\", \"Nov\", \"Dec\"\n]\n\nexport default defineComponent({\n  name: \"DateTimeField\",\n  setup() {\n    return { \n      M: ref<HTMLInputElement | null>(null),\n      D: ref<HTMLInputElement | null>(null),\n      Y: ref<HTMLInputElement | null>(null),\n      H: ref<HTMLInputElement | null>(null),\n      m: ref<HTMLInputElement | null>(null),\n      s: ref<HTMLInputElement | null>(null),\n    };\n  },\n  props: {\n    property: {\n      type: Object as PropType<DateProperty>,\n      required: true\n    }\n  },\n  data() {\n    return {\n      value_M: \"\",\n      value_D: \"\",\n      value_Y: \"\",\n      value_H: \"\",\n      value_m: \"\",\n      value_s: \"\",\n      showEditor: false,\n      activeProperty: markRaw(this.property)\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): DateProperty {\n      let trigger = this.activeProperty.trigger.value;\n      return trigger ? this.activeProperty : this.activeProperty;\n    },\n\n    /**\n     * Tests if the property is editable.\n     * @returns\n     *  True if the property is editable, false otherwise. \n     */\n    isEditable(): boolean {\n      return this._property.descriptor.is_editable ?? true;\n    },\n\n    /**\n     * The property's raw value.\n     * @returns\n     *  the property's raw value.\n     */\n    value(): Date | null {\n      let value = this._property.toRawValue();\n      return value !== null ? new Date(value) : value;\n    },\n\n    /**\n     * Returns the currently configured month.\n     * @returns\n     *  The currently configured month.\n     */\n    prop_M(): string {\n      let v = this.value;\n      return v ? Months[v.getUTCMonth()] : \"Null\";\n    },\n\n    /**\n     * Returns the currently configured day.\n     * @returns\n     *  The currently configured day.\n     */\n    prop_D(): string {\n      let v = this.value;\n      return `${ v?.getUTCDate() ?? 'Null' }`;\n    },\n    \n    /**\n     * Returns the currently configured year.\n     * @returns\n     *  The currently configured year.\n     */\n    prop_Y(): string {\n      let v = this.value;\n      return `${ v?.getUTCFullYear() ?? 'Null' }`;\n    },\n\n    /**\n     * Returns the currently configured hour.\n     * @returns\n     *  The currently configured hour.\n     */\n    prop_H(): string {\n      let v = this.value;\n      return v ? `${ v.getUTCHours() }`.padStart(2, '0') : \"Null\";\n    },\n\n    /**\n     * Returns the currently configured minute.\n     * @returns\n     *  The currently configured minute.\n     */\n    prop_m(): string {\n      let v = this.value;\n      return v ? `${ v.getUTCMinutes() }`.padStart(2, '0') : \"Null\";\n    },\n\n    /**\n     * Returns the currently configured second.\n     * @returns\n     *  The currently configured second.\n     */\n    prop_s(): string {\n      let v = this.value;\n      return v ? `${ v.getUTCSeconds() }`.padStart(2, '0') : \"Null\";\n    }\n\n  },\n  methods: {\n\n    /**\n     * Field segment blur behavior.\n     * @param event\n     *  The blur event.\n     */\n    onBlur(event: FocusEvent) {\n      if(!this.$el.contains(event.relatedTarget)) {\n        this.exitEditMode();\n      }\n    },\n\n    /**\n     * Field segment keydown behavior.\n     * @param event\n     *  The keydown event.\n     */\n    onKeyDown(event: KeyboardEvent) {\n      let field = event.target as HTMLInputElement;\n      if(field.selectionStart !== field.selectionEnd) {\n        return;\n      }\n      switch(event.key) {\n        case \"Backspace\":\n          if(field.selectionEnd === 0) {\n            this.shiftFocus(-1, false);\n          }\n          break;\n        case \"ArrowLeft\":\n          if(field.selectionEnd === 0) {\n            this.shiftFocus(-1, false);\n            event.preventDefault();\n          }\n          break;\n        case \"ArrowRight\":\n          if(field.selectionEnd === field.maxLength) {\n            this.shiftFocus(+1, true);\n            event.preventDefault();\n          }\n          break;\n        default:\n          if(field.selectionEnd === field.maxLength) {\n            this.shiftFocus(+1, true);\n          }\n      }\n    },\n\n    /**\n     * Enters edit mode.\n     */\n    enterEditMode() {\n      if(!this.isEditable) {\n        return;\n      }\n      this.showEditor = true;\n      this.$nextTick(() => {\n        // Select field\n        let field: HTMLInputElement;\n        for(let s of Segment) {\n          field = (this as any)[s];\n          if(!field.value) break;\n        }\n        // Focus field\n        field!.focus();\n        // Position caret\n        field!.selectionEnd = field!.value.length;\n      })\n    },\n\n    /**\n     * Exits edit mode.\n     */\n    exitEditMode() {\n      this.updateProperty();\n      this.showEditor = false;\n    },\n\n    /**\n     * Shifts focus from the current segment to an adjacent segment.\n     * @param delta\n     *  The number of segments to shift over.\n     * @param start\n     *  [true]\n     *   Position caret at the start of the segment.\n     *  [false]\n     *   Position caret at the end of the segment.\n     *  (Default: true)\n     */\n    shiftFocus(delta: number, start: boolean = true) {\n      let field = document.activeElement as HTMLInputElement;\n      let index = Segment.indexOf(field.getAttribute(\"segment\")!) + delta;\n      if(0 <= index && index < Segment.length) {\n        this.$nextTick(() => {\n          // Get adjacent segment\n          let adj: HTMLInputElement = (this as any)[Segment[index]];\n          // Focus adjacent segment\n          adj.focus();\n          // Position caret\n          adj.selectionEnd = start ? 0 : adj.value.length;\n        });\n      }\n    },\n\n    /**\n     * Updates the field's property value.\n     */\n    updateProperty() {\n      // Parse date\n      let ISO8601 = `${ \n        this.value_Y.padStart(4, \"0\")\n      }-${\n        this.value_M.padStart(2, \"0\")\n      }-${\n        this.value_D.padStart(2, \"0\")\n      }T${\n        this.value_H.padStart(2, \"0\")\n      }:${\n        this.value_m.padStart(2, \"0\")\n      }:${\n        this.value_s.padStart(2, \"0\")\n      }.000Z`;\n      let date = new Date(ISO8601);\n      // Parse value\n      let value;\n      if(ISO8601 === \"0000-00-00T00:00:00.000Z\") {\n        value = null;\n      } else if(Number.isNaN(date.getTime())) {\n        value = null;\n      } else {\n        value = date;\n      }\n      if(this.value?.getTime() !== value?.getTime()) {\n        // Update value\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }\n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      // Parse date\n      let date = this.value?.toISOString() ?? \"--T::\";\n      let [ Y, M, D, H, m, s ] = date.split(/[-T:\\.]/);\n      // Update values\n      this.value_Y = Y;\n      this.value_M = M;\n      this.value_D = D;\n      this.value_H = H;\n      this.value_m = m;\n      this.value_s = s;\n    }\n\n  },\n  emits: [\"change\"],\n  watch: {\n    \"property\"() {\n      this.updateProperty();\n      this.activeProperty = markRaw(this.property);\n      this.refreshValue();\n    },\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    this.refreshValue();\n  },\n  unmounted() {\n    this.updateProperty();\n  }\n});\n","import { render } from \"./DateTimeField.vue?vue&type=template&id=f049ed0a&scoped=true&ts=true\"\nimport script from \"./DateTimeField.vue?vue&type=script&lang=ts\"\nexport * from \"./DateTimeField.vue?vue&type=script&lang=ts\"\n\nimport \"./DateTimeField.vue?vue&type=style&index=0&id=f049ed0a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f049ed0a\"]])\n\nexport default __exports__","\n// Dependencies\nimport { ListProperty, PropertyType } from \"@/assets/scripts/BlockDiagram\";\nimport { defineAsyncComponent, defineComponent, PropType } from \"vue\";\n// Components\nimport Plus from \"@/components/Icons/Plus.vue\";\nimport TextField from \"./TextField.vue\";\nimport EnumField from \"./EnumField.vue\";\nimport NumberField from \"./NumberField.vue\";\nimport DateTimeField from \"./DateTimeField.vue\";\nconst DictionaryField = defineAsyncComponent(() => import(\"./DictionaryField.vue\")) as any;\n\nexport default defineComponent({\n  name: \"ListField\",\n  props: {\n    property: {\n      type: Object as PropType<ListProperty>,\n      required: true\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): ListProperty {\n      let trigger = this.property.trigger.value;\n      return trigger ? this.property : this.property; \n    },\n\n    /**\n     * Tests if the property is editable.\n     * @returns\n     *  True if the property is editable, false otherwise. \n     */\n    isEditable(): boolean {\n      return this._property.descriptor.is_editable ?? true;\n    }\n\n  },\n  methods: {\n   \n    /**\n     * Returns a field's component type.\n     * @param type\n     *  The type of field.\n     * @returns\n     *  The field's component type.\n     */\n    getField(type: PropertyType): string | undefined {\n      switch(type) {\n        case PropertyType.Int:\n        case PropertyType.Float:\n          return \"NumberField\";\n        case PropertyType.String:\n          return \"TextField\";\n        case PropertyType.Date:\n          return \"DateTimeField\";\n        case PropertyType.Enum:\n          return \"EnumField\";\n        case PropertyType.List:\n          return \"ListField\";\n        case PropertyType.Dictionary:\n          return \"DictionaryField\";\n      }\n    },\n\n    /**\n     * Create subproperty behavior.\n     */\n    onCreate() {\n      this.$emit(\"create\", this._property);\n    },\n\n    /**\n     * Delete subproperty behavior.\n     * @param id\n     *  The subproperty's id.\n     */\n    onDelete(id: string) {\n      this.$emit(\"delete\", this._property, id);\n    }\n\n  },\n  emits: [\"change\", \"create\", \"delete\"],\n  components: {\n    Plus,\n    TextField,\n    EnumField,\n    NumberField,\n    DateTimeField,\n    DictionaryField\n  }\n});\n","import { render } from \"./ListField.vue?vue&type=template&id=1f8ec412&scoped=true&ts=true\"\nimport script from \"./ListField.vue?vue&type=script&lang=ts\"\nexport * from \"./ListField.vue?vue&type=script&lang=ts\"\n\nimport \"./ListField.vue?vue&type=style&index=0&id=1f8ec412&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f8ec412\"]])\n\nexport default __exports__","\n// Dependencies\nimport { defineAsyncComponent, defineComponent, PropType } from \"vue\";\nimport { DictionaryProperty, Property, PropertyType, titleCase } from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport TextField from \"./TextField.vue\";\nimport ListField from \"./ListField.vue\";\nimport EnumField from \"./EnumField.vue\";\nimport NumberField from \"./NumberField.vue\";\nimport DateTimeField from \"./DateTimeField.vue\";\nconst DictionaryField = defineAsyncComponent(() => import(\"./DictionaryField.vue\")) as any;\n\nexport default defineComponent({\n  name: \"DictionaryFieldContents\",\n  props: {\n    property: {\n      type: Object as PropType<DictionaryProperty>,\n      required: true\n    }\n  },\n  computed: {\n    \n    /**\n     * The set of visible properties.\n     * @returns\n     *  The set of visible properties.\n     */\n    fields(): [string, Property][] {\n      return [...this.property.value.entries()].filter(\n        o => o[1].descriptor.is_visible ?? true\n      );\n    }\n\n  },\n  methods: {\n   \n    /**\n     * Returns a field's component type.\n     * @param type\n     *  The type of field.\n     * @returns\n     *  The field's component type.\n     */\n    getField(type: PropertyType): string | undefined {\n      switch(type) {\n        case PropertyType.String:\n          return \"TextField\";\n        case PropertyType.Int:\n        case PropertyType.Float:\n          return \"NumberField\";\n        case PropertyType.Date:\n          return \"DateTimeField\";\n        case PropertyType.Enum:\n          return \"EnumField\";\n        case PropertyType.List:\n          return \"ListField\";\n        case PropertyType.Dictionary:\n          return \"DictionaryField\";\n      }\n    },\n\n    titleCase\n\n  },\n  emits: [\"change\", \"create\", \"delete\"],\n  components: {\n    TextField,\n    ListField,\n    EnumField,\n    NumberField,\n    DateTimeField,\n    DictionaryField\n  }\n});\n","import { render } from \"./DictionaryFieldContents.vue?vue&type=template&id=5181abbf&scoped=true&ts=true\"\nimport script from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\nexport * from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\n\nimport \"./DictionaryFieldContents.vue?vue&type=style&index=0&id=5181abbf&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5181abbf\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d69016e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"fill\"]\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"m2.1167 0-1.0583 1.3229-1.0583-1.3229z\",\n  \"stroke-width\": \"0\"\n}, null, -1))\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    width: \"8\",\n    height: \"5\",\n    fill: _ctx.color,\n    class: _normalizeClass({ collapsed: _ctx.collapsed }),\n    version: \"1.1\",\n    viewBox: \"0 0 2.1167 1.3229\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, _hoisted_3, 10, _hoisted_1))\n}","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"CollapseArrow\",\n  props: {\n    collapsed: {\n      type: Boolean,\n      default: false \n    },\n    color: {\n      type: String,\n      default: \"#8c8c8c\"\n    }\n  }\n});\n","import { render } from \"./CollapseArrow.vue?vue&type=template&id=2d69016e&scoped=true&ts=true\"\nimport script from \"./CollapseArrow.vue?vue&type=script&lang=ts\"\nexport * from \"./CollapseArrow.vue?vue&type=script&lang=ts\"\n\nimport \"./CollapseArrow.vue?vue&type=style&index=0&id=2d69016e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2d69016e\"]])\n\nexport default __exports__","import { generateBitMask } from \"./Utilities\";\nimport { SemanticRole as SemanticRoleEnum } from \"./DiagramFactory\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Attributes  ////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const Alignment = {\n    Free       : 0b000000000000000,\n    Grid       : 0b000000000000001\n}\nexport const AlignmentMask = generateBitMask(Alignment);\n\nexport const Cursor = {\n    Default    : 0b000000000000000,\n    Pointer    : 0b000000000000010,\n    Crosshair  : 0b000000000000100,\n    Move       : 0b000000000000110,\n    NotAllowed : 0b000000000001000,\n    Grab       : 0b000000000001010,\n    Grabbing   : 0b000000000001100,\n    N_Resize   : 0b000000000001110,\n    E_Resize   : 0b000000000010000,\n    S_Resize   : 0b000000000010010,\n    W_Resize   : 0b000000000010100,\n    EW_Resize  : 0b000000000010110,\n    NS_Resize  : 0b000000000011000,\n    Col_Resize : 0b000000000011010,\n    Row_Resize : 0b000000000011100\n}\nexport const CursorMask = generateBitMask(Cursor);\n\nexport const Hover = {\n    Off        : 0b000000000000000,\n    Direct     : 0b000000000100000,\n    Indirect   : 0b000000001000000\n}\nexport const HoverMask = generateBitMask(Hover);\n\nexport const InheritAlignment = {\n    False      : 0b000000000000000,\n    True       : 0b000000010000000\n}\nexport const InheritAlignmentMask = generateBitMask(InheritAlignment);\n\nexport const PositionSetByUser = {\n    False      : 0b000000000000000,\n    True       : 0b000000100000000\n}\nexport const PositionSetByUserMask = generateBitMask(PositionSetByUser);\n\nexport const Priority = {\n    Normal     : 0b000001000000000,\n    High       : 0b000010000000000\n}\nexport const PriorityMask = generateBitMask(Priority);\n\nexport const Select = {\n    False      : 0b000000000000000,\n    True       : 0b000100000000000,\n}\nexport const SelectMask = generateBitMask(Select);\n\nconst SemanticRole = {\n    None       : SemanticRoleEnum.None,\n    Node       : SemanticRoleEnum.Node,\n    Edge       : SemanticRoleEnum.Edge,\n    LinkSource : SemanticRoleEnum.LinkSource,\n    LinkTarget : SemanticRoleEnum.LinkTarget\n}\nexport const SemanticRoleMask = generateBitMask(SemanticRole);\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Attribute Maps  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const CursorCssName = {\n    [Cursor.Default]    : \"default\",\n    [Cursor.Pointer]    : \"pointer\",\n    [Cursor.Crosshair]  : \"crosshair\",\n    [Cursor.Move]       : \"move\",\n    [Cursor.NotAllowed] : \"not-allowed\",\n    [Cursor.Grab]       : \"grab\",\n    [Cursor.Grabbing]   : \"grabbing\",\n    [Cursor.N_Resize]   : \"n-resize\",\n    [Cursor.E_Resize]   : \"e-resize\",\n    [Cursor.S_Resize]   : \"s-resize\",\n    [Cursor.W_Resize]   : \"w-resize\",\n    [Cursor.EW_Resize]  : \"ew-resize\",\n    [Cursor.NS_Resize]  : \"ns-resize\",\n    [Cursor.Col_Resize] : \"col-resize\",\n    [Cursor.Row_Resize] : \"row-resize\"\n}\n","import { round } from \"../Utilities\";\nimport { Alignment } from \"../Attributes\";\nimport { DiagramAnchorModel } from \"../DiagramModelTypes\";\n\nexport class DiagramObjectMover { \n\n    /**\n     * The object's current delta-x.\n     */\n    public dx: number;\n\n    /**\n     * The object's current delta-y.\n     */\n    public dy: number;\n\n    /**\n     * The object's origin on the x-axis.\n     */\n    public ox: number;\n\n    /**\n     * The object's origin on the y-axis.\n     */\n    public oy: number;\n\n    /**\n     * The object's total delta-x.\n     */\n    public odx: number;\n\n    /**\n     * The object's total delta-y.\n     */\n    public ody: number;\n\n    /**\n     * The anchor the object is currently over.\n     */\n    public anchor: DiagramAnchorModel | undefined;\n\n    /**\n     * The cursor's origin on the x-axis.\n     */\n    private _cx: number;\n\n    /**\n     * The cursor's origin on the y-axis.\n     */\n    private _cy: number;\n\n    /**\n     * The cursor's total delta-x.\n     */\n    private _cdx: number;\n\n    /**\n     * The cursor's total delta-y.\n     */\n    private _cdy: number;\n\n    /**\n     * The object's alignment.\n     */\n    private _alignment: number;\n\n    /**\n     * The grid size on the x-axis.\n     */\n    private _gridX: number;\n\n    /**\n     * The grid size on the y-axis.\n     */\n    private _gridY: number;\n\n    /**\n     * The mover's anchors.\n     */\n    private _anchors: DiagramAnchorModel[];\n\n\n    /**\n     * Creates a new {@link DiagramObjectMover}.\n     * @param gridX\n     *  The grid size on the x-axis. \n     * @param gridY\n     *  The grid size on the y-axis.\n     */\n    constructor(gridX: number, gridY: number) {\n        this.dx = 0;\n        this.dy = 0;\n        this.ox = 0;\n        this.oy = 0;\n        this.odx = 0;\n        this.ody = 0;\n        this.anchor = undefined;\n        this._cx = 0;\n        this._cy = 0;\n        this._cdx = 0;\n        this._cdy = 0;\n        this._alignment = Alignment.Free,\n        this._gridX = gridX;\n        this._gridY = gridY;\n        this._anchors = [];\n    }\n\n    /**\n     * Resets the object mover.\n     * @param alignment\n     *  The new alignment.\n     * @param cy\n     *  The cursor's origin on the x-axis.\n     * @param cx\n     *  The cursor's origin on the y-axis.\n     * @param ox\n     *  The object's origin on the x-axis.\n     * @param oy\n     *  The object's origin on the y-axis.\n     * @param anchors\n     *  The set of anchors to track.\n     */\n    public reset(\n        alignment: number, \n        cx: number, cy: number,\n        ox: number, oy: number,\n        anchors?: DiagramAnchorModel[]\n    ) {\n        this.dx = 0;\n        this.dy = 0;\n        this.ox = ox;\n        this.oy = oy;\n        this.odx = 0;\n        this.ody = 0;\n        this.anchor = undefined;\n        this._cx = cx;\n        this._cy = cy;\n        this._cdx = 0;\n        this._cdy = 0;\n        this._alignment = alignment;\n        this._anchors = anchors ?? [];\n    }\n\n    /**\n     * Calculates the actual delta from the current delta.\n     * @param dx\n     *  The current delta-x.\n     * @param dy\n     *  The current delta-y.\n     */\n    public updateDelta(dx: number, dy: number) {\n        this._cdx += dx;\n        this._cdy += dy;\n        let cursorX = this._cx + this._cdx;\n        let cursorY = this._cy + this._cdy;\n        // Assess anchors\n        let r, ax, ay, bb;\n        for(let anchor of this._anchors) {\n            bb = anchor.boundingBox;\n            r = anchor.radius;\n            ax = bb.xMid - cursorX;\n            ay = bb.yMid - cursorY;\n            if(ax * ax + ay * ay < r * r) {\n                this.dx = bb.xMid - (this.ox + this.odx);\n                this.dy = bb.yMid - (this.oy + this.ody);\n                this.odx += this.dx;\n                this.ody += this.dy;\n                this.anchor = anchor;\n                return;\n            }\n        }\n        // Assess position\n        this.anchor = undefined;\n        switch(this._alignment) {\n            case Alignment.Grid:\n                this.dx = round(this._cdx, this._gridX) - this.odx;\n                this.dy = round(this._cdy, this._gridY) - this.ody; \n                break;\n            case Alignment.Free:\n            default:\n                this.dx = this._cdx - this.odx;\n                this.dy = this._cdy - this.ody;\n                break;\n        }\n        this.odx += this.dx;\n        this.ody += this.dy;\n    }\n\n}\n","export class DiagramDisplaySettings {\n\n    /**\n     * If the grid should be displayed or not.\n     */\n    public showGrid: boolean;\n\n    /**\n     * If shadow's should be displayed or not.\n     */\n    public showShadows: boolean;\n    \n    /**\n     * If debug information should be displayed or not.\n     */\n    public showDebug: boolean;\n\n    /**\n     * The diagram's supersampling anti-aliasing (SSAA) level.\n     */\n    public ssaaScale: number;\n\n    /**\n     * Sets the scale level shadows disable at.\n     */\n    public shadowsDisableAt: number;\n\n    /**\n     * Creates a new {@link DiagramDisplaySettings}.\n     */\n    constructor() {\n        this.showGrid = true;\n        this.showShadows = true;\n        this.showDebug = false;\n        this.ssaaScale = 1;\n        this.shadowsDisableAt = 0;\n    }\n\n}\n","import * as d3 from \"d3\";\nimport { RasterCache } from \"./RasterCache\";\nimport { ViewportRegion } from \"./ViewportRegion\";\nimport { DiagramObjectMover } from \"./DiagramObjectMover\";\nimport { DiagramDisplaySettings } from \"./DiagramDisplaySettings\";\nimport { CameraLocation } from \"./Camera\";\nimport {\n    EventEmitter,\n    MouseClick\n} from \"../Utilities\";\nimport {\n    DiagramLineModel,\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    PageModel,\n    DiagramAnchorableModel\n} from \"../DiagramModelTypes\";\nimport {\n    DiagramAnchorableView,\n    DiagramLineEndingView,\n    DiagramLineView,\n    DiagramObjectView,\n    PageView\n} from \"../DiagramViewTypes\";\nimport {\n    Alignment,\n    Cursor,\n    PositionSetByUser\n} from \"../Attributes\";\n\nexport class BlockDiagram extends EventEmitter {\n\n    /**\n     * The viewport's padding.\n     */\n    private static readonly VIEWPORT_PADDING = 0;\n\n    /**\n     * When a zoom action occurs, this constant defines that amount of time to\n     * wait (in milliseconds) before the raster cache is updated.\n     */\n    private static readonly RASTER_CACHE_UPDATE_DELAY = 100;\n\n\n    /**\n     * The diagram's canvas.\n     */\n    private _canvas: CanvasSelection | null;\n\n    /**\n     * The diagram's context.\n     */\n    private _context: CanvasRenderingContext2D | null;\n    \n    /**\n     * The diagram's display settings.\n     */\n    private _display: DiagramDisplaySettings;\n\n    /**\n     * The diagram container's height.\n     */\n    private _elHeight: number;\n\n    /**\n     * The diagram container's width.\n     */\n    private _elWidth: number;\n\n    /**\n     * The object currently being hovered over.\n     */\n    private _hovObj: DiagramObjectModel | undefined;\n\n    /**\n     * The diagram's object mover.\n     */\n    private _mover: DiagramObjectMover;\n\n    /**\n     * If the current layout is locked or not.\n     */\n    private _layoutLocked: boolean;\n\n    /**\n     * The diagram's current page.\n     */\n    private _page: PageView;\n\n    /**\n     * The id of the last animation frame request.\n     */\n    private _rafId: number;\n\n    /**\n     * The diagram's raster cache.\n     */\n    private _rasterCache: RasterCache;\n\n    /**\n     * An observer that monitors the size of the diagram's container.\n     */\n    private _resizeObserver: ResizeObserver | null;\n    \n    /**\n     * The context's current transform.\n     */\n    private _transform: d3.ZoomTransform;\n\n    /**\n     * The context's viewport.\n     */\n    private _viewport: ViewportRegion;\n    \n    /**\n     * The id of the late zoom timeout request.\n     */\n    private _ztoId: number;\n\n    /**\n     * The diagram's zoom behavior.\n     */\n    private _zoom: CanvasZoomBehavior;\n\n\n    /**\n     * Creates a new {@link BlockDiagram}.\n     */\n    constructor() {\n        super();\n        let page = PageModel.createDummy();\n        let cache = new RasterCache();\n        this._canvas = null;\n        this._context = null;\n        this._display = new DiagramDisplaySettings();\n        this._elWidth = 0;\n        this._elHeight = 0;\n        this._mover = new DiagramObjectMover(...page.grid);\n        this._layoutLocked = false;\n        this._page = page.createView(cache); \n        this._rafId = 0;\n        this._rasterCache = cache;\n        this._resizeObserver = null;\n        this._transform = d3.zoomIdentity;\n        this._viewport = new ViewportRegion();\n        this._ztoId = 0;\n        this._zoom =  d3.zoom<HTMLCanvasElement, unknown>()\n            .scaleExtent([1 / 8, 6])\n            .on(\"zoom\", this.onCanvasZoom.bind(this))\n            .on(\"end\", () => this.onCanvasZoomEnd());\n        // `null` ensures cursor is updated immediately\n        this._hovObj = null as any;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Inject and Destroy  ////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Injects the diagram into a container and updates the view.\n     * @param container\n     *  The container to inject the diagram into.\n     */\n    public inject(container: HTMLElement): void {\n\n        // Set sizing\n        this._elWidth = container.clientWidth;\n        this._elHeight = container.clientHeight;\n\n        // Setup canvas & context\n        this._canvas = d3.select(container)\n            .append(\"canvas\")\n                .attr(\"style\", \"display:block;\")\n                .attr(\"width\", this._elWidth)\n                .attr(\"height\", this._elHeight)\n            .on(\"mousemove\", (event) => {\n                this.onHoverSubject(...d3.pointer(event));\n            })\n            .on(\"contextmenu\", (e: any) => e.preventDefault());\n        this._context = this._canvas.node()!.getContext(\"2d\", { alpha: false });\n\n        // Configure resize observer\n        this._resizeObserver = new ResizeObserver(\n            entries => this.onCanvasResize(entries[0].target)\n        );\n        this._resizeObserver.observe(container);\n\n        // Configure canvas interactions\n        this._canvas\n            .call(d3.drag<HTMLCanvasElement, unknown>()\n                .filter(() => true)\n                .subject(this.onSelectSubject.bind(this))\n                .on(\"start\", this.onObjectDragStarted.bind(this))\n                .on(\"drag\", this.onObjectDragged.bind(this))\n                .on(\"end\", this.onObjectDragEnded.bind(this))\n            ).call(this._zoom);\n        \n    }\n\n    /**\n     * Removes the diagram from the container and removes all event listeners.\n     */\n    public destroy() {\n        this._canvas?.remove();\n        this._canvas = null;\n        this._context = null;\n        this.removeAllListeners();\n        this._resizeObserver?.disconnect();\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Event Subscription  ////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Adds an event listener to the diagram.\n     * @param event\n     *  The event to subscribe to.\n     * @param callback\n     *  The function to call once the event has fired.\n     */\n    public override on<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\n        super.on(event, callback);\n    }\n\n    /**\n     * Adds an event listener to the diagram that will be fired once and then\n     * removed.\n     * @param event\n     *  The event to subscribe to.\n     * @param callback\n     *  The function to call once the event has fired. \n     */\n    public override once<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\n        super.once(event, callback);\n    }\n\n    /**\n     * Removes all event listeners associated with a given event. If no event\n     * name is specified, all event listeners are removed.\n     * @param event\n     *  The name of the event.\n     */\n    public override removeAllListeners<K extends keyof DiagramEvents>(event?: K): void {\n        super.removeAllListeners(event);\n    }\n\n    /**\n     * Dispatches the event listeners associated with a given event.\n     * @param event\n     *  The name of the event to raise.\n     * @param args\n     *  The arguments to pass to the event listeners.\n     */\n    protected override emit<K extends keyof DiagramEvents>(event: K, ...args: Parameters<DiagramEvents[K]>): void {\n        super.emit(event, ...args);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Rendering  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Enables/Disables the grid.\n     * @param display\n     *  [true]\n     *   Enables the grid.\n     *  [false]\n     *   Disables the grid.\n     */\n    public setGridDisplay(display: boolean) {\n        this._display.showGrid = display;\n    }\n\n    /**\n     * Enables/Disables shadows.\n     * @param display\n     *  [true]\n     *   Enables shadows.\n     *  [false]\n     *   Disables shadows.\n     */\n    public setShadowsDisplay(display: boolean) {\n        this._display.showShadows = display;        \n    }\n\n    /**\n     * Enables/Disables the debug display. If enabled, the diagram will display\n     * additional information that can be used to debug issues with the block\n     * diagram API.\n     * @param display\n     *  [true]\n     *   Enables debug mode.\n     *  [false]\n     *   Disables debug mode.\n     */\n    public setDebugDisplay(display: boolean) {\n        this._display.showDebug = display;\n    }\n\n    /**\n     * Sets the diagram's supersampling anti-aliasing (SSAA) level.\n     * @param k\n     *  The supersampling scale.\n     */\n    public setSsaaScale(k: number) {\n        this._display.ssaaScale = k;\n        this._rasterCache.setScale(k);\n    }\n\n    /**\n     * Sets the scale level shadows disable at.\n     * @param k\n     *  The scale level shadows disable at.\n     */\n    public setShadowsDisableAt(k: number) {\n        this._display.shadowsDisableAt = k;\n    }\n\n    /**\n     * Renders the block diagram.\n     */\n    public render() {\n        if (this._rafId != 0)\n            return;\n        this._rafId = requestAnimationFrame(() => {\n            this._rafId = 0;\n            this.executeRenderPipeline();\n        })\n    }\n\n    /**\n     * Executes the diagram rendering pipeline.\n     */\n    private executeRenderPipeline() {\n        // Return if there's no context to render to\n        if(this._context === null)\n            return;\n        let d = this._display;\n        // Render page surface\n        this._page.renderPageSurfaceTo(this._context, this._viewport, d.showGrid);\n        // Render page contents\n        if(d.showShadows && d.shadowsDisableAt <= this._transform.k) {\n            // With drop shadow\n            this._page.renderTo(this._context, this._viewport);\n        } else {\n            // Without drop shadow\n            this._page.renderTo(this._context, this._viewport, 0, 0);\n        }\n        // Render debug display\n        if(d.showDebug) {\n            this._page.renderDebugTo(this._context, this._viewport);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Canvas Interactions  ///////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Canvas hover behavior.\n     * @param x\n     *  The pointer's position on the x-axis.\n     * @param y\n     *  The pointer's position on the y-axis.\n     * @param cursor\n     *  The cursor to use.\n     *  (Default: The subject's cursor)\n     */\n    private onHoverSubject(x: number, y: number, cursor?: number) {\n        x = this._transform.invertX(x);\n        y = this._transform.invertY(y);\n        let hovObj = this._page.el.getObjectAt(x, y);\n        if(this._hovObj !== hovObj) {\n            // Update hover object\n            this._hovObj = hovObj;\n            // Pick cursor\n            cursor = cursor ?? hovObj?.getCursor() ?? Cursor.Default;\n            // Emit\n            this.emit(\"object-hover\", hovObj, cursor);\n        }\n    }\n\n    /**\n     * Canvas click behavior.\n     * @param event\n     *  The click event.\n     * @returns\n     *  The drag action to perform or `undefined` if no object was clicked.\n     */\n     private onSelectSubject(event: any): DragAction | undefined {\n        let evt = event.sourceEvent;\n        let x = this._transform.invertX(event.x);\n        let y = this._transform.invertY(event.y);\n        let obj = this._page.el.getObjectAt(x, y);\n        let rc = evt.button === MouseClick.Right;\n        let mv: DiagramObjectView[];\n\n        // If no object:\n        if(!obj) {\n            this.emit(\"canvas-click\", evt, event.x, event.y);\n            return undefined; \n        }\n        \n        // If object is an anchor:\n        if(obj instanceof DiagramAnchorModel) {\n            // Select canvas\n            this.emit(\"canvas-click\", evt, event.x, event.y);\n            if(rc) {\n                return undefined;\n            }\n            // Create line\n            let line = obj.makeLine();\n            // Configure line\n            let x = obj.boundingBox.xMid;\n            let y = obj.boundingBox.yMid;\n            line.srcEnding.moveTo(x, y);\n            line.trgEnding.moveTo(x, y);\n            // Create line view\n            let view = line\n                .createView(this._rasterCache)\n                .updateView() as DiagramLineView;\n            // Initiate line move\n            return {\n                type: DragActionType.CreateLine,\n                line: view,\n                parent: this._page, \n                anchor: obj,\n                obj: view.trgEnding\n            };\n        }\n\n        // If object is child of line:\n        if(obj.parent instanceof DiagramLineModel) { \n            // Select line\n            this.emit(\"object-click\", evt, obj.parent, event.x, event.y);\n            if(rc) {\n                return undefined;\n            }\n            // Move the child\n            mv = [this._page.lookup(obj.id)!];\n        } \n        \n        // If any other object type:\n        else {\n            // Select object\n            this.emit(\"object-click\", evt, obj, event.x, event.y);\n            if(rc) {\n                return undefined;\n            }\n            // Move the current selection\n            mv = this._page.selects;   \n        }\n\n        // Initiate object move\n        if(mv[0] instanceof DiagramAnchorableView && mv.length === 1) {\n            return { type: DragActionType.MoveAnchorable, obj: mv[0] }\n        } else {\n            return { type: DragActionType.Move, objs: mv }\n        }\n\n    }\n\n    /**\n     * Object drag start behavior.\n     * @param event\n     *  The drag event.\n     */\n    private onObjectDragStarted(event: any) {\n        /**\n         * Developers Note:\n         * Wait until all mouse related callbacks have fired before locking the\n         * layout. This gives applications using this library a chance to\n         * update the layout in other handlers before the drag event officially\n         * starts. Ideally, an application shouldn't update the layout during a\n         * drag operation. I'll refactor this in the future to improve the\n         * coordination constructs between library and application.\n         */\n        setTimeout(() => {\n            this._layoutLocked = true;\n            let s = event.subject as DragAction;\n            let cx = this._transform.invertX(event.x);\n            let cy = this._transform.invertY(event.y);\n            let ox = 0;\n            let oy = 0;\n            let al = Alignment.Free;\n            let an = undefined;\n            switch(s.type) {\n                case DragActionType.Move:\n                    for(let obj of s.objs) {\n                        ox += obj.x;\n                        oy += obj.y;\n                        al = Math.max(al, obj.el.getAlignment());\n                    }\n                    ox /= s.objs.length;\n                    oy /= s.objs.length;\n                    break;\n                case DragActionType.CreateLine:\n                    s.parent.children.push(s.line);\n                case DragActionType.MoveAnchorable:\n                    ox = s.obj.x;\n                    oy = s.obj.y;\n                    al = s.obj.el.getAlignment();\n                    an = this._page.el.anchorCache;\n                    break;\n            }\n            this._mover.reset(al, cx, cy, ox, oy, an);\n        }, 0);\n    }\n\n    /**\n     * Object dragged behavior.\n     * @param event\n     *  The drag event.\n     */\n    private onObjectDragged(event: any) {\n        let s = event.subject as DragAction;\n        // Calculate delta\n        this._mover.updateDelta(\n            event.dx / this._transform.k,\n            event.dy / this._transform.k\n        );\n        // Move elements\n        let attrs;\n        switch(s.type) {\n            case DragActionType.Move:\n                for(let obj of s.objs) {\n                    attrs = obj.fakePositionSetByUser(PositionSetByUser.True);\n                    obj.moveBy(this._mover.dx, this._mover.dy, attrs);\n                }\n                break;\n            case DragActionType.CreateLine:\n                s.obj.el.moveBy(this._mover.dx, this._mover.dy);\n            case DragActionType.MoveAnchorable:\n                this.onHoverSubject(event.x, event.y, s.obj.el.getCursor());\n                attrs = s.obj.fakePositionSetByUser(PositionSetByUser.True);\n                s.obj.moveBy(this._mover.dx, this._mover.dy, attrs);\n                break;\n        }\n        // Render\n        this.render();\n    }\n\n    /**\n     * Object drag end behavior.\n     * @param event\n     *  The drag event.\n     */\n    private onObjectDragEnded(event: any) {\n        this._layoutLocked = false;\n        let s = event.subject as DragAction;\n        let tdx = this._mover.odx;\n        let tdy = this._mover.ody;\n        switch(s.type) {\n            case DragActionType.Move:\n                if(!(tdx || tdy)) {\n                    // If no movement, bail\n                    return;\n                }\n                let ids = s.objs.map((o: any) => o.el);\n                this.emit(\"object-move\", ids, tdx, tdy);\n                break;\n            case DragActionType.MoveAnchorable:\n                if(!(tdx || tdy)) {\n                    // If no movement, bail\n                    return;\n                }\n                if(this._mover.anchor) {\n                    let anchor = this._mover.anchor;\n                    let object = s.obj.el;\n                    this.emit(\"object-attach\", object, anchor);\n                } else if(s.obj.el.isAttached()) {\n                    let object = s.obj.el;\n                    this.emit(\"object-detach\", object, tdx, tdy);\n                } else {\n                    let ids = [s.obj.el];\n                    this.emit(\"object-move\", ids, tdx, tdy);\n                }\n                break;\n            case DragActionType.CreateLine:\n                if((tdx || tdy) && s.anchor !== this._mover.anchor) {\n                    let obj = s.line.el;\n                    let par = s.parent.el;\n                    let src = s.anchor;\n                    let trg = this._mover.anchor;\n                    this.emit(\"line-create\", obj, par, src, trg);\n                } else {\n                    // If no movement, reset view and bail\n                    this.updateView();\n                    this.render();\n                }\n                break;\n        }\n    }\n\n    /**\n     * Canvas zoom behavior.\n     * @param event\n     *  The zoom event.\n     */\n    private onCanvasZoom(event: any) {\n        // Update cache\n        if (this._transform.k !== event.transform.k) {\n            clearTimeout(this._ztoId);\n            this._ztoId = setTimeout(() => {\n                let k = this._transform.k * this._display.ssaaScale;\n                if(this._rasterCache.getScale() !== k) {\n                    this._rasterCache.setScale(k);\n                    this.render();\n                }\n            }, BlockDiagram.RASTER_CACHE_UPDATE_DELAY)\n        }\n        // Update transform\n        this._transform = event.transform;\n        // Update viewport\n        this.updateViewportBounds();\n        this._context?.setTransform(\n            this._transform.k, 0, 0,\n            this._transform.k, this._transform.x, this._transform.y\n        );\n        // If no source event, then we are already\n        // running inside a requestAnimationFrame()\n        if(event.sourceEvent === null) {\n            // If no render scheduled, run render pipeline\n            if(this._rafId === 0) {\n                this.executeRenderPipeline();\n            }\n        } else {\n            this.render();\n        }\n    }\n\n    /**\n     * Canvas zoom end behavior.\n     */\n    private onCanvasZoomEnd() {\n        this.emit(\"view-transform\", \n            this._transform.x,\n            this._transform.y,\n            this._transform.k,\n            this._elWidth,\n            this._elHeight\n        );\n    }\n\n    /**\n     * Canvas resize behavior.\n     * @param el\n     *  The block diagram's container.\n     */\n    private onCanvasResize(el: Element) {\n        let newWidth = el.clientWidth;\n        let newHeight = el.clientHeight;\n        // Center viewport\n        (this._transform as any).x += (newWidth - this._elWidth) / 2;\n        (this._transform as any).y += (newHeight - this._elHeight) / 2;\n        // Update dimensions\n        this._elWidth = newWidth;\n        this._elHeight = newHeight;\n        this._canvas\n            ?.attr(\"width\", this._elWidth)\n            ?.attr(\"height\", this._elHeight);\n        // Update viewport\n        this.updateViewportBounds();\n        // Adjust viewport\n        this._context?.setTransform(\n            this._transform.k, 0, 0,\n            this._transform.k, this._transform.x, this._transform.y\n        );\n        // Immediately redraw diagram to context, if possible\n        if(this._context)\n            this.executeRenderPipeline();\n    }\n\n    /**\n     * Recalculates the viewport's bounds based on the container's current\n     * dimensions.\n     */\n    private updateViewportBounds() {\n        let t = this._transform;\n        let padding = BlockDiagram.VIEWPORT_PADDING;\n        this._viewport.xMin = Math.round(t.invertX(-padding));\n        this._viewport.xMax = Math.round(t.invertX(this._elWidth + padding));\n        this._viewport.yMin = Math.round(t.invertY(-padding));\n        this._viewport.yMax = Math.round(t.invertY(this._elHeight + padding));\n        this._viewport.scale = t.k;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Data  //////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Configures the diagram's current page.\n     * @param page\n     *  The diagram page.\n     */\n    public setPage(page: PageModel) {\n        // Update page\n        this._page = page.createView(this._rasterCache);\n        // Update mover\n        this._mover = new DiagramObjectMover(...page.grid);\n    }\n\n    /**\n     * Syncs the view with the underlying model.\n     */\n    public updateView() {\n        if(!this._layoutLocked) {\n            this._page.updateView();\n        }\n    }\n\n    /**\n     * Sets the camera's location.\n     * @param location\n     *  The camera's new location.\n     * @param animate\n     *  The length of time (in milliseconds) the camera move animation takes.\n     *  (Default: 1000)\n     */\n    public setCameraLocation(location: CameraLocation, animate: number = 1000) {\n        if(!this._canvas)\n            return;\n        let k = location.k;\n        let x = Math.round((this._elWidth / 2) - (location.x * k));\n        let y = Math.round((this._elHeight / 2) - (location.y * k))\n        // Move camera\n        this._canvas.transition()\n            .duration(animate)\n            .call(this._zoom.transform, \n                d3.zoomIdentity.translate(x, y).scale(k)\n            )\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n// D3 types\ntype CanvasZoomBehavior = \n    d3.ZoomBehavior<HTMLCanvasElement, unknown>;\ntype CanvasSelection = \n    d3.Selection<HTMLCanvasElement, unknown, null, undefined>;\n\n// Event types\ninterface DiagramEvents {\n    \"object-hover\"  : (\n        obj: DiagramObjectModel | undefined, cursor: number\n    ) => void;\n    \"object-click\"  : (\n        event: PointerEvent, obj: DiagramObjectModel, x: number, y: number\n    ) => void;\n    \"canvas-click\"  : (\n        event: PointerEvent, x: number, y: number\n    ) => void;\n    \"object-move\"   : (\n        objs: DiagramObjectModel[], dx: number, dy: number\n    ) => void;\n    \"object-attach\" : (\n        obj: DiagramAnchorableModel, anchor: DiagramAnchorModel\n    ) => void;\n    \"object-detach\" : (\n        obj: DiagramAnchorableModel, dx: number, dy: number\n    ) => void;\n    \"line-create\"   : (\n        obj: DiagramLineModel, parent: DiagramObjectModel, \n        src: DiagramAnchorModel, trg?: DiagramAnchorModel\n    ) => void;\n    \"view-transform\": (\n        x: number, y: number, k: number, w: number, h: number\n    ) => void\n}\n\n// Drag Actions\ntype DragAction\n    = MoveDragAction\n    | MoveAnchorableDragAction\n    | CreateLineDragAction;\n\n\nenum DragActionType { \n    Move,\n    MoveAnchorable,\n    CreateLine\n}\n\ntype MoveDragAction = {\n\n    /**\n     * The move type.\n     */\n    type: DragActionType.Move,\n    \n    /**\n     * The objects to move.\n     */\n    objs: DiagramObjectView[]\n\n}\n\ntype MoveAnchorableDragAction = {\n\n    /**\n     * The move type.\n     */\n    type: DragActionType.MoveAnchorable,\n\n    /**\n     * The anchorable to move.\n     */\n    obj: DiagramAnchorableView\n}\n\ntype CreateLineDragAction = {\n\n    /**\n     * The move type.\n     */\n    type: DragActionType.CreateLine,\n    \n    /**\n     * The line.\n     */\n    line: DiagramLineView,\n\n    /**\n     * The line's parent.\n     */\n    parent: DiagramObjectView,\n\n    /**\n     * The anchor that created the line.\n     */\n    anchor: DiagramAnchorModel, \n\n    /**\n     * The line ending to move.\n     */\n    obj: DiagramLineEndingView\n\n}\n","///////////////////////////////////////////////////////////////////////////////\n//  1. RasterCache  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class RasterCache {\n\n    /**\n     * The raster cache's internal scale.\n     */\n    private _scale: number;\n\n    /**\n     * The internal raster cache.\n     */\n    private _cache: Map<string, Raster>;\n\n\n    /**\n     * Creates a new {@link RasterCache}.\n     */\n    constructor() {\n        this._scale = 1;\n        this._cache = new Map();\n    }\n\n\n    /**\n     * Creates a new {@link Raster}.\n     * @param id\n     *  The id of the raster.\n     * @param w\n     *  The width of the raster.\n     * @param h\n     *  The height of the raster.\n     * @param p\n     *  The amount of padding to add to the raster.\n     *  (Default: 0)\n     */\n    public createRaster(id: string, w: number, h: number, p: number = 0): Raster {\n        // Create raster\n        let raster = new Raster(w, h, p, this._scale);\n        // Register raster\n        this._cache.set(id, raster);\n        // Return raster\n        return raster;\n    }\n\n    /**\n     * Draws a raster to the context.\n     * @param context\n     *  The context to draw to.\n     * @param id\n     *  The id of the raster.\n     * @param x\n     *  The x-axis coordinate on the destination context.\n     * @param y\n     *  The y-axis coordinate on the destination context.\n     * @returns \n     *  True if the raster was drawn, false if no raster with that id exists.\n     */\n    public drawRaster(context: CanvasRenderingContext2D, id: string, x: number, y: number): boolean {\n        let r = this._cache.get(id);\n        if (r) {\n            context.drawImage(r.canvas, x - r.cx, y - r.cy, r.w, r.h);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Dumps the raster cache and updates its scale.\n     * @param scale\n     *  The new scale value.\n     */\n    public setScale(scale: number) {\n        this._scale = scale;\n        this._cache.clear();\n    }\n\n    /**\n     * Returns the cache's current scale.\n     * @returns\n     *  The cache's current scale.\n     */\n    public getScale(): number {\n        return this._scale;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Raster  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class Raster {\n\n    /**\n     * The raster's canvas.\n     */\n    public readonly canvas: HTMLCanvasElement;\n\n    /**\n     * The raster's context.\n     */\n    public readonly context: CanvasRenderingContext2D;\n\n    /**\n     * The raster's center on the x-axis.\n     */\n    public readonly cx: number;\n\n    /**\n     * The raster's center on the y-axis.\n     */\n    public readonly cy: number;\n\n    /**\n     * The raster's full width.\n     */\n    public readonly w: number;\n\n    /**\n     * The raster's full height.\n     */\n    public readonly h: number;\n\n    /**\n     * The raster's padding.\n     */\n    public readonly p: number;\n\n\n    /**\n     * The raster's fill style.\n     */\n    public set fillStyle(value: string) {\n        this.context.fillStyle = value;\n    }\n\n    /**\n     * The raster's font.\n     */\n    public set font(value: string) {\n        this.context.font = value;\n    }\n\n    /**\n     * The raster's line width.\n     */\n    public set lineWidth(value: number) {\n        this.context.lineWidth = value;\n    }\n\n    /**\n     * The raster's stroke style.\n     */\n    public set strokeStyle(value: string) {\n        this.context.strokeStyle = value;\n    }\n\n    /**\n     * The raster's text baseline.\n     */\n    public set textBaseline(value: CanvasTextBaseline) {\n        this.context.textBaseline = value;\n    }\n\n\n    /**\n     * Creates a new {@link Raster}.\n     * @param w\n     *  The width of the raster.\n     * @param h\n     *  The height of the raster.\n     * @param p\n     *  The raster's padding.\n     * @param k\n     *  The scale of the raster.\n     */\n    constructor(w: number, h: number, p: number, k: number) {\n        let tp = p << 1;\n        // Prepare canvas\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = Math.round((w + tp) * k);\n        this.canvas.height = Math.round((h + tp) * k);\n        // Prepare context\n        this.context = this.canvas.getContext(\"2d\")!;\n        this.context.setTransform(k, 0, 0, k, 0, 0);\n        // Calculate dimensions\n        this.h = h + tp;\n        this.w = w + tp;\n        this.cx = Math.round(this.w / 2);\n        this.cy = Math.round(this.h / 2);\n        this.p = p;\n    }\n\n\n    /**\n     * Starts a new path.\n     */\n    public beginPath() {\n        this.context.beginPath();\n    }\n\n    /**\n     * Attempts to add a straight line from the current point to the start of\n     * the current sub-path. If the shape has already been closed or has only\n     * one point, this function does nothing.\n     */\n    public closePath() {\n        this.context.closePath();\n    }\n\n    /**\n     * Begins a new sub-path at the point specified\n     * @param x\n     *  The x-axis coordinate. \n     * @param y\n     *  The y-axis coordinate.\n     */\n    public moveTo(x: number, y: number) {\n        this.context.moveTo(this.p + x, this.p + y);\n    }\n\n    /**\n     * Adds a straight line to the current sub-path by connecting the\n     * sub-path's last point to the specified coordinates.\n     * @param x\n     *  The x-axis coordinate.\n     * @param y\n     *  The y-axis coordinate.\n     */\n    public lineTo(x: number, y: number) {\n        this.context.lineTo(this.p + x, this.p + y);\n    }\n\n    /**\n     * Outlines the current or given path with the current stroke style.\n     */\n    public stroke() {\n        this.context.stroke();\n    }\n\n    /**\n     * Fills the current or given path with the current fillStyle.\n     */\n    public fill() {\n        this.context.fill();\n    }\n\n    /**\n     * Draws a text string at the specified coordinates, filling the string's\n     * characters with the current fillStyle.\n     * @param text\n     *  The text string.\n     * @param x\n     *  The x-axis coordinate.\n     * @param y\n     *  The y-axis coordinate.\n     */\n    public fillText(text: string, x: number, y: number) {\n        this.context.fillText(text, x, y);\n    }\n\n    /**\n     * Draws a rectangular path to the context.\n     * @param x\n     *  The top-left x coordinate.\n     * @param y\n     *  The top-left y coordinate.\n     * @param w\n     *  The width of the rectangle.\n     * @param h\n     *  The height of the rectangle.\n     * @param r\n     *  The rectangle's border radius.\n     * @param s\n     *  The rectangle's stroke width.\n     *  (Default: 1)\n     */\n    public drawRect(\n        x: number, y: number,\n        w: number, h: number,\n        r: number, s?: number\n    ): void;\n\n    /**\n     * Draws a rectangular path to the context.\n     * @param x\n     *  The top-left x coordinate.\n     * @param y\n     *  The top-left y coordinate.\n     * @param w\n     *  The width of the rectangle.\n     * @param h\n     *  The height of the rectangle.\n     * @param r\n     *  An object which defines the border radius of each corner. If a corner\n     *  is not specified, it is assumed to be 0.\n     * @param s\n     *  The rectangle's stroke width.\n     *  (Default: 1)\n     */\n    public drawRect(\n        x: number, y: number,\n        w: number, h: number,\n        r: BorderRadius,\n        s?: number\n    ): void;\n    \n    public drawRect(\n        x: number, y: number,\n        w: number, h: number,\n        r: BorderRadius | number,\n        s: number = 1\n    ) {\n        // Account for padding & stroke width\n        x += this.p + (s / 2);\n        y += this.p + (s / 2);\n        w -= s;\n        h -= s;\n        // Parse radius\n        if (typeof r === \"number\") {\n            r = { tl: r, tr: r, br: r, bl: r }\n        } else {\n            r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\n        }\n        // Draw rectangular path\n        let ctx = this.context;\n        ctx.beginPath();\n        ctx.moveTo(x + r.tl!, y);\n        ctx.lineTo(x + w - r.tr!, y);\n        ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\n        ctx.lineTo(x + w, y + h - r.br!);\n        ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\n        ctx.lineTo(x + r.bl!, y + h);\n        ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\n        ctx.lineTo(x, y + r.tl!);\n        ctx.quadraticCurveTo(x, y, x + r.tl!, y);\n        ctx.closePath();\n    }\n  \n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Raster Types  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type BorderRadius = {\n    \n    /**\n     * Top left radius.\n     */\n    tl?: number,\n\n    /**\n     * Top right radius.\n     */\n    tr?: number,\n\n    /**\n     * Bottom right radius.\n     */\n    br?: number,\n\n    /**\n     * Bottom left radius.\n     */\n    bl?: number\n\n}\n","export class ViewportRegion {\n\n    /**\n     * The viewport's minimum x coordinate.\n     */\n    public xMin: number\n\n    /**\n     * The viewport's minimum y coordinate.\n     */\n    public yMin: number\n\n    /**\n     * The viewport's maximum x coordinate.\n     */\n    public xMax: number\n\n    /**\n     * The viewport's maximum y coordinate.\n     */\n    public yMax: number;\n\n    /**\n     * The viewport's scale.\n     */\n    public scale: number;\n\n    /**\n     * Creates a new {@link ViewportRegion}.\n     */\n    constructor() {\n        this.xMin = 0;\n        this.yMin = 0;\n        this.xMax = 0;\n        this.yMax = 0;\n        this.scale = 1;\n    }\n\n}\n","import { \n    SerializedAnchorPointStyle,\n    SerializedBranchBlockStyle,\n    SerializedDictionaryBlockStyle,\n    SerializedLineEndingPointStyle,\n    SerializedLineHandlePointStyle,\n    SerializedLineStyle,\n    SerializedTextBlockStyle,\n    SerializedPageStyle\n} from \"..\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Colors  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const Colors = {\n    Blue   : { fill_color: \"#637bc9\", stroke_color: \"#708ce6\" },\n    Orange : { fill_color: \"#c26130\", stroke_color: \"#e57339\" },\n    Green  : { fill_color: \"#2a9642\", stroke_color: \"#32b34e\" },\n    Red    : { fill_color: \"#c94040\", stroke_color: \"#dd5050\" },\n    Gray   : { fill_color: \"#737373\", stroke_color: \"#8c8c8c\" }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Block Diagram Theme  ///////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nclass BlockDiagramTheme {\n\n    /**\n     * The theme definition.\n     */\n    private readonly _theme: Theme\n\n    \n    /**\n     * Creates a new {@link Theme}.\n     * @param theme\n     *  The theme definition.\n     */\n    public constructor(theme: Theme) {\n        this._theme = theme;\n    }\n\n\n    /**\n     * Returns the anchor point style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The anchor point style.\n     */\n    public AnchorPoint(\n        style: DeepPartial<SerializedAnchorPointStyle> = {}\n    ): SerializedAnchorPointStyle {\n        return this.merge(style, structuredClone(this._theme.anchor));\n    }\n\n    /**\n     * Returns the branch block style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The branch block style.\n     */\n    public BranchBlock(\n        style: DeepPartial<SerializedBranchBlockStyle> = {}\n    ): SerializedBranchBlockStyle {\n        return this.merge(style, structuredClone(this._theme.branch));\n    }\n\n    /**\n     * Returns the dictionary block style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The dictionary block style.\n     */\n    public DictionaryBlock(\n        style: DeepPartial<SerializedDictionaryBlockStyle> = {}\n    ): SerializedDictionaryBlockStyle {\n        return this.merge(style, structuredClone(this._theme.dictionary));\n    }\n\n    /**\n     * Returns the line style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The line style.\n     */\n    public Line(\n        style: DeepPartial<SerializedLineStyle> = {}\n    ): SerializedLineStyle {\n        return this.merge(style, structuredClone(this._theme.line));\n    }\n\n    /**\n     * Returns the line ending style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The line ending style.\n     */\n    public LineEnding(\n        style: DeepPartial<SerializedLineEndingPointStyle> = {}\n    ): SerializedLineEndingPointStyle {\n        return this.merge(style, structuredClone(this._theme.lineEnding));\n    }\n\n    /**\n     * Returns the line handle style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The line handle style.\n     */\n    public LineHandle(\n        style: DeepPartial<SerializedLineHandlePointStyle> = {}\n    ): SerializedLineHandlePointStyle {\n        return this.merge(style, structuredClone(this._theme.lineHandle));\n    }\n\n    /**\n     * Returns the text block style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The text block style.\n     */\n    public TextBlock(\n        style: DeepPartial<SerializedTextBlockStyle> = {}\n    ): SerializedTextBlockStyle {\n        return this.merge(style, structuredClone(this._theme.text));\n    }\n\n    /**\n     * Returns the page style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The page style.\n     */\n    public Page(\n        style: DeepPartial<SerializedPageStyle> = {}\n    ): SerializedPageStyle {\n        return this.merge(style, structuredClone(this._theme.page));\n    }\n\n    /**\n     * Merges object `src` into `dst`.\n     * @param src\n     *  The source object.\n     * @param dst\n     *  The destination object.\n     * @returns\n     *  The destination object.\n     */\n    private merge<T>(src: T, dst: T) {\n        for(let key in src) {\n            if(!(key in dst)) {\n                throw new Error(\"Objects do not overlap.\");\n            }\n            if(typeof src[key] !== typeof dst[key]) {\n                throw new Error(`'${ key }' has mismatching types.`);\n            }\n\n            if(typeof src[key] === \"object\") {\n                this.merge(src[key], dst[key]);\n            } else {\n                dst[key] = src[key];\n            }\n        }\n        return dst;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Themes  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Theme definition.\n */\ntype Theme = {\n    anchor: SerializedAnchorPointStyle,\n    branch: SerializedBranchBlockStyle,\n    dictionary: SerializedDictionaryBlockStyle,\n    line: SerializedLineStyle,\n    lineEnding: SerializedLineEndingPointStyle,\n    lineHandle: SerializedLineHandlePointStyle,\n    text: SerializedTextBlockStyle,\n    page: SerializedPageStyle,\n}\n\n/**\n * Dark Theme\n */\nexport const DarkTheme = new BlockDiagramTheme({\n\n    anchor: {\n        color: \"rgba(255, 255, 255, 0.25)\"\n    },\n\n    branch: {\n        max_width: 320,\n        head: {\n            fill_color: \"#000\",\n            stroke_color: \"#000\",\n            one_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"10.5pt\", weight: 800 },\n                    color: \"#d8d8d8\"\n                }\n            },\n            two_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                    color: \"#d8d8d8\",\n                    padding: 8\n                },\n                subtitle:  {\n                    font: { family: \"Inter\", size: \"13pt\", weight: 800 },\n                    color: \"#d8d8d8\",\n                    line_height: 23\n                }\n            },\n            vertical_padding: 14\n        },\n        body: {\n            fill_color: \"#1f1f1f\",\n            stroke_color: \"#383838\",\n            field_name: {\n                font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                color: \"#b3b3b3\",\n                padding: 12\n            },\n            field_value: {\n                font: { family: \"Inter\", size: \"10.5pt\" },\n                color: \"#bfbfbf\",\n                line_height: 20,\n                padding: 22\n            },\n            vertical_padding: 18\n        },\n        branch: {\n            font: { family: \"Inter\", size: \"10.5pt\" },\n            color: \"#bfbfbf\",\n            vertical_padding: 12,\n            horizontal_padding: 30\n        },\n        select_outline: {\n            color: \"#e6d845\",\n            padding: 4,\n            border_radius: 9\n        },\n        anchor_markers: {\n            color: \"#ffffff\",\n            size: 3\n        },\n        border_radius: 5,\n        horizontal_padding: 20\n    },\n\n    dictionary: {\n        max_width: 320,\n        head: {\n            fill_color: \"#000\",\n            stroke_color: \"#000\",\n            one_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"10.5pt\", weight: 800 },\n                    color: \"#d8d8d8\"\n                }\n            },\n            two_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                    color: \"#d8d8d8\",\n                    padding: 8\n                },\n                subtitle:  {\n                    font: { family: \"Inter\", size: \"13pt\", weight: 800 },\n                    color: \"#d8d8d8\",\n                    line_height: 23\n                }\n            },\n            vertical_padding: 14\n        },\n        body: {\n            fill_color: \"#1f1f1f\",\n            stroke_color: \"#383838\",\n            field_name: {\n                font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                color: \"#b3b3b3\",\n                padding: 12\n            },\n            field_value: {\n                font: { family: \"Inter\", size: \"10.5pt\" },\n                color: \"#bfbfbf\",\n                line_height: 20,\n                padding: 22\n            },\n            vertical_padding: 18\n        },\n        select_outline: {\n            color: \"#e6d845\",\n            padding: 4,\n            border_radius: 9\n        },\n        anchor_markers: {\n            color: \"#ffffff\",\n            size: 3\n        },\n        border_radius: 5,\n        horizontal_padding: 20\n    },\n\n    line: {\n        width: 5,\n        cap_size: 16,\n        color: \"#646464\",\n        select_color: \"#646464\"\n    },\n    \n    lineEnding: {\n        radius: 6,\n        fill_color: \"#fedb22\",\n        stroke_color: \"#141414\",\n        stroke_width: 1.5\n    },\n\n    lineHandle: {\n        radius: 6,\n        fill_color: \"#fedb22\",\n        stroke_color: \"#141414\",\n        stroke_width: 1.5\n    },\n\n    text: {\n        max_width: 320,\n        fill_color: \"#000\",\n        stroke_color: \"#000\",\n        text: {\n            font: { family: \"Inter\", size: \"14pt\", weight: 800 },\n            color: \"#d8d8d8\",\n            line_height: 24\n        },\n        border_radius: 13,\n        select_outline: {\n            color: \"#e6d845\",\n            padding: 4,\n            border_radius: 19\n        },\n        anchor_markers: {\n            color: \"#ffffff\",\n            size: 3\n        },\n        vertical_padding: 18,\n        horizontal_padding: 20\n    },\n\n    page: {\n        grid_color: \"#1d1d1d\",\n        background_color: \"#141414\",\n        drop_shadow: {\n            color: \"rgba(0,0,0,.4)\",\n            offset: [3, 3]\n        }\n    },\n    \n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Type Helpers  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Recursive version of Partial<T>.\n */\ntype DeepPartial<T> = T extends object ? {\n    [P in keyof T]?: DeepPartial<T[P]>;\n} : T;\n","export class DiagramFactoryError extends Error {\n\n    /**\n     * Creates a new {@link DiagramFactoryError}.\n     * @param message\n     *  The error message.\n     */\n    constructor(message: string) {\n        super(message);\n    } \n\n}","import { RootPropertyDescriptor } from \"../Property\";\nimport { Font, FontDescriptor } from \"../Utilities\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Block Diagram Schema  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type BlockDiagramSchema = {\n    page_template: string,\n    templates: SerializedTemplate[]\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Template Types  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport enum TemplateType {\n    AnchorPoint          = 0,\n    BranchBlock          = 1,\n    DictionaryBlock      = 2,\n    LineEndingPoint      = 3,\n    LineHandlePoint      = 4,\n    LineHorizontalElbow  = 5,\n    LineVerticalElbow    = 6,\n    Page                 = 7,\n    TextBlock            = 8,\n}\n\nexport enum SemanticRole {\n    None                 = 0b000000000000000,\n    Node                 = 0b001000000000000,\n    Edge                 = 0b010000000000000,\n    LinkSource           = 0b011000000000000,\n    LinkTarget           = 0b100000000000000\n}\n\nexport type Template \n    = AnchorPointTemplate\n    | BranchBlockTemplate\n    | DictionaryBlockTemplate\n    | LineEndingPointTemplate\n    | LineHandlePointTemplate\n    | LineHorizontalElbowTemplate\n    | LineVerticalElbowTemplate\n    | PageTemplate\n    | TextBlockTemplate\n\nexport type SerializedTemplate = SubstituteType<Template, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Generic Template  //////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type ObjectTemplate = {\n    id: string;\n    namespace?: string,\n    properties?: RootPropertyDescriptor\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Diagram Anchor Template  ///////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type AnchorTemplate = ObjectTemplate & {\n    radius: number,\n    line_templates: {\n        [key: number]: string\n    }\n}\n\nexport enum AnchorAngle {\n    DEG_0  = 0,\n    DEG_90 = 1,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  5. Diagram Line Template  /////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineTemplate = ObjectTemplate & {\n    hitbox_width: number,\n    line_handle_template: string,\n    line_ending_template: {\n        source: string,\n        target: string\n    }\n    style: LineStyle\n}\n\nexport type LineStyle = {\n    width: number,\n    cap_size: number,\n    color: string,\n    select_color: string\n}\n\nexport type SerializedLineStyle =\n    SubstituteType<LineStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  6. Line Ending Point Template  ////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineEndingPointTemplate = ObjectTemplate & {\n    type: TemplateType.LineEndingPoint,\n    role: SemanticRole.None | SemanticRole.LinkSource | SemanticRole.LinkTarget\n    style: LineEndingPointStyle\n}\n\nexport type LineEndingPointStyle = {\n    radius: number,\n    fill_color: string,\n    stroke_color: string,\n    stroke_width: number\n}\n\nexport type SerializedLineEndingPointStyle =\n    SubstituteType<LineEndingPointStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  7. Line Handle Point Template  ////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineHandlePointTemplate = ObjectTemplate & {\n    type: TemplateType.LineHandlePoint,\n    role: SemanticRole.None,\n    style: LineHandlePointStyle;\n}\n\nexport type LineHandlePointStyle = {\n    radius: number,\n    fill_color: string,\n    stroke_color: string,\n    stroke_width: number\n}\n\nexport type SerializedLineHandlePointStyle =\n    SubstituteType<LineHandlePointStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  8. Anchor Point Template  /////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type AnchorPointTemplate = AnchorTemplate & {\n    type: TemplateType.AnchorPoint,\n    role: SemanticRole.None,\n    style: AnchorPointStyle\n}\n\nexport type AnchorPointStyle = {\n    color: string\n}\n\nexport type SerializedAnchorPointStyle =\n    SubstituteType<AnchorPointStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  9. Dictionary Block Template  /////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type DictionaryBlockTemplate = ObjectTemplate & {\n    type: TemplateType.DictionaryBlock,\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    anchor_template: string,\n    style: DictionaryBlockStyle\n}\n\nexport type DictionaryBlockStyle = {\n    max_width: number,\n    head: {\n        fill_color: string,\n        stroke_color: string,\n        one_title: {\n            title: {\n                font: Font,\n                color: string,\n            }\n        },\n        two_title: {\n            title: {\n                font: Font,\n                color: string,\n                padding: number\n            },\n            subtitle:  {\n                font: Font,\n                color: string,\n                line_height: number\n            }\n        }\n        vertical_padding: number\n    },\n    body: {\n        fill_color: string,\n        stroke_color: string,\n        field_name: {\n            font: Font,\n            color: string,\n            padding: number\n        },\n        field_value: {\n            font: Font,\n            color: string,\n            line_height: number,\n            padding: number\n        },\n        vertical_padding: number,\n    },\n    select_outline: {\n        color: string,\n        padding: number\n        border_radius: number,\n    },\n    anchor_markers: {\n        color: string,\n        size: number\n    }\n    border_radius: number,\n    horizontal_padding: number\n}\n\nexport type SerializedDictionaryBlockStyle =\n    SubstituteType<DictionaryBlockStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  10. Branch Block Template  ////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type BranchBlockTemplate = ObjectTemplate & {\n    type: TemplateType.BranchBlock,\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    branches: [BranchTemplate, ...BranchTemplate[]]\n    anchor_template: string,\n    style: BranchBlockStyle\n}\n\nexport type BranchTemplate = { \n    text: string,\n    anchor_template: string\n}\n\nexport type BranchBlockStyle = DictionaryBlockStyle & {\n    branch: {\n        font: Font,\n        color: string,\n        vertical_padding: number,\n        horizontal_padding: number\n    }\n}\n\nexport type SerializedBranchBlockStyle =\n    SubstituteType<BranchBlockStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  11. Text Block Template  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type TextBlockTemplate = ObjectTemplate & {\n    type: TemplateType.TextBlock,\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    anchor_template: string,\n    style: TextBlockStyle\n}\n\nexport type TextBlockStyle = {\n    max_width: number,\n    fill_color: string,\n    stroke_color: string,\n    text: {\n        font: Font,\n        color: string,\n        line_height: number\n    },\n    border_radius: number,\n    select_outline: {\n        color: string,\n        padding: number\n        border_radius: number,\n    },\n    anchor_markers: {\n        color: string,\n        size: number\n    },\n    vertical_padding: number,\n    horizontal_padding: number\n}\n\nexport type SerializedTextBlockStyle =\n    SubstituteType<TextBlockStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  12. Line Horizontal Elbow Template  ///////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineHorizontalElbowTemplate = LineTemplate & {\n    type: TemplateType.LineHorizontalElbow\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  13. Line Horizontal Elbow Template  ///////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineVerticalElbowTemplate = LineTemplate & {\n    type: TemplateType.LineVerticalElbow\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  14. Page Template  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type PageTemplate = ObjectTemplate & {\n    type: TemplateType.Page\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    grid: [number, number]\n    style: PageStyle\n}\n\nexport type PageStyle = {\n    grid_color: string,\n    background_color: string,\n    drop_shadow: {\n        color: string,\n        offset: [number, number]\n    }\n}\n\nexport type SerializedPageStyle =\n    SubstituteType<PageStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  15. Type Helpers  /////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Substitutes all types of type `A` in type `T` with type `B`.\n * ({@link https://stackoverflow.com/a/59833891 Source})\n */\ntype SubstituteType<T, A, B> =\n    T extends A\n    ? B\n    : T extends {}\n    ? { [K in keyof T]: SubstituteType<T[K], A, B> }\n    : T;\n","import { PropertyType } from \"../Property\";\nimport {\n    AnchorAngle,\n    DarkTheme,\n    SemanticRole,\n    SerializedTemplate,\n    TemplateType\n} from \".\";\n\nconst BUILTIN_PREFIX = \"@__builtin__\";\n\nexport const BuiltinTemplates: SerializedTemplate[] = [\n    {\n        id: `${ BUILTIN_PREFIX }page`,\n        type: TemplateType.Page,\n        role: SemanticRole.None,\n        grid: [10, 10],\n        properties: {\n            name: {\n                type: PropertyType.String,\n                value: \"Untitled Document\",\n                is_primary: true\n            }\n        },\n        style: DarkTheme.Page()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }anchor`,\n        type: TemplateType.AnchorPoint,\n        role: SemanticRole.None,\n        radius: 10,\n        line_templates: {\n            [AnchorAngle.DEG_0] : `${ BUILTIN_PREFIX }line_horizontal_elbow`,\n            [AnchorAngle.DEG_90]: `${ BUILTIN_PREFIX }line_vertical_elbow`\n        },\n        style: DarkTheme.AnchorPoint()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_handle`,\n        type: TemplateType.LineHandlePoint,\n        role: SemanticRole.None,\n        style: DarkTheme.LineHandle()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_source`,\n        type: TemplateType.LineEndingPoint,\n        role: SemanticRole.LinkSource,\n        style: DarkTheme.LineEnding()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_target`,\n        type: TemplateType.LineEndingPoint,\n        role: SemanticRole.LinkTarget,\n        style: DarkTheme.LineEnding()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_horizontal_elbow`,\n        namespace: \"horizontal_elbow\",\n        type: TemplateType.LineHorizontalElbow,\n        role: SemanticRole.Edge,\n        hitbox_width: 20,\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\n        line_ending_template: {\n            source: `${ BUILTIN_PREFIX }line_source`,\n            target: `${ BUILTIN_PREFIX }line_target`\n        },\n        style: DarkTheme.Line()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_vertical_elbow`,\n        namespace: \"vertical_elbow\",\n        type: TemplateType.LineVerticalElbow,\n        role: SemanticRole.Edge,\n        hitbox_width: 20,\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\n        line_ending_template: {\n            source: `${ BUILTIN_PREFIX }line_source`,\n            target: `${ BUILTIN_PREFIX }line_target`\n        },\n        style: DarkTheme.Line()\n    }\n]\n","import { \n    Font,\n    FontDescriptor,\n    GlobalFontStore\n} from \"../Utilities\";\nimport { \n    AnchorPointModel,\n    BranchBlockModel,\n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    DictionaryBlockModel,\n    LineEndingPointModel,\n    LineHandlePointModel,\n    LineHorizontalElbowModel,\n    LineVerticalElbowModel,\n    TextBlockModel,\n    PageModel\n} from \"../DiagramModelTypes\";\nimport { \n    BlockDiagramSchema,\n    BuiltinTemplates,\n    DiagramFactoryError,\n    DiagramObjectValues,\n    SerializedTemplate,\n    Template,\n    TemplateType,\n} from \".\";\n\nexport class DiagramFactory {\n\n    /**\n     * The diagram's schema.\n     */\n    public readonly schema: BlockDiagramSchema;\n\n    /**\n     * The diagram factory's list of templates.\n     */\n    public readonly templates: Map<string, Template>\n    \n    /**\n     * The diagram factory's namespace.\n     */\n    private readonly _namespace: Namespace;\n\n\n    /**\n     * Creates a new {@link DiagramFactory}.\n     * @param schema\n     *  The diagram's schema.\n     * @param templates\n     *  The diagram factory's list of templates.\n     * @param namespace\n     *  The diagram factory's namespace.\n     */\n    private constructor(schema: BlockDiagramSchema, templates: Map<string, Template>, namespace: Namespace) {\n        this.schema = schema;\n        this.templates = templates;\n        this._namespace = namespace;\n    }\n\n\n    /**\n     * Returns a dummy {@link DiagramFactory}.\n     * @returns \n     *  A dummy {@link DiagramFactory}.\n     */\n    public static createDummy(): DiagramFactory {\n        return new this(\n            { page_template: \"\", templates: [] },\n            new Map(),\n            new Map([[\"@\", new Map()]])\n        );\n    }\n\n    /**\n     * Creates a new {@link DiagramFactory}.\n     * @param schema\n     *  The diagram factory's internal schema.\n     * @throws { DiagramFactoryError }\n     *  If two or more templates share the same name.\n     * @throws { Error }\n     *  If any of the schema's fonts failed to load.\n     */\n    public static async create(schema: BlockDiagramSchema) {\n        \n        // Clone schema\n        let copy = structuredClone(schema);\n\n        // Validate unique ids\n        let ids = new Set();\n        for(let template of copy.templates) {\n            if(ids.has(template.id)){\n                throw new DiagramFactoryError(\n                    `Template '${ template.id }' can only be defined once.`\n                );\n            }\n            ids.add(template.id);\n        }\n\n        // Register schema templates\n        let templates = new Map<string, SerializedTemplate>();\n        for(let template of [...BuiltinTemplates, ...copy.templates]) {\n            templates.set(template.id, template);\n        }\n        \n        // Build namespace\n        let namespace: Namespace = new Map([[\"@\", new Map()]]);\n        for(let value of templates.values()) {\n            if(value.namespace === undefined)\n                continue;\n            let path = [\"@\", ...value.namespace.split(\".\")];\n            for(var i = 0, ns = namespace; i < path.length - 1; i++) {\n                if(!ns.has(path[i])) {\n                    ns.set(path[i], new Map())\n                }\n                ns = ns.get(path[i])! as Namespace;\n            }\n            if(!ns.has(path[i])) {\n                ns.set(path[i], value.id);\n            } else {\n                throw new DiagramFactoryError(\n                    `Namespace '${ path.join(\".\") }' is already defined.`\n                )\n            }\n        }\n\n        // Load font descriptors\n        let fonts: FontDescriptor[] = [];\n        for(let template of templates.values()) {\n            fonts = fonts.concat(\n                this.getFontDescriptorsFromTemplate(template)\n            );\n        }\n        await GlobalFontStore.loadFonts(fonts);\n        \n        // Swap font descriptors for fonts\n        for(let template of templates.values()) {\n            this.swapFontDescriptorsWithFonts(template);\n        }\n        \n        // Return new diagram factory \n        return new this(\n            schema,\n            templates as Map<string, Template>,\n            namespace\n        );\n    \n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Templates  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Returns a template from the factory.\n     * @param template\n     *  The template's id.\n     * @returns\n     *  The template. `undefined` if no template with that id exists.\n     */\n    public getTemplate(template: string): Template | undefined {\n        return this.templates.get(template);\n    }\n\n    /**\n     * Returns the factory's namespace.\n     * @return\n     *  The factory's namespace.\n     */\n    public getNamespace(): Namespace {\n        return this._namespace;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Object Creation  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Instantiates a diagram object.\n     * @param template\n     *  The name of the object's template.\n     * @returns\n     *  The newly created diagram object.\n     * @throws { DiagramFactoryError }\n     *  If no template with the specified name exists.\n     */\n    public createObject(template: string): DiagramObjectModel;\n    \n    /**\n     * Instantiates a diagram object.\n     * @param object\n     *  The object's values.\n     * @returns\n     *  The newly created diagram object.\n     * @throws { DiagramFactoryError }\n     *  If `object` specifies a template that doesn't exist.\n     */\n    public createObject(object: DiagramObjectValues): DiagramObjectModel;\n    public createObject(param1: DiagramObjectValues | string): DiagramObjectModel {\n        let name, vals: any;\n        if(param1 instanceof Object) {\n            name = param1.template,\n            vals = param1\n        } else {\n            name = param1;\n        }\n        // Resolve template\n        let temp = this.templates.get(name);\n        if(!temp) {\n            throw new DiagramFactoryError(\n                `Template '${ name }' does not exist.`\n            );\n        }\n        // Create diagram object\n        switch(temp.type) {\n            case TemplateType.Page:\n                return new PageModel(this, temp, vals);\n            case TemplateType.AnchorPoint:\n                return new AnchorPointModel(this, temp, vals);\n            case TemplateType.BranchBlock:\n                return new BranchBlockModel(this, temp, vals);\n            case TemplateType.DictionaryBlock:\n                return new DictionaryBlockModel(this, temp, vals);\n            case TemplateType.LineEndingPoint:\n                return new LineEndingPointModel(this, temp, vals);\n            case TemplateType.LineHandlePoint:\n                return new LineHandlePointModel(this, temp, vals);\n            case TemplateType.LineVerticalElbow:\n                return new LineVerticalElbowModel(this, temp, vals);\n            case TemplateType.LineHorizontalElbow:\n                return new LineHorizontalElbowModel(this, temp, vals);\n            case TemplateType.TextBlock:\n                return new TextBlockModel(this, temp, vals);\n            default:\n                throw new DiagramFactoryError(\n                    `Unknown template type: '${ (temp as any).type }'.`\n                );\n        }\n    }\n\n    /**\n     * Clones one or more diagram objects.\n     * @param objects\n     *  The object(s) to clone.\n     * @returns\n     *  The cloned objects.\n     */\n    public cloneObjects(...objects: DiagramObjectModel[]): DiagramObjectModel[] {\n        // Clone objects\n        let clones = new Map<string, DiagramObjectModel>();\n        let anchors = new Map<DiagramAnchorModel, string[]>();\n        let objs = objects.map(o => this.cloneObject(o, clones, anchors));\n        // Link clones\n        for(let [anchor, links] of anchors) {\n            for(let link of links) {\n                let obj = clones.get(link) as DiagramAnchorableModel;\n                if(obj) {\n                    anchor.addChild(obj);\n                }\n            }\n        }\n        // Return clones\n        return objs;\n    }\n\n    /**\n     * Clones a single object. Supports `cloneObjects()`.\n     * @param object\n     *  The object to clone.\n     * @param clones\n     *  The clone index. This maps objects to their clones.\n     * @param anchors\n     *  The anchor index. The maps anchor clones to their original children.\n     * @returns\n     *  The cloned object.\n     */\n    private cloneObject(\n        object: DiagramObjectModel,\n        clones: Map<string, DiagramObjectModel>,\n        anchors: Map<DiagramAnchorModel, string[]>\n    ): DiagramObjectModel {\n        // Clone anchor\n        if(object instanceof DiagramAnchorModel) {\n            let clone = this.createObject({\n                ...object.toExport(),\n                id: (crypto as any).randomUUID(),\n                children: []\n            }) as DiagramAnchorModel;\n            clones.set(object.id, clone);\n            anchors.set(clone, object.children.map(o => o.id));\n            return clone;\n        };\n        // Clone children\n        let children = [];\n        for(let obj of object.children) {\n            children.push(this.cloneObject(obj, clones, anchors));\n        }\n        // Clone object\n        let clone = this.createObject({\n            ...object.toExport(),\n            id: (crypto as any).randomUUID(),\n            children\n        });\n        clones.set(object.id, clone);\n        return clone;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Font Management  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns all {@link FontDescriptor} defined by a template.\n     * @returns\n     *  All {@link FontDescriptor} defined by a template.\n     */\n    private static getFontDescriptorsFromTemplate(template: SerializedTemplate): FontDescriptor[] {\n        let descriptors: FontDescriptor[] = [];\n        switch(template.type) {\n            case TemplateType.BranchBlock:\n                let { style: s1 } = template;\n                descriptors.push(\n                    s1.branch.font\n                );\n            case TemplateType.DictionaryBlock:\n                let { style: s2 } = template;\n                descriptors = descriptors.concat([\n                    s2.head.one_title.title.font,\n                    s2.head.two_title.title.font,\n                    s2.head.two_title.subtitle.font,\n                    s2.body.field_name.font,\n                    s2.body.field_value.font\n                ]);\n                break;\n            case TemplateType.TextBlock:\n                let { style: s3 } = template;\n                descriptors.push(\n                    s3.text.font\n                )\n                break;\n            default:\n                break;\n        }\n        return descriptors;\n    }\n\n    /**\n     * Swaps all {@link FontDescriptor} defined by a template with \n     * {@link Font} objects.\n     * @param template\n     *  The template to modify.\n     */\n    private static swapFontDescriptorsWithFonts(template: SerializedTemplate) {\n        let font = GlobalFontStore.getFont.bind(GlobalFontStore);\n        switch(template.type) {\n            case TemplateType.BranchBlock:\n                let { branch: br } = template.style as any;    \n                br.font = font(br.font);\n            case TemplateType.DictionaryBlock:\n                let { head: h, body: b } = template.style as any;\n                h.one_title.title.font = font(h.one_title.title.font);\n                h.two_title.title.font = font(h.two_title.title.font);\n                h.two_title.subtitle.font = font(h.two_title.subtitle.font);\n                b.field_name.font = font(b.field_name.font);\n                b.field_value.font = font(b.field_value.font);\n                break;\n            case TemplateType.TextBlock:\n                let { text: t } = template.style as any;\n                t.font = font(t.font);\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Serialization  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the diagram factory's internal schema.\n     * @returns\n     *  The diagram factory's internal schema.\n     */\n    public getSchema(): BlockDiagramSchema {\n        // Compile templates\n        let templates: SerializedTemplate[] = []\n        for(let template of this.templates.values()) {\n            let cloneTemplate = JSON.stringify(template, \n                (_: string, obj: any) => obj instanceof Font ? obj.descriptor : obj\n            );\n            templates.push(JSON.parse(cloneTemplate));\n        }\n        // Return schema\n        return {\n            page_template: this.schema.page_template,\n            templates: templates\n        }\n    }\n\n}\n\nexport type Namespace = Map<string, Namespace | string>;\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramObjectView } from \"../../DiagramViewTypes\";\nimport { \n    DiagramAnchorableModel,\n    DiagramAnchorModel\n} from \"./BaseModels\";\nimport {\n    RootProperty\n} from \"../../Property\";\nimport { \n    DiagramFactory,\n    DiagramObjectExport,\n    DiagramObjectValues,\n    ObjectTemplate,\n    SemanticRole\n} from \"../../DiagramFactory\";\nimport {\n    Alignment, AlignmentMask, Cursor, CursorMask, Hover, HoverMask,\n    InheritAlignmentMask, InheritAlignment, PositionSetByUser,\n    PositionSetByUserMask, Priority, PriorityMask, Select, SelectMask,\n    SemanticRoleMask     \n} from \"../../Attributes\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Diagram Object Model  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport abstract class DiagramObjectModel {\n\n    /**\n     * The object's id.\n     */\n    public readonly id: string;\n\n    /**\n     * The object's attributes.\n     */\n    public attrs: number;\n\n    /**\n     * The object's parent.\n     */\n    public parent: DiagramObjectModel | undefined;\n\n     /**\n      * The object's children.\n      */\n    public readonly children: DiagramObjectModel[];\n\n    /**\n     * The object's properties.\n     */\n    public readonly props: RootProperty;\n\n    /**\n     * The object's diagram factory.\n     */\n    public readonly factory: DiagramFactory;\n\n    /**\n     * The template the object was configured with.\n     */\n    public readonly template: ObjectTemplate;\n\n    /**\n     * The object's bounding box.\n     */\n    public readonly boundingBox: BoundingBox;\n\n    /**\n     * The object's root.\n     */\n    public get root(): DiagramObjectModel {\n        let owner = this as DiagramObjectModel;\n        while(owner.parent) {\n            owner = owner.parent;\n        }\n        return owner;\n    }\n\n    \n    /**\n     * Creates a new {@link DiagramObjectModel}.\n     * @param factory\n     *  The object's diagram factory.\n     * @param template\n     *  The object's template.\n     * @param values\n     *  The object's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        this.id = values?.id ?? (crypto as any).randomUUID();\n        this.attrs = values?.attrs ?? PositionSetByUser.False;\n        this.setAlignment(Alignment.Free);\n        this.setCursor(Cursor.Default);\n        this.setInheritAlignment(InheritAlignment.True);\n        this.setSemanticRole(SemanticRole.None);\n        this.children = [];\n        this.factory = factory;\n        this.template = template;\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.xMid = values?.x ?? 0;\n        this.boundingBox.yMid = values?.y ?? 0;\n        // Value configuration\n        this.props = new RootProperty(\n            this, template?.properties ?? {}, values?.properties\n        );\n        if(values?.children) {\n            for(let i = 0; i < values.children.length; i++) {\n                this.addChild(values.children[i], i, false);\n            }\n        }\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object and all child objects (in a breadth-first fashion).\n     * @param match\n     *  A predicate which is applied to each object. If the predicate returns\n     *  false, the object is not included in the enumeration.\n     * @returns\n     *  This object and all child objects.\n     */\n    public *getSubtree(\n        match?: (o: DiagramObjectModel) => boolean\n    ): IterableIterator<DiagramObjectModel> {\n        let visited = new Set<string>([this.id]);\n        let queue: DiagramObjectModel[] = [this];\n        while(queue.length != 0) {\n            let obj = queue.shift()!;\n            // Yield object\n            if(!match || match(obj)) {\n                yield obj;\n            }\n            // Don't traverse anchors\n            if(obj instanceof DiagramAnchorModel) {\n                continue;\n            }\n            // Enumerate children\n            for(let child of obj.children){\n                if(!visited.has(child.id)) {\n                    visited.add(child.id);\n                    queue.push(child);\n                }\n            }\n        }\n    }\n\n    /**\n     * Adds a child object.\n     * @param obj\n     *  The object to add.\n     * @param index\n     *  The child object's location in the array.\n     *  (Default: End of the array)\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     */\n    public addChild(\n        obj: DiagramObjectModel,\n        index: number = this.children.length,\n        update: boolean = true,\n    ) {\n        // Ensure it isn't already added\n        if(this.children.indexOf(obj) !== -1) {\n            throw new DiagramObjectModelError(\n                `Object already has a child with the id '${ obj.id }'.`, this\n            )\n        }\n        // Set object's parent\n        obj.parent = this;\n        // Add object to children\n        this.children.splice(index, 0, obj);\n        // Update layout\n        if(update) {\n            this.updateLayout(LayoutUpdateReason.ChildAdded);\n        }\n    }\n\n    /**\n     * Removes a child object.\n     * @param obj\n     *  The object to remove.\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     * @param safely\n     *  If the object should be checked for external attachments. Ordinarily,\n     *  all external attachments should be removed before removing an object to\n     *  ensure references to the object aren't kept elsewhere. However, when \n     *  executing a mass removal, removing ALL external attachments may not be\n     *  needed or wanted. Only disable this if you know what you're doing. \n     *  (Default: true)\n     */\n    public removeChild(obj: DiagramObjectModel, update: boolean = true, safely: boolean = true) {\n        let i = this.children.indexOf(obj);\n        if(i === -1) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' is not a child of '${ this.id }'.`, obj\n            );\n        }\n        // Check for external attachments\n        if(safely && obj.hasExternalAttachments()) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' still maintains external attachments.`, obj\n            );\n        }\n        // Clear object's parent\n        obj.parent = undefined;\n        // Remove object from children\n        this.children.splice(i, 1);\n        // Update layout\n        if(update) {\n            this.updateLayout(LayoutUpdateReason.ChildDeleted);\n        }\n    }\n\n    /**\n     * Reorders a child object.\n     * @param id\n     *  The id of the object.\n     * @param index\n     *  The object's new location.\n     */\n    public reorderChild(id: string, index: number) {\n        let i = this.children.findIndex(o => o.id === id);\n        let obj = this.children[i];\n        if(!obj) {\n            throw new DiagramObjectModelError(\n                `Object has no child with the id '${ id }'.`\n            );\n        }\n        // Remove child\n        this.children.splice(i, 1);\n        // Reinsert child\n        this.children.splice(index, 0, obj);\n    }\n\n    /**\n     * Tests if the object has any external attachments.\n     * @returns\n     *  True if the object has external attachments, false otherwise.\n     */\n    protected hasExternalAttachments(): boolean {\n        // Compile list of anchors and anchor-ables\n        let map = new Map<string, DiagramObjectModel>();\n        for(let obj of this.getSubtree()) {\n            if(\n                obj instanceof DiagramAnchorModel ||\n                obj instanceof DiagramAnchorableModel\n            ) {\n                map.set(obj.id, obj);\n            }\n        }\n        // Look for any dependencies that can't be found in the list\n        for(let obj of map.values()) {\n            if(obj instanceof DiagramAnchorableModel) {\n                if(obj.isAttached() && !map.has(obj.anchor!.id))\n                    return true;\n                continue;\n            }\n            if(obj instanceof DiagramAnchorModel) {\n                for(let c of obj.children) {\n                    if(!map.has(c.id))\n                        return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns the object's location in its parent.\n     * @returns\n     *  The object's location, -1 if it doesn't have a parent.\n     */\n    public getIndexInParent() {\n        return this.parent?.children.indexOf(this) ?? -1;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let object = undefined;\n        let select = undefined;\n        for(let i = this.children.length - 1; 0 <= i; i--) {\n            let child = this.children[i];\n            if(child instanceof DiagramAnchorableModel && child.isAttached()) {\n                // If child is attached to an anchor, selection is decided by anchor\n                continue;\n            }\n            select = child.getObjectAt(x, y);\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\n                object = select;\n                if(object.getPriority() === Priority.High) {\n                    break;\n                }\n            }\n        }\n        return object;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object to a specific coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveTo(x: number, y: number, updateParent: boolean = true) {\n        this.moveBy(\n            x - this.boundingBox.xMid,\n            y - this.boundingBox.yMid,\n            updateParent\n        );\n    }\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveBy(dx: number, dy: number, updateParent: boolean = true) {\n        // Move self\n        this.boundingBox.xMin += dx;\n        this.boundingBox.xMid += dx;\n        this.boundingBox.xMax += dx;\n        this.boundingBox.yMin += dy;\n        this.boundingBox.yMid += dy;\n        this.boundingBox.yMax += dy;\n        // Move non-anchored children\n        let atBaseOfMovement = true;\n        for(let obj of this.children) {\n            if(obj instanceof DiagramAnchorableModel && obj.isAttached()) {\n                continue;\n            }\n            atBaseOfMovement = false;\n            obj.moveBy(dx, dy);\n        }\n        // Update layout\n        if(atBaseOfMovement) {\n            this.updateLayout(LayoutUpdateReason.Movement, updateParent);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Completely recalculates the object's layout from the ground up.\n     */\n    public recalculateLayout() {\n        let atBaseOfLayout = true;\n        for(let obj of this.children) {\n            atBaseOfLayout = false;\n            obj.recalculateLayout();\n        }\n        if(atBaseOfLayout){\n            this.updateLayout(LayoutUpdateReason.Initialization);\n        }\n    }\n\n    /**\n     * Updates the object's alignment and bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Reset bounding box\n        bb.xMin = Infinity;\n        bb.yMin = Infinity;\n        bb.xMax = -Infinity;\n        bb.yMax = -Infinity;\n        // Reset alignment\n        let align = Alignment.Free;\n        // Update bounding box\n        for(let obj of this.children) {\n            bb.xMin = Math.min(bb.xMin, obj.boundingBox.xMin);\n            bb.yMin = Math.min(bb.yMin, obj.boundingBox.yMin);\n            bb.xMax = Math.max(bb.xMax, obj.boundingBox.xMax);\n            bb.yMax = Math.max(bb.yMax, obj.boundingBox.yMax);\n            align = Math.max(align, obj.getAlignment());\n        }\n        // Update center\n        bb.xMid = Math.floor((bb.xMin + bb.xMax) / 2);\n        bb.yMid = Math.floor((bb.yMin + bb.yMax) / 2);\n        // Update alignment\n        if(this.isAlignmentInherited()) {\n            this.setAlignment(align);\n        }\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract createView(cache: RasterCache): DiagramObjectView;\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Attribute Getters  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the object's alignment.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's alignment.\n     */\n    public getAlignment(attrs: number = this.attrs): number {\n        return attrs & AlignmentMask\n    }\n\n    /**\n     * Returns the object's cursor.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's cursor.\n     */\n    public getCursor(attrs: number = this.attrs): number {\n        return attrs & CursorMask;\n    }\n\n    /**\n     * Tests if the object is hovered.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object is hovered, false otherwise.\n     */\n    public isHovered(attrs: number = this.attrs): boolean {\n        return (attrs & HoverMask) !== Hover.Off;\n    }\n\n    /**\n     * Tests if the object is hovered or selected.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object is either hovered or selected, false otherwise.\n     */\n    public isHoveredOrSelected(attrs: number = this.attrs): boolean {\n        return 0 < (attrs & (SelectMask | HoverMask));\n    }\n    \n    /**\n     * Test if the object inherits alignment from it's children.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @return\n     *  True if the object inherits alignment, false otherwise.\n     */\n    public isAlignmentInherited(attrs: number = this.attrs): boolean {\n        return (attrs & InheritAlignmentMask) === InheritAlignment.True;\n    }\n\n    /**\n     * Tests if the user has explicitly set the object's position.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the user has set the object's position, false otherwise.\n     */\n    public hasUserSetPosition(attrs: number = this.attrs): boolean {\n        return (attrs & PositionSetByUserMask) === PositionSetByUser.True;\n    }\n\n    /**\n     * Returns the object's 'position set by user' attribute. \n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's 'position set by user' attribute.\n     */\n    public getPositionSetByUser(attrs: number = this.attrs): number {\n        return attrs & PositionSetByUserMask\n    }\n\n    /**\n     * Returns the object's selection priority.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's selection priority;\n     */\n    public getPriority(attrs: number = this.attrs): number  {\n        return attrs & PriorityMask;\n    }\n    \n    /**\n     * Tests which object has the higher selection priority.\n     * @param obj\n     *  The object to compare to.\n     * @returns\n     *  True if this object has a higher selection priority, false otherwise.\n     */\n    public hasHigherPriorityThan(obj: DiagramObjectModel): boolean {\n        return this.getPriority() > obj.getPriority();\n    }\n\n    /**\n     * Tests if the object is selected.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object is selected, false otherwise.\n     */\n    public isSelected(attrs: number = this.attrs): boolean {\n        return (attrs & SelectMask) === Select.True;\n    }\n\n    /**\n     * Returns the object's semantic role.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's semantic role.\n     */\n    public getSemanticRole(attrs: number = this.attrs): number {\n        return attrs & SemanticRoleMask;\n    }\n\n    /**\n     * Tests if the object has a semantic role.\n     * @param role\n     *  The role.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object has the role, false otherwise.\n     */\n    public hasRole(role: number, attrs: number = this.attrs): boolean {\n        return (attrs & SemanticRoleMask) === role;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  6. Attribute Setters  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Sets the object's alignment.\n     * @param alignment\n     *  The alignment.\n     */\n    public setAlignment(alignment: number) {\n        this.attrs = (this.attrs & ~AlignmentMask) | alignment;\n    }\n\n    /**\n     * Sets the object's cursor.\n     * @param cursor\n     *  The cursor.\n     */\n    public setCursor(cursor: number) {\n        this.attrs = (this.attrs & ~CursorMask) | cursor;\n    }\n\n    /**\n     * Sets the object's hover state.\n     * @param hover\n     *  The hover state.\n     */\n    public setHover(hover: number) {\n        this.attrs = (this.attrs & ~HoverMask) | hover;\n    }\n\n    /**\n     * Sets the object's 'inherit alignment' attribute.\n     * @param inherit\n     *  The attribute.\n     */\n    public setInheritAlignment(inherit: number) {\n        this.attrs = (this.attrs & ~InheritAlignmentMask) | inherit;\n    }\n\n    /**\n     * Sets the object's 'position set by user' attribute.\n     * @param positionSetByUser\n     *  The attribute.\n     */\n    public setPositionSetByUser(positionSetByUser: number) {\n        this.attrs = (this.attrs & ~PositionSetByUserMask) | positionSetByUser;\n    }\n\n    /**\n     * Sets the object's selection priority.\n     * @param priority\n     *  The selection priority.\n     */\n    public setPriority(priority: number) {\n        this.attrs = (this.attrs & ~PriorityMask) | priority;\n    }\n\n    /**\n     * Sets the object's selection state.\n     * @param select\n     *  The selection state.\n     */\n    public setSelect(select: number) {\n        this.attrs = (this.attrs & ~SelectMask) | select;\n    }\n\n    /**\n     * Sets the object's semantic role.\n     * @param role\n     *  The role.\n     */\n    public setSemanticRole(role: number) {\n        this.attrs = (this.attrs & ~SemanticRoleMask) | role;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  7. Content  ///////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Exports the {@link DiagramObjectModel}.\n     * @returns\n     *  The {@link DiagramObjectExport}.\n     */\n    public toExport(): DiagramObjectExport {\n        return {\n            id: this.id,\n            x: this.boundingBox.xMid,\n            y: this.boundingBox.yMid,\n            attrs: this.getPositionSetByUser(),\n            template: this.template.id,\n            children: this.children.map(el => el.id),\n            properties: this.props.toRawValue()\n        }\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Diagram Object Model Error  ////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class DiagramObjectModelError extends Error {\n\n    /**\n     * The error's subject.\n     */\n    public subject: DiagramObjectModel | undefined;\n\n    /**\n     * Creates a new {@link DiagramObjectModel}.\n     * @param subject\n     *  The error's subject.\n     */\n    constructor(message: string, subject?: DiagramObjectModel) {\n        super(message);\n        this.subject = subject;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Bounding Box  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class BoundingBox {\n\n    /**\n     * The bounding region's minimum x coordinate.\n     */\n    public xMin: number\n\n    /**\n     * The bounding region's minimum y coordinate.\n     */\n    public yMin: number\n\n    /**\n     * The bounding region's center x coordinate.\n     */\n    public xMid: number;\n\n    /**\n     * The bounding region's center y coordinate.\n     */\n    public yMid: number;\n\n    /**\n     * The bounding region's maximum x coordinate.\n     */\n    public xMax: number\n\n    /**\n     * The bounding region's maximum y coordinate.\n     */\n    public yMax: number;\n\n    /**\n     * Creates a new {@link BoundingBox}.\n     */\n    constructor() {\n        this.xMin = 0;\n        this.yMin = 0;\n        this.xMid = 0;\n        this.yMid = 0;\n        this.xMax = 0;\n        this.yMax = 0;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Layout Update Reason  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const LayoutUpdateReason = {\n    Initialization : 0b00001,\n    Movement       : 0b00010,\n    ChildAdded     : 0b00100,\n    ChildDeleted   : 0b01000,\n    PropUpdate     : 0b10000\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorView } from \"../../DiagramViewTypes\";\nimport { \n    DiagramAnchorableModel,\n    DiagramLineModel,\n    DiagramObjectModel,\n    DiagramObjectModelError,\n    LayoutUpdateReason\n} from \"./BaseModels\";\nimport {\n    AnchorAngle,\n    AnchorTemplate, \n    DiagramAnchorExport, \n    DiagramAnchorValues,\n    DiagramFactory\n} from \"../../DiagramFactory\";\nimport { Priority } from \"../../Attributes\";\n\nexport abstract class DiagramAnchorModel extends DiagramObjectModel {\n\n    /**\n     * The anchor's children.\n     */\n    // @ts-ignore Children will be initialized in DiagramObjectModel\n    public override readonly children: DiagramAnchorableModel[];\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: AnchorTemplate;\n\n    /**\n     * The anchor's angle.\n     */\n    public angle: AnchorAngle;\n\n    /**\n     * The anchor's radius.\n     */\n    public readonly radius: number;\n\n    /**\n     * The anchor's line templates.\n     */\n    public readonly lineTemplates: { [key: number]: string }\n\n\n    /**\n     * Creates a new {@link DiagramAnchorModel}.\n     * @param factory\n     *  The anchor's diagram factory.\n     * @param template\n     *  The anchor's template.\n     * @param values\n     *  The anchor's values. \n     */\n    constructor(\n        factory: DiagramFactory, \n        template: AnchorTemplate,\n        values?: DiagramAnchorValues\n    ) {\n        super(factory, template, values);\n        this.radius = template.radius;\n        this.template = template;\n        this.lineTemplates = template.line_templates;\n        this.angle = values?.angle ?? AnchorAngle.DEG_0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Links an anchorable to the anchor.\n     * @param obj\n     *  The anchorable object.\n     * @param index\n     *  The child object's location in the array.\n     *  (Default: End of the array)\n     * @throws { DiagramObjectModelError }\n     *  If `obj` is already anchored to another anchor.\n     */\n    public override addChild(\n        obj: DiagramObjectModel,\n        index: number = this.children.length\n    ): void {\n        // Ensure object is DiagramAnchorableModel\n        if(!(obj instanceof DiagramAnchorableModel)) {\n            let name = DiagramAnchorModel.name;\n            throw new DiagramObjectModelError(\n                `Child must be of type '${ name }.'`, obj\n            );\n        }\n        // Ensure object is not attached to something else\n        if(obj.isAttached()) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' is already anchored.`, obj\n            );\n        }\n        // Add anchor to object\n        obj.anchor = this;\n        // Add object to anchor\n        this.children.splice(index, 0, obj);\n    }\n\n    /**\n     * Unlinks an anchorable from the anchor. \n     * @param obj\n     *  The anchorable object.\n     */\n    public override removeChild(obj: DiagramAnchorableModel): void {\n        let i = this.children.indexOf(obj);\n        if(i === -1) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' is not attached to the '${ this.id }'.`, obj\n            );\n        }\n        // Remove anchor from object\n        obj.anchor = undefined;\n        // Remove object from anchor\n        this.children.splice(i, 1);\n    }\n\n    /**\n     * Tests if the anchor has attachments.\n     * @returns\n     *  True if the anchor has attachments, false otherwise.\n     */\n    public hasAttachments(): boolean {\n        return 0 < this.children.length\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let object = undefined;\n        let select = undefined;\n        for(let i = this.children.length - 1; 0 <= i; i--) {\n            select = this.children[i].getObjectAt(x, y)\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\n                object = select;\n                if(object.getPriority() === Priority.High) {\n                    break;\n                }\n            }\n        }\n        let r = this.radius;\n        let dx = x - this.boundingBox.xMid;\n        let dy = y - this.boundingBox.yMid;\n        if(object && object.getPriority() > Priority.Normal) {\n            return object;\n        } else if(dx * dx + dy * dy < r * r) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override moveBy(dx: number, dy: number, updateParent: boolean = true) {\n        // Move self\n        this.boundingBox.xMin += dx;\n        this.boundingBox.xMid += dx;\n        this.boundingBox.xMax += dx;\n        this.boundingBox.yMin += dy;\n        this.boundingBox.yMid += dy;\n        this.boundingBox.yMax += dy;\n        // Move anchored children\n        for(let obj of this.children) {\n            if(!obj.isAttached(this)) {\n                console.warn(`'${ obj.id }' incorrectly attached to anchor.`);\n                continue;\n            }\n            obj.moveTo(this.boundingBox.xMid, this.boundingBox.yMid);\n        }\n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Movement, updateParent);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the anchor's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.radius;\n        bb.yMin = bb.yMid - this.radius;\n        bb.xMax = bb.xMid + this.radius;\n        bb.yMax = bb.yMid + this.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramAnchorView;\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Content  ///////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Exports the {@link DiagramAnchorModel}.\n     * @returns\n     *  The {@link DiagramAnchorExport}.\n     */\n    public override toExport(): DiagramAnchorExport {\n        return {\n            ...super.toExport(),\n            angle: this.angle\n        }\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  6. Object Creation  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Creates a new line according to the anchor's current angle.\n     * @returns\n     *  The newly created line.\n     * @throws { DiagramObjectModelError }\n     *  If the configured template type is not a line.\n     */\n    public makeLine(): DiagramLineModel {\n        // Create line\n        let tem = this.lineTemplates[this.angle];\n        let obj = this.factory.createObject(tem);\n        // Return object\n        if(obj instanceof DiagramLineModel){\n            return obj;\n        } else {\n            throw new DiagramObjectModelError(\n                `Template '${ tem }' is not a line.`, obj\n            );\n        }\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorableView } from \"../../DiagramViewTypes\";\nimport { \n    DiagramAnchorModel,\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"./BaseModels\";\nimport { \n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramAnchorableModel extends DiagramObjectModel {\n\n    /**\n     * The anchorable's anchor.\n     */\n    public anchor: DiagramAnchorModel | undefined; \n\n\n    /**\n     * Creates a new {@link DiagramAnchorableModel}.\n     * @param factory\n     *  The anchorable's diagram factory.\n     * @param template\n     *  The anchorable's template.\n     * @param values\n     *  The anchorable's values. \n     */\n    constructor(\n        factory: DiagramFactory,\n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.anchor = undefined;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n    \n    /**\n     * Adds a child object.\n     */\n    public override addChild() {\n        throw new DiagramObjectModelError(\n            `Anchorable objects cannot have children.`, this\n        );\n    }\n\n    /**\n     * Removes a child object.\n     */\n    public override removeChild() {\n        throw new DiagramObjectModelError(\n            `Anchorable objects cannot have children.`, this\n        );\n    }\n\n    /**\n     * Reorders a child object.\n     */\n    public override reorderChild() {\n        throw new DiagramObjectModelError(\n            `Anchorable objects cannot be reordered.`, this\n        );\n    }\n\n    /**\n     * Tests if this object is attached to an anchor.\n     * @returns\n     *  True if this object is attached to an anchor, false otherwise.\n     */\n    public isAttached(): boolean;\n\n    /**\n     * Tests if this object is attached to the given anchor.\n     * @param anchor\n     *  The anchor.\n     * @returns\n     *  True if this object is attached to the given anchor, false otherwise.\n     */\n    public isAttached(anchor: DiagramAnchorModel): boolean;\n    public isAttached(anchor?: DiagramAnchorModel): boolean {\n        return anchor ? this.anchor === anchor : this.anchor !== undefined;\n    }\n\n    /**\n     * Returns the object's location in its anchor.\n     * @returns\n     *  The object's location, -1 if it isn't attached to an anchor.\n     */\n    public getIndexInAnchor() {\n        return this.anchor?.children.indexOf(this) ?? -1;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramAnchorableView;\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineEndingView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramLineModel,\n    DiagramAnchorableModel\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramLineEndingModel extends DiagramAnchorableModel {\n\n    /**\n     * The line ending's parent.\n     */\n    public override parent: DiagramLineModel | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineEndingModel}.\n     * @param factory\n     *  The line ending's diagram factory.\n     * @param template\n     *  The line ending's template.\n     * @param values\n     *  The line ending's values. \n     */\n    constructor(\n        factory: DiagramFactory,\n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     *  (Default: false)\n     */\n    public override moveBy(\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\n    ): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, updateParent);\n        } else {\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramLineEndingView;\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineHandleView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramLineHandleModel extends DiagramObjectModel {\n\n    /**\n     * The line handle's parent.\n     */\n    public override parent: DiagramLineModel | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineHandleModel}.\n     * @param factory\n     *  The line handle's diagram factory.\n     * @param template\n     *  The line handle's template.\n     * @param values\n     *  The line handle's values. \n     */\n    constructor(\n        factory: DiagramFactory,\n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     *  (Default: false)\n     */\n    public override moveBy(\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\n    ): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, updateParent);\n        } else {\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramLineHandleView;\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramObjectModel,\n    DiagramLineEndingModel,\n    DiagramLineHandleModel,\n    DiagramObjectModelError\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineStyle,\n    LineTemplate\n} from \"../../DiagramFactory\";\nimport { Priority } from \"../../Attributes\";\n\nexport abstract class DiagramLineModel extends DiagramObjectModel {\n\n    /**\n     * The line's children.\n     */\n    // @ts-ignore Children will be initialized in DiagramObjectModel\n    public override readonly children: DiagramLineObjectModel[];\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineTemplate;\n\n    /**\n     * The line's hitbox width.\n     */\n    protected readonly hitboxWidth: number;\n\n    /**\n     * The line's style.\n     */\n    public readonly style: LineStyle;\n\n    /**\n     * The line's source ending.\n     */\n    public get srcEnding(): DiagramLineEndingModel {\n        return this.children.at(0) as DiagramLineEndingModel;\n    }\n    \n    /**\n     * The line's target ending.\n     */\n    public get trgEnding(): DiagramLineEndingModel {\n        return this.children.at(-1) as DiagramLineEndingModel;\n    }\n\n    \n    /**\n     * Creates a new {@link DiagramLineModel}.\n     * @param factory\n     *  The line's diagram factory.\n     * @param template\n     *  The line's template.\n     * @param values\n     *  The line's values.\n     */\n     constructor(\n        factory: DiagramFactory, \n        template: LineTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.style = template.style;\n        this.template = template;\n        this.hitboxWidth = template.hitbox_width;\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Adds a child object.\n     * @param obj\n     *  The object to add.\n     * @param index\n     *  The child object's location in the array.\n     *  (Default: End of the array)\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     * @throws { Error }\n     *  If `obj` is not of type {@link DiagramLineObjectModel}.\n     */\n    public override addChild(\n        obj: DiagramObjectModel,\n        index: number = this.children.length,\n        update: boolean = true\n    ): void {\n        if(obj instanceof DiagramLineEndingModel || obj instanceof DiagramLineHandleModel) {\n            super.addChild(obj, index, update);\n        } else {\n            let le = DiagramLineEndingModel.name;\n            let lh = DiagramLineHandleModel.name;\n            throw new DiagramObjectModelError(\n                `Child must be of type '${ le }' or '${ lh }.'`, obj\n            );\n        }\n    }\n\n    /**\n     * Reorders a child object.\n     * @param id\n     *  The id of the object.\n     * @param index\n     *  The object's new location.\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     */\n    public override reorderChild(id: string, index: number, update: boolean= true) {\n        throw new DiagramObjectModelError(\n            `Line objects cannot be reordered.`, this\n        );\n    }\n\n    /**\n     * Tests if the line is anchored on either end.\n     * @returns\n     *  True if the line is anchored on either end, false otherwise.\n     */\n    protected isAnchored() {\n        for(let obj of this.children) {\n            if(obj instanceof DiagramLineEndingModel && obj.isAttached()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public abstract moveChild(id: string, dx: number, dy: number, updateParent?: boolean): void;\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramLineView;\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Attribute Setters  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Sets the object's selection state.\n     * @param select\n     *  The selection state.\n     */\n    public override setSelect(select: number) {\n        super.setSelect(select);\n        // Promote priority of children when selected\n        let priority = this.isSelected() \n            ? Priority.High\n            : Priority.Normal;\n        for(let obj of this.children) {\n            obj.setPriority(priority);\n        }\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type DiagramLineObjectModel \n    = DiagramLineEndingModel \n    | DiagramLineHandleModel;\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramRootView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramRootModel extends DiagramObjectModel {\n    \n    /**\n     * The root's internal anchor cache.\n     */\n    public readonly anchorCache: DiagramAnchorModel[];\n    \n    /**\n     * The root's internal object cache.\n     */\n    private readonly _objectCache: Map<string, DiagramObjectModel>;\n\n\n    /**\n     * Creates a new {@link DiagramRootModel}.\n     * @param factory\n     *  The root's diagram factory.\n     * @param template\n     *  The root's template.\n     * @param values \n     *  The root's values.\n     */\n    constructor(factory: DiagramFactory, template: ObjectTemplate, values?: DiagramObjectValues) {\n        super(factory, template, values);\n        this.anchorCache = [];\n        this._objectCache = new Map([[this.id, this]]);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Diagram Object Lookup  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns an object from the diagram.\n     * @param id\n     *  The id of the object.\n     * @returns\n     *  The object or `undefined` if no object with that id exists.\n     */\n    public lookup<T extends DiagramObjectModel>(id: string): T | undefined {\n        return this._objectCache.get(id) as T;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the root's alignment, bounding box, and object cache.\n     * @param reasons\n     *  The reasons the layout was updated. \n     */\n    public override updateLayout(reasons: number): void {\n        let { ChildAdded, ChildDeleted, Initialization } = LayoutUpdateReason;\n        // Update layout\n        super.updateLayout(reasons);\n        // Rebuild caches\n        if(reasons & (Initialization | ChildAdded | ChildDeleted)){\n            this._objectCache.clear();\n            this.anchorCache.splice(0, this.anchorCache.length);\n            for(let obj of this.getSubtree()) {\n                if(obj instanceof DiagramAnchorModel) {\n                    this.anchorCache.push(obj);\n                }\n                this._objectCache.set(obj.id, obj);\n            }\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramRootView;\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineEndingPointView } from \"../DiagramViewTypes\";\nimport { \n    DiagramLineEndingModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \"./BaseTypes/BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineEndingPointStyle,\n    LineEndingPointTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineEndingPointModel extends DiagramLineEndingModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineEndingPointTemplate;\n\n    /**\n     * The line ending's style.\n     */\n    public readonly style: LineEndingPointStyle;\n\n\n    /**\n     * Creates a new {@link LineEndingPointModel}.\n     * @param factory\n     *  The line ending point's diagram factory.\n     * @param template\n     *  The line ending point's template.\n     * @param values\n     *  The line ending point's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: LineEndingPointTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setCursor(Cursor.Pointer);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let dx = x - this.boundingBox.xMid;\n        let dy = y - this.boundingBox.yMid;\n        let r = this.style.radius;\n        return dx * dx + dy * dy < r * r ? this : undefined;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the line ending's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.style.radius;\n        bb.yMin = bb.yMid - this.style.radius;\n        bb.xMax = bb.xMid + this.style.radius;\n        bb.yMax = bb.yMid + this.style.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineEndingPointView {\n        return new LineEndingPointView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineHandlePointView } from \"../DiagramViewTypes\";\nimport {\n    DiagramLineHandleModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \"./BaseTypes/BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineHandlePointStyle,\n    LineHandlePointTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineHandlePointModel extends DiagramLineHandleModel {\n    \n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineHandlePointTemplate;\n\n    /**\n     * The line handle's style.\n     */\n    public readonly style: LineHandlePointStyle;\n\n\n    /**\n     * Creates a new {@link LineHandlePointModel}.\n     * @param factory\n     *  The line handle point's diagram factory.\n     * @param template\n     *  The line handle point's template.\n     * @param values\n     *  The line handle point's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: LineHandlePointTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setCursor(Cursor.Move);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let dx = x - this.boundingBox.xMid;\n        let dy = y - this.boundingBox.yMid;\n        let r = this.style.radius;\n        return dx * dx + dy * dy < r * r ? this : undefined;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the line handle's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.style.radius;\n        bb.yMin = bb.yMid - this.style.radius;\n        bb.xMax = bb.xMid + this.style.radius;\n        bb.yMax = bb.yMid + this.style.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineHandlePointView {\n        return new LineHandlePointView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineHorizontalElbowView } from \"../DiagramViewTypes\";\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    LayoutUpdateReason,\n    LineEndingPointModel,\n    LineHandlePointModel\n} from \".\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineHorizontalElbowTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineHorizontalElbowModel extends DiagramLineModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineHorizontalElbowTemplate;\n\n    /**\n     * The line's hitboxes.\n     *  [0] = The 1st horizontal segment's hitbox.\n     *  [1] = The vertical segment's hitbox.\n     *  [2] = The 2nd horizontal segment's hitbox.\n     */\n    public readonly hitboxes: number[][];\n\n\n    /**\n     * Creates a new {@link LineHorizontalElbowModel}.\n     * @param factory\n     *  The line's diagram factory.\n     * @param template\n     *  The line's template.\n     * @param values\n     *  The line's values.\n     */\n     constructor(\n        factory: DiagramFactory, \n        template: LineHorizontalElbowTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.hitboxes = [[],[],[]];\n        this.setCursor(Cursor.Move);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        // Define children \n        if(!this.children.length) {\n            let x = this.boundingBox.xMid;\n            let y = this.boundingBox.yMid;\n            // Define Caps and Handles\n            let src = template.line_ending_template.source;\n            let han = template.line_handle_template;\n            let trg = template.line_ending_template.target;\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\n            // Define position\n            for(let obj of this.children) {\n                obj.moveTo(x, y);\n            }\n            this.children[0].moveBy(-100, 50);\n            this.children[2].moveBy(100, -50);\n        }        \n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        if(this.isAnchored()) {\n            // Try points\n            let obj = super.getObjectAt(x, y);\n            if(obj) {\n                return obj;\n            }\n            // Try segments\n            for(let i = 0; i < this.hitboxes.length; i++) {\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\n                    continue;\n                if(i === 1) {\n                    return this.children[i];\n                } else {\n                    return this;\n                }\n            }\n        } else {\n            if(this.isSelected()) {\n                // Try points\n                let obj = super.getObjectAt(x, y);\n                if(obj) {\n                    return obj;\n                }\n            }\n            // Try segments\n            for(let hitbox of this.hitboxes) {\n                if(isInsideRegion(x, y, hitbox)) {\n                    return this;\n                }\n            }\n        }\n        return undefined;\n    }   \n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\n        // Select child\n        let obj = this.children.find(o => o.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof LineEndingPointModel) {\n            obj.moveBy(dx, dy, updateParent, true);\n        }\n        // Move handle\n        let [e1, h1, e2] = this.children;\n        let e1x = e1.boundingBox.xMid,\n            e1y = e1.boundingBox.yMid,\n            e2x = e2.boundingBox.xMid,\n            e2y = e2.boundingBox.yMid,\n            h1x = h1.boundingBox.xMid,\n            h2y = h1.boundingBox.yMid,\n            hdx = ((e1x + e2x) / 2) - h1x,\n            hdy = ((e1y + e2y) / 2) - h2y;\n        if(!h1.hasUserSetPosition()) {\n            h1.moveBy(hdx, 0, updateParent, true);\n        } else if(obj === h1) {\n            h1.moveBy(dx, 0, updateParent, true);\n        }\n        h1.moveBy(0, hdy, updateParent, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\n     * @param reasons\n     *  The reasons the layout was updated.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\n        // Update hitboxes\n        let w = this.hitboxWidth;\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, h1.xMid, e1.yMid, w);\n        this.hitboxes[1] = getLineHitbox(h1.xMid, e1.yMid, h1.xMid, e2.yMid, w);\n        this.hitboxes[2] = getLineHitbox(h1.xMid, e2.yMid, e2.xMid, e2.yMid, w);\n        // Update cursor\n        this.children[1].setCursor(Cursor.Col_Resize);\n        // Update bounding box\n        super.updateLayout(reasons, updateParent);\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineHorizontalElbowView {\n        return new LineHorizontalElbowView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineVerticalElbowView } from \"../DiagramViewTypes\";\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    LayoutUpdateReason,\n    LineEndingPointModel,\n    LineHandlePointModel\n} from \".\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineVerticalElbowTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineVerticalElbowModel extends DiagramLineModel {\n    \n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineVerticalElbowTemplate;\n\n    /**\n     * The line's hitboxes.\n     *  [0] = The 1st vertical segment's hitbox.\n     *  [1] = The horizontal segment's hitbox.\n     *  [2] = The 2nd vertical segment's hitbox.\n     */\n    public readonly hitboxes: number[][];\n\n\n    /**\n     * Creates a new {@link LineVerticalElbowModel}.\n     * @param factory\n     *  The line's diagram factory.\n     * @param template\n     *  The line's template.\n     * @param values\n     *  The line's values.\n     */\n     constructor(\n        factory: DiagramFactory, \n        template: LineVerticalElbowTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.hitboxes = [[],[],[]];\n        this.setCursor(Cursor.Move);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        // Define children \n        if(!this.children.length) {\n            let x = this.boundingBox.xMid;\n            let y = this.boundingBox.yMid;\n            // Define Caps and Handles\n            let src = template.line_ending_template.source;\n            let han = template.line_handle_template;\n            let trg = template.line_ending_template.target;\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\n            // Define position\n            for(let obj of this.children) {\n                obj.moveTo(x, y);\n            }\n            this.children[0].moveBy(-50, 100);\n            this.children[2].moveBy(50, -100);\n        }        \n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        if(this.isAnchored()) {\n            // Try points\n            let obj = super.getObjectAt(x, y);\n            if(obj) {\n                return obj;\n            }\n            // Try segments\n            for(let i = 0; i < this.hitboxes.length; i++) {\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\n                    continue;\n                if(i === 1) {\n                    return this.children[i];\n                } else {\n                    return this;\n                }\n            }\n        } else {\n            if(this.isSelected()) {\n                // Try points\n                let obj = super.getObjectAt(x, y);\n                if(obj) {\n                    return obj;\n                }\n            }\n            // Try segments\n            for(let hitbox of this.hitboxes) {\n                if(isInsideRegion(x, y, hitbox)) {\n                    return this;\n                }\n            }\n        }\n        return undefined;\n    }   \n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\n        // Select child\n        let obj = this.children.find(o => o.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof LineEndingPointModel) {\n            obj.moveBy(dx, dy, updateParent, true);\n        }\n        // Move handle\n        let [e1, h1, e2] = this.children;\n        let e1x = e1.boundingBox.xMid,\n            e1y = e1.boundingBox.yMid,\n            e2x = e2.boundingBox.xMid,\n            e2y = e2.boundingBox.yMid,\n            h1x = h1.boundingBox.xMid,\n            h2y = h1.boundingBox.yMid,\n            hdx = ((e1x + e2x) / 2) - h1x,\n            hdy = ((e1y + e2y) / 2) - h2y;\n        if(!h1.hasUserSetPosition()) {\n            h1.moveBy(0, hdy, updateParent, true);\n        } else if(obj === h1) {\n            h1.moveBy(0, dy, updateParent, true);\n        }\n        h1.moveBy(hdx, 0, updateParent, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\n     * @param reasons\n     *  The reasons the layout was updated.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\n        // Update hitboxes\n        let w = this.hitboxWidth;\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, e1.xMid, h1.yMid, w);\n        this.hitboxes[1] = getLineHitbox(e1.xMid, h1.yMid, e2.xMid, h1.yMid, w);\n        this.hitboxes[2] = getLineHitbox(e2.xMid, h1.yMid, e2.xMid, e2.yMid, w);\n        // Update cursor\n        this.children[1].setCursor(Cursor.Row_Resize);\n        // Update bounding box\n        super.updateLayout(reasons, updateParent);\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineVerticalElbowView {\n        return new LineVerticalElbowView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { AnchorPointView } from \"../DiagramViewTypes\";\nimport { \n    DiagramAnchorModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorPointStyle,\n    AnchorPointTemplate,\n    DiagramAnchorValues,\n    DiagramFactory\n} from \"../DiagramFactory\";\n\nexport class AnchorPointModel extends DiagramAnchorModel {\n    \n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: AnchorPointTemplate;\n\n    /**\n     * The point's style.\n     */\n    public readonly style: AnchorPointStyle;\n\n\n    /**\n     * Creates a new {@link AnchorPointModel}.\n     * @param factory\n     *  The anchor point's diagram factory.\n     * @param template\n     *  The anchor point's template.\n     * @param values\n     *  The anchor point's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: AnchorPointTemplate,\n        values?: DiagramAnchorValues\n    ) {\n        super(factory, template, values);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the anchor point's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.radius;\n        bb.yMin = bb.yMid - this.radius;\n        bb.xMax = bb.xMid + this.radius;\n        bb.yMax = bb.yMid + this.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }   \n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): AnchorPointView {\n        return new AnchorPointView(this, cache);\n    }\n    \n}\n","import { Font, titleCase } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { DictionaryBlockView } from \"../DiagramViewTypes\";\nimport {\n    AnchorPointModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorAngle,\n    DiagramFactory,\n    DiagramObjectValues,\n    DictionaryBlockStyle,\n    DictionaryBlockTemplate\n} from \"../DiagramFactory\";\nimport {\n    Alignment,\n    Cursor,\n    InheritAlignment\n} from \"../Attributes\";\n\nexport class DictionaryBlockModel extends DiagramObjectModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: DictionaryBlockTemplate;\n\n    /**\n     * The block's style.\n     */\n    public readonly style: DictionaryBlockStyle\n\n    /**\n     * The block's render layout.\n     */\n    public layout: DictionaryBlockRenderLayout;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockModel}.\n     * @param factory\n     *  The block's diagram factory.\n     * @param template\n     *  The block's template.\n     * @param values\n     *  The block's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: DictionaryBlockTemplate, \n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setInheritAlignment(InheritAlignment.False);\n        this.setAlignment(Alignment.Grid);\n        this.setCursor(Cursor.Move);\n        this.layout = {} as any;\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Anchor configuration\n        if(!this.children.length) {\n            let t = template.anchor_template;\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\n            for(let i = 0, anchor; i < 12; i++) {\n                anchor = factory.createObject(t) as AnchorPointModel;\n                anchor.angle = a[Math.floor(i / 3) % 2];\n                this.addChild(anchor, i, false);\n            }\n        }\n        // Property configuration\n        this.props.onUpdate(() => {\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\n        });\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        // Try anchors\n        let obj = super.getObjectAt(x, y);\n        if(obj) {\n            return obj;\n        }\n        // Try object\n        let bb = this.boundingBox;\n        if(\n            bb.xMin <= x && x <= bb.xMax &&\n            bb.yMin <= y && y <= bb.yMax  \n        ) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the block's bounding box and render layout.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let contentHash = this.props.toHashValue();\n        let contentChanged = this.layout.contentHash !== contentHash;\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\n        \n        // Update layout\n        if(fullLayoutRequired || contentChanged) {\n\n            let {\n                max_width,\n                head,\n                body,\n                horizontal_padding\n            } = this.style;\n            let fnf = body.field_name;\n            let fvf = body.field_value;\n            let text: TextSet[] = [];\n            let strokeWidth = 1;\n            \n            // Configure title and subtitle\n            let titleText = titleCase(this.template.id).toLocaleUpperCase();\n            let subtitleText = this.props.isDefined() ? this.props.toString() : \"\";\n            let hasSubtitle = subtitleText !== \"\";\n            let hasBody = this.hasFields();\n            let tf = (hasSubtitle ? head.two_title : head.one_title).title;\n\n            // Calculate max width\n            let mw = max_width;\n            mw = Math.max(mw, tf.font.measureWidth(titleText));\n            for(let key of this.props.value.keys()) {\n                mw = Math.max(mw, body.field_name.font.measureWidth(key));\n            }\n\n            // Calculate text\n            let m = null;\n            let w = 0;\n            let x = strokeWidth + horizontal_padding;\n            let y = strokeWidth + head.vertical_padding;\n            \n            // Create title text set\n            let title: TextSet = {\n                font: tf.font,\n                color: tf.color,\n                text: []\n            }\n            text.push(title);\n            \n            // Calculate title text\n            m = tf.font.measure(titleText);\n            w = Math.max(w, m.width);\n            y += m.ascent;\n            title.text.push({ x, y, t: titleText });\n            y += m.descent + ((tf as any).padding ?? 0);\n            \n            // Calculate subtitle text\n            if(hasSubtitle) {\n                let stf = head.two_title.subtitle;\n\n                // Create subtitle text set\n                let subtitle: TextSet = {\n                    font: stf.font,\n                    color: stf.color,\n                    text: []\n                }\n                text.push(subtitle);\n\n                // Calculate subtitle text\n                let lines = stf.font.wordWrap(subtitleText, mw);\n                m = stf.font.measure(lines[0]);\n                w = Math.max(w, m.width);\n                y += m.ascent;\n                subtitle.text.push({ x, y, t: lines[0] });\n                for(let i = 1; i < lines.length; i++) {\n                    m = stf.font.measure(lines[i]);\n                    w = Math.max(w, m.width);\n                    y += stf.line_height;\n                    subtitle.text.push({ x, y, t: lines[i] });\n                }\n\n            }\n            y += head.vertical_padding + strokeWidth;\n\n            // Calculate header height\n            let headerHeight = Math.round(y);\n\n            // Calculate fields\n            if(hasBody) {\n\n                // Create field name & value text sets\n                let fieldName: TextSet = {\n                    font: fnf.font,\n                    color: fnf.color,\n                    text: []\n                }\n                let fieldValue: TextSet = {\n                    font: fvf.font,\n                    color: fvf.color,\n                    text: []\n                }\n                text.push(fieldName);\n                text.push(fieldValue);\n\n                // Calculate fields\n                y += body.vertical_padding;\n                for(let [key, value] of this.props.value) {\n\n                    // Ignore empty fields\n                    if(!value.isDefined())\n                        continue;\n\n                    // Ignore hidden fields \n                    if(!(value.descriptor.is_visible ?? true))\n                        continue;\n                    \n                    // Ignore the primary key\n                    if(key === this.props.primaryKey)\n                        continue;\n                    \n                    // Calculate field name text\n                    key = key.toLocaleUpperCase();\n                    m = fnf.font.measure(key);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldName.text.push({ x, y, t: key });\n                    y += m.descent + body.field_name.padding;\n                    \n                    // Calculate field value text\n                    let lines = fvf.font.wordWrap(value.toString(), mw);\n                    m = fvf.font.measure(lines[0]);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldValue.text.push({ x, y, t: lines[0] });\n                    for(let i = 1; i < lines.length; i++) {\n                        m = fvf.font.measure(lines[i]);\n                        w = Math.max(w, m.width);\n                        y += fvf.line_height;\n                        fieldValue.text.push({ x, y, t: lines[i] });\n                    }\n                    y += body.field_value.padding;\n                    \n                }\n                y -= body.field_value.padding;\n                y += body.vertical_padding;\n\n            } else {\n                y -= strokeWidth;\n            }\n\n            // Calculate block's size\n            let width = Math.round(w + ((horizontal_padding + strokeWidth) * 2));\n            let height = Math.round(y + strokeWidth);\n            \n            // Calculate block's bounding box\n            let bb = this.boundingBox;\n            let xMin = Math.round(bb.xMid - (width / 2));\n            let yMin = Math.round(bb.yMid - (height / 2));\n            let xMax = Math.round(bb.xMid + (width / 2));\n            let yMax = Math.round(bb.yMid + (height / 2));\n\n            // Update anchors\n            let xo = (bb.xMid - xMin) / 2;\n            let yo = (bb.yMid - yMin) / 2;\n            let anchors = [\n                bb.xMid - xo, yMin,\n                bb.xMid, yMin,\n                bb.xMid + xo, yMin,\n                xMax, bb.yMid - yo,\n                xMax, bb.yMid,\n                xMax, bb.yMid + yo,\n                bb.xMid + xo, yMax,\n                bb.xMid, yMax,\n                bb.xMid - xo, yMax,\n                xMin, bb.yMid + yo,\n                xMin, bb.yMid,\n                xMin, bb.yMid - yo\n            ];\n            for(let i = 0; i < anchors.length; i += 2) {\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\n            }\n\n            // Update object's bounding box\n            super.updateLayout(reasons, false);\n\n            // Update layout\n            this.layout = {\n                contentHash,\n                dx: xMin - bb.xMin,\n                dy: yMin - bb.yMin,\n                width,\n                height,\n                headerHeight,\n                text\n            };\n\n        }\n\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n        \n    }\n\n    /**\n     * Tests if the block has defined fields.\n     * @returns\n     *  True if the block has defined fields, false otherwise.\n     */\n    public hasFields() {\n        for(let [key, value] of this.props.value) {\n            if(key === this.props.primaryKey)\n                continue;\n            if(!(value.descriptor.is_visible ?? true))\n                continue;\n            if(value.isDefined())\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): DictionaryBlockView {\n        return new DictionaryBlockView(this, cache);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype DictionaryBlockRenderLayout = {\n    \n    /**\n     * The layout's content hash.\n     */\n    contentHash: number\n    \n    /**\n     * The block's x offset from the top-left corner of the bounding box.\n     */\n    dx: number;\n\n    /**\n     * The block's y offset from the top-left corner of the bounding box.\n     */\n    dy: number;\n\n    /**\n     * The block's width.\n     */\n    width: number,\n\n    /**\n     * The blocks's height.\n     */\n    height: number,\n\n    /**\n     * The block's header height.\n     */\n    headerHeight: number\n\n    /**\n     * The text to draw.\n     */\n    text: TextSet[]\n\n}\n\ntype TextSet = {\n\n    /**\n     * The text's fonts.\n     */\n    font: Font,\n\n    /**\n     * The text's color.\n     */\n    color: string,\n\n    /**\n     * The text placements.\n     */\n    text: TextPlacement[]\n\n}\n\ntype TextPlacement = { \n    \n    /**\n     * The x-axis coordinate relative to the top-left coordinate of the block.\n     */\n    x: number,\n\n    /**\n     * The y-axis coordinate relative to the top-left coordinate of the block.\n     */\n    y: number,\n\n    /**\n     * The text.\n     */\n    t: string\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { BranchBlockView } from \"../DiagramViewTypes\";\nimport {\n    AnchorPointModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorAngle,\n    BranchBlockStyle,\n    BranchBlockTemplate,\n    DiagramFactory,\n    DiagramObjectValues\n} from \"../DiagramFactory\";\nimport {\n    Alignment,\n    Cursor,\n    InheritAlignment\n} from \"../Attributes\";\nimport { Font, titleCase } from \"../Utilities\";\n\nexport class BranchBlockModel extends DiagramObjectModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: BranchBlockTemplate;\n\n    /**\n     * The block's style.\n     */\n    public readonly style: BranchBlockStyle\n\n    /**\n     * The block's render layout.\n     */\n    public layout: DictionaryBlockRenderLayout;\n\n\n    /**\n     * Creates a new {@link BranchBlockModel}.\n     * @param factory\n     *  The block's diagram factory.\n     * @param template\n     *  The block's template.\n     * @param values\n     *  The block's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: BranchBlockTemplate, \n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setInheritAlignment(InheritAlignment.False);\n        this.setAlignment(Alignment.Grid);\n        this.setCursor(Cursor.Move);\n        this.layout = {} as any;\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Anchor configuration\n        if(!this.children.length) {\n            let anchor;\n            let t = template.anchor_template;\n            let a = [AnchorAngle.DEG_0, AnchorAngle.DEG_90];\n            // Standard anchors\n            for(let i = 0; i < 9; i++) {\n                anchor = factory.createObject(t) as AnchorPointModel;\n                anchor.angle = a[Math.floor(i / 3) % 2];\n                this.addChild(anchor, i, false);\n            }\n            // Branch anchors\n            for(let b of this.template.branches) {\n                anchor = factory.createObject(b.anchor_template) as AnchorPointModel;\n                anchor.angle = AnchorAngle.DEG_90,\n                this.addChild(anchor, this.children.length, false);\n            }\n        }\n        // Property configuration\n        this.props.onUpdate(() => {\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\n        })\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        // Try anchors\n        let obj = super.getObjectAt(x, y);\n        if(obj) {\n            return obj;\n        }\n        // Try object\n        let bb = this.boundingBox;\n        if(\n            bb.xMin <= x && x <= bb.xMax &&\n            bb.yMin <= y && y <= bb.yMax  \n        ) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the block's bounding box and render layout.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let contentHash = this.props.toHashValue();\n        let contentChanged = this.layout.contentHash !== contentHash;\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\n        \n        // Update layout\n        if(fullLayoutRequired || contentChanged) {\n\n            let {\n                max_width,\n                head,\n                body,\n                branch,\n                horizontal_padding\n            } = this.style;\n            let {\n                branches\n            } = this.template;\n            let fnf = body.field_name;\n            let fvf = body.field_value;\n            let text: TextSet[] = [];\n            let lines: Line[] = [];\n            let strokeWidth = 1;\n            \n            // Configure title and subtitle\n            let titleText = titleCase(this.template.id).toLocaleUpperCase();\n            let subtitleText = this.props.isDefined() ? this.props.toString() : \"\";\n            let hasSubtitle = subtitleText !== \"\";\n            let hasBody = this.hasFields();\n            let tf = (hasSubtitle ? head.two_title : head.one_title).title;\n\n            // Calculate base width\n            let bw = 0;\n            for(let b of branches) {\n                bw += branch.horizontal_padding;\n                bw += branch.font.measureWidth(b.text);\n                bw += branch.horizontal_padding + strokeWidth;\n            }\n            bw -= strokeWidth + (2 * horizontal_padding);\n\n            // Calculate max width\n            let mw = max_width;\n            mw = Math.max(mw, tf.font.measureWidth(titleText));\n            for(let key of this.props.value.keys()) {\n                mw = Math.max(mw, body.field_name.font.measureWidth(key));\n            }\n            mw = Math.max(mw, bw);\n\n            // Calculate text\n            let m = null;\n            let w = 0;\n            let x = strokeWidth + horizontal_padding;\n            let y = strokeWidth + head.vertical_padding;\n            \n            // Create title text set\n            let title: TextSet = {\n                font: tf.font,\n                color: tf.color,\n                text: []\n            }\n            text.push(title);\n            \n            // Calculate title text\n            m = tf.font.measure(titleText);\n            w = Math.max(w, m.width);\n            y += m.ascent;\n            title.text.push({ x, y, t: titleText });\n            y += m.descent + ((tf as any).padding ?? 0);\n\n            // Calculate subtitle text\n            if(hasSubtitle) {\n                let stf = head.two_title.subtitle;\n\n                // Create subtitle text set\n                let subtitle: TextSet = {\n                    font: stf.font,\n                    color: stf.color,\n                    text: []\n                }\n                text.push(subtitle);\n\n                // Calculate subtitle text\n                let lines = stf.font.wordWrap(subtitleText, mw);\n                m = stf.font.measure(lines[0]);\n                w = Math.max(w, m.width);\n                y += m.ascent;\n                subtitle.text.push({ x, y, t: lines[0] });\n                for(let i = 1; i < lines.length; i++) {\n                    m = stf.font.measure(lines[i]);\n                    w = Math.max(w, m.width);\n                    y += stf.line_height;\n                    subtitle.text.push({ x, y, t: lines[i] });\n                }\n\n            }\n            y += head.vertical_padding + strokeWidth;\n\n            // Calculate header height\n            let headerHeight =  Math.round(y);\n\n            // Calculate fields\n            if(hasBody) {\n\n                // Create field name & value text sets\n                let fieldName: TextSet = {\n                    font: fnf.font,\n                    color: fnf.color,\n                    text: []\n                }\n                let fieldValue: TextSet = {\n                    font: fvf.font,\n                    color: fvf.color,\n                    text: []\n                }\n                text.push(fieldName);\n                text.push(fieldValue);\n\n                // Calculate fields\n                y += body.vertical_padding;\n                for(let [key, value] of this.props.value) {\n\n                    // Ignore empty fields\n                    if(!value.isDefined())\n                        continue;\n\n                    // Ignore hidden fields \n                    if(!(value.descriptor.is_visible ?? true))\n                        continue;\n                    \n                    // Ignore the primary key\n                    if(key === this.props.primaryKey)\n                        continue;\n                    \n                    // Calculate field name text\n                    key = key.toLocaleUpperCase();\n                    m = fnf.font.measure(key);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldName.text.push({ x, y, t: key });\n                    y += m.descent + body.field_name.padding;\n                    \n                    // Calculate field value text\n                    let lines = fvf.font.wordWrap(value.toString(), mw);\n                    m = fvf.font.measure(lines[0]);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldValue.text.push({ x, y, t: lines[0] });\n                    for(let i = 1; i < lines.length; i++) {\n                        m = fvf.font.measure(lines[i]);\n                        w = Math.max(w, m.width);\n                        y += fvf.line_height;\n                        fieldValue.text.push({ x, y, t: lines[i] });\n                    }\n                    y += body.field_value.padding;\n                    \n                }\n                y -= body.field_value.padding;\n                y += body.vertical_padding;\n\n            } else {\n                y -= strokeWidth;\n            }\n\n            // Create branch text set\n            let branchText: TextSet = {\n                font: branch.font,\n                color: branch.color,\n                text: []\n            }\n            text.push(branchText);\n\n            // Calculate branches\n            y += strokeWidth;\n            w = Math.max(w, bw) + (2 * horizontal_padding);\n            let vp = branch.vertical_padding;\n            let _x = strokeWidth;\n            let _m = branches.map(b => branch.font.measure(b.text));\n            let _h = Math.max(..._m.map(m => m.ascent + m.descent)) + vp * 2;\n            let _hh = _h / 2;\n            let _hw = w / _m.length / 2;\n            \n            // Text and line placements\n            let x0, y0;\n            for(let i = 0; i < _m.length; i++) {\n                _x += _hw;\n                branchText.text.push({ \n                    x: Math.round(_x - _m[i].width / 2),\n                    y: y + Math.round(_hh + (_m[i].ascent / 2)),\n                    t: branches[i].text\n                });\n                _x += _hw;\n                x0 = Math.round(_x) + 0.5;\n                lines.push({ x0, y0: y, x1: x0, y1: y + _h });\n            }\n            lines.pop();\n            y0 = Math.round(y) - 0.5;\n            y += _h;\n            \n            // Calculate block's size\n            let width = Math.round(w + (strokeWidth * 2));\n            let height = Math.round(y + strokeWidth);\n\n            // Add block line\n            lines.push({ x0: 0, y0, x1: width, y1: y0 });\n\n            // Calculate block's bounding box\n            let bb = this.boundingBox;\n            let xMin = Math.round(bb.xMid - (width / 2));\n            let yMin = Math.round(bb.yMid - (height / 2));\n            let xMax = Math.round(bb.xMid + (width / 2));\n            let yMax = Math.round(bb.yMid + (height / 2));\n\n            // Update anchors\n            let xo = (bb.xMid - xMin) / 2;\n            let yo = (bb.yMid - yMin) / 2;\n            let anchors = [\n                xMin, bb.yMid + yo,\n                xMin, bb.yMid,\n                xMin, bb.yMid - yo,\n                bb.xMid - xo, yMin,\n                bb.xMid, yMin,\n                bb.xMid + xo, yMin,\n                xMax, bb.yMid - yo,\n                xMax, bb.yMid,\n                xMax, bb.yMid + yo\n            ];\n            for(let i = 0; i < anchors.length; i += 2) {\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\n            }\n            _x = xMin + strokeWidth;\n            for(let i = 9; i < this.children.length; i++) {\n                _x += _hw;\n                this.children[i].moveTo(Math.round(_x), yMax, false);\n                _x += _hw;\n            }\n\n            // Update object's bounding box\n            super.updateLayout(reasons, false);\n\n            // Update layout\n            this.layout = {\n                contentHash,\n                dx: xMin - bb.xMin,\n                dy: yMin - bb.yMin,\n                width,\n                height,\n                headerHeight,\n                text,\n                lines\n            };\n\n        }\n\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n        \n    }\n\n    /**\n     * Tests if the block has defined fields.\n     * @returns\n     *  True if the block has defined fields, false otherwise.\n     */\n    public hasFields() {\n        for(let [key, value] of this.props.value) {\n            if(key === this.props.primaryKey)\n                continue;\n            if(!(value.descriptor.is_visible ?? true))\n                continue;\n            if(value.isDefined())\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): BranchBlockView {\n        return new BranchBlockView(this, cache);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype DictionaryBlockRenderLayout = {\n    \n    /**\n     * The layout's content hash.\n     */\n    contentHash: number\n    \n    /**\n     * The block's x offset from the top-left corner of the bounding box.\n     */\n    dx: number;\n\n    /**\n     * The block's y offset from the top-left corner of the bounding box.\n     */\n    dy: number;\n\n    /**\n     * The block's width.\n     */\n    width: number,\n\n    /**\n     * The blocks's height.\n     */\n    height: number,\n\n    /**\n     * The block's header height.\n     */\n    headerHeight: number\n\n    /**\n     * The text to draw.\n     */\n    text: TextSet[],\n\n    /**\n     * The lines to draw\n     */\n    lines: Line[]\n\n}\n\ntype Line = {\n\n    /**\n     * The starting x.\n     */\n    x0: number,\n\n    /**\n     * The starting y.\n     */\n    y0: number,\n\n    /**\n     * The ending x.\n     */\n    x1: number,\n\n    /**\n     * The ending y.\n     */\n    y1: number\n\n}\n\ntype TextSet = {\n\n    /**\n     * The text's fonts.\n     */\n    font: Font,\n\n    /**\n     * The text's color.\n     */\n    color: string,\n\n    /**\n     * The text placements.\n     */\n    text: TextPlacement[]\n\n}\n\ntype TextPlacement = { \n    \n    /**\n     * The x-axis coordinate relative to the top-left coordinate of the block.\n     */\n    x: number,\n\n    /**\n     * The y-axis coordinate relative to the top-left coordinate of the block.\n     */\n    y: number,\n\n    /**\n     * The text.\n     */\n    t: string\n\n}\n","import { computeHash } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement\";\nimport { TextBlockView } from \"../DiagramViewTypes\";\nimport {\n    AnchorPointModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorAngle,\n    DiagramFactory,\n    DiagramObjectValues,\n    TextBlockStyle,\n    TextBlockTemplate\n} from \"../DiagramFactory\";\nimport { Alignment, Cursor, InheritAlignment } from \"../Attributes\";\n\nexport class TextBlockModel extends DiagramObjectModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: TextBlockTemplate;\n\n    /**\n     * The block's style.\n     */\n    public readonly style: TextBlockStyle\n\n    /**\n     * The block's render layout.\n     */\n    public layout: TextBlockRenderLayout;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockModel}.\n     * @param factory\n     *  The block's diagram factory.\n     * @param template\n     *  The block's template.\n     * @param values\n     *  The block's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: TextBlockTemplate, \n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setInheritAlignment(InheritAlignment.False);\n        this.setAlignment(Alignment.Grid);\n        this.setCursor(Cursor.Move);\n        this.layout = {} as any;\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Anchor configuration\n        if(!this.children.length) {\n            let t = template.anchor_template;\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\n            for(let i = 0, anchor; i < 12; i++) {\n                anchor = factory.createObject(t) as AnchorPointModel;\n                anchor.angle = a[Math.floor(i / 3) % 2];\n                this.addChild(anchor, i, false);\n            }\n        }\n        // Property configuration\n        this.props.onUpdate(() => {\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\n        });\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        // Try anchors\n        let obj = super.getObjectAt(x, y);\n        if(obj) {\n            return obj;\n        }\n        // Try object\n        let bb = this.boundingBox;\n        if(\n            bb.xMin <= x && x <= bb.xMax &&\n            bb.yMin <= y && y <= bb.yMax  \n        ) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the block's bounding box and render layout.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let contentHash = computeHash(this.props.toString());\n        let contentChanged = this.layout.contentHash !== contentHash;\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\n        \n        // Update layout\n        if(fullLayoutRequired || contentChanged)  {\n\n            let {\n                max_width,\n                text: t,\n                vertical_padding: vp,\n                horizontal_padding: hp\n            } = this.style;\n            let strokeWidth = 1;\n\n            // Calculate text\n            let text = [];\n            let lines = t.font.wordWrap(this.props.toString(), max_width);\n            let m = t.font.measure(lines[0]);\n            let w = m.width;\n            let x = strokeWidth + hp;\n            let y = strokeWidth + vp + m.ascent;\n            text.push({ x, y, t: lines[0] });\n            for(let i = 1; i < lines.length; i++) {\n                m = t.font.measure(lines[i]);\n                w = Math.max(w, m.width);\n                y += t.line_height;\n                text.push({ x, y, t: lines[i] });\n            }\n            y += vp + strokeWidth;\n            x += w + x;\n\n            // Calculate block's size\n            let width = Math.round(x);\n            let height = Math.round(y);\n\n            // Calculate block's bounding box\n            let bb = this.boundingBox;\n            let xMin = Math.round(bb.xMid - (width / 2));\n            let yMin = Math.round(bb.yMid - (height / 2));\n            let xMax = Math.round(bb.xMid + (width / 2));\n            let yMax = Math.round(bb.yMid + (height / 2));\n\n            // Update anchors\n            let xo = (bb.xMid - xMin) / 2;\n            let yo = (bb.yMid - yMin) / 2;\n            let anchors = [\n                bb.xMid - xo, yMin,\n                bb.xMid, yMin,\n                bb.xMid + xo, yMin,\n                xMax, bb.yMid - yo,\n                xMax, bb.yMid,\n                xMax, bb.yMid + yo,\n                bb.xMid + xo, yMax,\n                bb.xMid, yMax,\n                bb.xMid - xo, yMax,\n                xMin, bb.yMid + yo,\n                xMin, bb.yMid,\n                xMin, bb.yMid - yo\n            ]\n            for(let i = 0; i < anchors.length; i += 2) {\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\n            }\n\n            // Update object's bounding box\n            super.updateLayout(reasons, false);\n\n            // Update layout\n            this.layout = {\n                contentHash,\n                dx: xMin - bb.xMin,\n                dy: yMin - bb.yMin,\n                width,\n                height,\n                text\n            };\n\n        }\n\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n        \n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): TextBlockView {\n        return new TextBlockView(this, cache);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype TextBlockRenderLayout = {\n    \n    /**\n     * The layout's content hash.\n     */\n    contentHash: number\n    \n    /**\n     * The block's x offset from the top-left corner of the bounding box.\n     */\n    dx: number;\n\n    /**\n     * The block's y offset from the top-left corner of the bounding box.\n     */\n    dy: number;\n\n    /**\n     * The block's width.\n     */\n    width: number,\n\n    /**\n     * The blocks's height.\n     */\n    height: number,\n\n    /**\n     * The text to draw.\n     */\n    text: TextPlacement[]\n\n}\n\ntype TextPlacement = { \n    \n    /**\n     * The x-axis coordinate relative to the top-left coordinate of the block.\n     */\n    x: number,\n\n    /**\n     * The y-axis coordinate relative to the top-left coordinate of the block.\n     */\n    y: number,\n\n    /**\n     * The text.\n     */\n    t: string\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { PageView } from \"../DiagramViewTypes\";\nimport {\n    DiagramRootModel,\n    LayoutUpdateReason\n} from \"./BaseTypes/BaseModels\"\nimport {\n    DiagramFactory,\n    PageStyle,\n    PageTemplate,\n    TemplateType,\n    SemanticRole,\n    DiagramObjectValues\n} from \"../DiagramFactory\";\n\nexport class PageModel extends DiagramRootModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: PageTemplate;\n    \n    /**\n     * The page's grid size.\n     */\n    public readonly grid: [number, number];\n    \n    /**\n     * The page's style.\n     */\n    public readonly style: PageStyle;\n\n\n    /**\n     * Creates a new {@link PageModel}.\n     * @param factory\n     *  The page's diagram factory.\n     * @param template\n     *  The page's template.\n     * @param values\n     *  The page's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: PageTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.grid = template.grid;\n        this.style = template.style;\n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    /**\n     * Returns a dummy {@link PageModel} not associated with any document.\n     * @returns\n     *  A dummy {@link PageModel}.\n     */\n    public static createDummy(): PageModel {\n        return new this(\n            DiagramFactory.createDummy(),\n            { \n                id: \"\",\n                type: TemplateType.Page, \n                role: SemanticRole.None,\n                grid: [10, 10],\n                style: { \n                    grid_color: \"#1d1d1d\",\n                    background_color: \"#141414\",\n                    drop_shadow: {\n                        color: \"rgba(0,0,0,.4)\",\n                        offset: [3, 3]\n                    }\n                }\n            }\n        );\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): PageView {\n        return new PageView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../../DiagramElement\";\nimport { DiagramObjectModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramAnchorView,\n    DiagramAnchorableView\n} from \"./BaseViews\";\nimport { \n    AlignmentMask,\n    CursorMask,\n    HoverMask,\n    InheritAlignmentMask,\n    PositionSetByUserMask,\n    PriorityMask,\n    SelectMask\n} from \"../../Attributes\";\n\nexport abstract class DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public el: DiagramObjectModel;\n\n    /**\n     * The object's (central) x coordinate.\n     */\n    public x: number;\n\n    /**\n     * The object's (central) y coordinate.\n     */\n    public y: number;\n\n    /**\n     * The object's parent.\n     */\n    public parent: DiagramObjectView | undefined;\n\n    /**\n     * The object's children.\n     */\n    public children: DiagramObjectView[]\n\n    /**\n     * The view's raster cache.\n     */\n    protected _rasterCache: RasterCache; \n\n\n    /**\n     * Creates a new {@link DiagramObjectView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramObjectModel, rasterCache: RasterCache) {\n        this.el = el;\n        this.x = el.boundingBox.xMid;\n        this.y = el.boundingBox.yMid;\n        this.parent = undefined;\n        this.children = [];\n        this._rasterCache = rasterCache;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object and all child objects (in a breadth-first fashion).\n     * @param match\n     *  A predicate which is applied to each object. If the predicate returns\n     *  false, the object is not included in the enumeration.\n     * @returns\n     *  This object and all child objects.\n     */\n     public *getSubtree(\n        match?: (o: DiagramObjectView) => boolean\n     ): IterableIterator<DiagramObjectView> {\n        let visited = new Set<string>([this.el.id]);\n        let queue: DiagramObjectView[] = [this];\n        while(queue.length != 0) {\n            let obj = queue.shift()!;\n            // Yield object\n            if(!match || match(obj)) {\n                yield obj;\n            }\n            // Don't traverse anchors\n            if(obj instanceof DiagramAnchorView) {\n                continue;\n            }\n            // Enumerate children\n            for(let child of obj.children){\n                if(!visited.has(child.el.id)) {\n                    visited.add(child.el.id);\n                    queue.push(child);\n                }\n            }\n        }\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object to a specific coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n     public moveTo(x: number, y: number, attrs?: number) {\n        this.moveBy(\n            x - this.x,\n            y - this.y\n        );\n    }\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public moveBy(dx: number, dy: number, attrs?: number) {\n        // Move self\n        this.x += dx;\n        this.y += dy;\n        // Move non-anchored children\n        for(let obj of this.children) {\n            if(obj instanceof DiagramAnchorableView && obj.el.isAttached()) {\n                continue;\n            }\n            obj.moveBy(dx, dy);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n        for(let obj of this.children) {\n            obj.renderTo(ctx, vr, dsx, dsy);\n        }\n    };\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        if(!this.isVisible(vr)) {\n            return;\n        }\n        // Configure canvas\n        for(let obj of this.children) {\n            obj.renderDebugTo(ctx, vr);\n        }\n        // Draw bounding box\n        let bb = this.el.boundingBox;\n        ctx.beginPath();\n        ctx.moveTo(bb.xMin + 0.5, bb.yMin + 0.5);\n        ctx.lineTo(bb.xMax - 0.5, bb.yMin + 0.5);\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\n        ctx.lineTo(bb.xMin + 0.5, bb.yMax - 0.5);\n        ctx.lineTo(bb.xMin + 0.5, bb.yMin + 0.5);\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\n        ctx.stroke();\n    }\n\n    /**\n     * Tests if the object overlaps the given viewport.\n     * @param viewport\n     *  The viewport.\n     * @returns\n     *  True if the object overlaps the viewport, false otherwise.\n     */\n    public isVisible(viewport: ViewportRegion) {\n        let { xMin, yMin, xMax, yMax } = this.el.boundingBox;\n        return (viewport.xMin <= xMax && viewport.xMax >= xMin) && \n               (viewport.yMin <= yMax && viewport.yMax >= yMin)\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public updateView(): DiagramObjectView {\n        // Update children\n        let children = new Array<DiagramObjectView>(this.el.children.length);\n        for(let i = 0; i < children.length; i++) {\n            let id = this.el.children[i].id;\n            let obj = this.children.find(o => o.el.id === id);\n            // Update child\n            children[i] = obj ?? this.el.children[i].createView(this._rasterCache);\n            // Update child's parent\n            children[i].parent = this;\n            // Update child's view\n            children[i].updateView();\n        }\n        this.children = children;\n        // Update position\n        this.x = this.el.boundingBox.xMid;\n        this.y = this.el.boundingBox.yMid;\n        // Return\n        return this;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Attribute Faking  //////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the object's attributes with the alignment altered.\n     * @param alignment\n     *  The alignment to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeAlignment(alignment: number): number {\n        return (this.el.attrs & ~AlignmentMask) | alignment;\n    }\n\n    /**\n     * Returns the object's attributes with the cursor altered.\n     * @param cursor\n     *  The cursor to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeCursor(cursor: number) {\n       return (this.el.attrs & ~CursorMask) | cursor;\n    }\n\n    /**\n     * Returns the object's attributes with the hover state altered.\n     * @param hover\n     *  The hover state to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeHover(hover: number) {\n        return (this.el.attrs & ~HoverMask) | hover;\n    }\n\n    /**\n     * Returns the object's attributes with the 'inherit alignment' attribute\n     * altered.\n     * @param inherit\n     *  The attribute to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeInheritAlignment(inherit: number) {\n        return (this.el.attrs & ~InheritAlignmentMask) | inherit;\n    }\n\n    /**\n     * Returns the object's attributes with the 'position set by user'\n     * attribute altered.\n     * @param positionSetByUser\n     *  The attribute to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakePositionSetByUser(positionSetByUser: number) {\n        return (this.el.attrs & ~PositionSetByUserMask) | positionSetByUser;\n    }\n\n    /**\n     * Returns the object's attributes with the selection priority altered.\n     * @param priority\n     *  The selection priority to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakePriority(priority: number) {\n        return (this.el.attrs & ~PriorityMask) | priority;\n    }\n\n    /**\n     * Returns the object's attributes with the selection state altered.\n     * @param select\n     *  The selection state to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeSelect(select: number) {\n        return (this.el.attrs & ~SelectMask) | select;\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramAnchorableView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramAnchorView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramAnchorModel;\n\n    /**\n     * The anchor's children.\n     */\n    public override children: DiagramAnchorableView[];\n\n\n    /**\n     * Creates a new {@link DiagramAnchorView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramAnchorModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.children = [];\n        this.el = el;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        // Move self\n        this.x += dx;\n        this.y += dy;\n        // Move anchored children\n        for(let obj of this.children) {\n            if(!obj.el.isAttached(this.el)) {\n                console.warn(`'${ obj.el.id }' incorrectly attached to anchor.`);\n                continue;\n            }\n            obj.moveTo(this.x, this.y);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * \n     * NOTE:\n     * Anchors simply reference other objects in the tree. Anchors cannot spawn\n     * view objects on behalf of their children. Instead, the root of the tree\n     * will ensure that each anchor receives a reference to their children. Due\n     * to this limitation, anchor linkage cannot be updated independently.\n     * \n     * @returns\n     *  The view.\n     */\n    public override updateView(): DiagramAnchorView {\n        // Update position\n        this.x = this.el.boundingBox.xMid;\n        this.y = this.el.boundingBox.yMid;\n        return this;\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorableModel } from \"../../DiagramModelTypes\"\nimport { \n    DiagramAnchorView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramAnchorableView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramAnchorableModel;\n\n    /**\n     * The anchorable's anchor.\n     */\n    public anchor: DiagramAnchorView | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramAnchorableView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramAnchorableModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineEndingModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramLineView,\n    DiagramAnchorableView\n} from \"./BaseViews\";\n\nexport abstract class DiagramLineEndingView extends DiagramAnchorableView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramLineEndingModel;\n\n    /**\n     * The line ending's parent.\n     */\n    public override parent: DiagramLineView | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineEndingView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramLineEndingModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, attrs);\n        } else {\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\n        }\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineHandleModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramLineView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramLineHandleView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramLineHandleModel;\n\n    /**\n     * The line handle's parent.\n     */\n    public override parent: DiagramLineView | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineHandleView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramLineHandleModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, attrs);\n        } else {\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\n        }\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramObjectView,\n    DiagramLineEndingView,\n    DiagramLineHandleView\n} from \"./BaseViews\";\n\nexport abstract class DiagramLineView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramLineModel;\n\n    /**\n     * The line's children.\n     */\n    public override children: DiagramLineObjectView[];\n\n    /**\n     * The line's source ending.\n     */\n    public get srcEnding(): DiagramLineEndingView {\n        return this.children.at(0) as DiagramLineEndingView;\n    }\n\n    /**\n     * The line's target ending.\n     */\n    public get trgEnding(): DiagramLineEndingView {\n        return this.children.at(-1) as DiagramLineEndingView;\n    }\n\n    \n    /**\n     * Creates a new {@link DiagramLineView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramLineModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.children = [];\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public abstract moveChild(id: string, dx: number, dy: number, attrs?: number): void;\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype DiagramLineObjectView \n    = DiagramLineEndingView \n    | DiagramLineHandleView;\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../../DiagramElement\";\nimport { DiagramRootModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramAnchorView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramRootView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramRootModel;\n\n    /**\n     * The root's internal object cache.\n     */\n    private _objectCache: Map<string, DiagramObjectView>;\n\n\n    /**\n     * Creates a new {@link DiagramRootView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramRootModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this._objectCache = new Map();\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        ctx.save();\n        ctx.lineWidth = 1\n        ctx.fillStyle = \"#00ff00\";\n        ctx.strokeStyle = \"#ffffff\";\n        ctx.setLineDash([2, 2]);\n        super.renderDebugTo(ctx, vr);\n        ctx.restore();\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): DiagramRootView {\n        // Update root\n        super.updateView();\n        // Update cache\n        this._objectCache.clear();\n        for(let obj of this.getSubtree()) {\n            this._objectCache.set(obj.el.id, obj);\n        }\n        // Update anchors\n        for(let obj of this.el.anchorCache) {\n            let anchor = this.lookup<DiagramAnchorView>(obj.id)!;\n            anchor.children = new Array(obj.children.length);\n            for(let i = 0; i < anchor.children.length; i++) {\n                let child = obj.children[i]; \n                // Add object to anchor\n                anchor.children[i] = this.lookup(child.id)!;\n                // Add anchor to object\n                anchor.children[i].anchor = anchor;\n            }\n        }\n        return this;\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Object Lookup  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns an object from the diagram.\n     * @param id\n     *  The id of the object.\n     * @returns\n     *  The object or `undefined` if no object with that id exists.\n     */\n    public lookup<T extends DiagramObjectView>(id: string): T | undefined {\n        return this._objectCache.get(id) as T;\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineEndingPointModel } from \"../DiagramModelTypes\";\nimport { DiagramLineEndingView } from \"./BaseTypes/BaseViews\";\n\nexport class LineEndingPointView extends DiagramLineEndingView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineEndingPointModel;\n\n\n    /**\n     * Creates a new {@link LineEndingPointView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineEndingPointModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        \n        // Init\n        let { \n            radius,\n            fill_color,\n            stroke_color,\n            stroke_width\n        } = this.el.style;\n        \n        // Configure canvas\n        ctx.fillStyle = fill_color;\n        ctx.lineWidth = stroke_width;\n        ctx.strokeStyle = stroke_color;\n\n        // Draw ending\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineHandlePointModel } from \"../DiagramModelTypes\";\nimport { DiagramLineHandleView } from \"./BaseTypes/BaseViews\";\n\nexport class LineHandlePointView extends DiagramLineHandleView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineHandlePointModel;\n\n\n    /**\n     * Creates a new {@link LineHandlePointView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineHandlePointModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        \n        // Init\n        let { \n            radius,\n            fill_color,\n            stroke_color,\n            stroke_width\n        } = this.el.style;\n        \n        // Configure canvas\n        ctx.fillStyle = fill_color;\n        ctx.lineWidth = stroke_width;\n        ctx.strokeStyle = stroke_color;\n\n        // Stroke width offset\n        let wo = stroke_width % 2 ? 0.5 : 0;\n\n        // Draw handle\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, radius + wo, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n    \n    }\n\n}\n","import { drawArrowHead } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineHorizontalElbowModel } from \"../DiagramModelTypes\";\nimport { \n    DiagramLineEndingView,\n    DiagramLineView\n} from \".\";\nimport { Select, SelectMask } from \"../Attributes\";\n\nexport class LineHorizontalElbowView extends DiagramLineView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineHorizontalElbowModel;\n\n\n    /**\n     * Creates a new {@link LineHorizontalElbowView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineHorizontalElbowModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\n        // Select child\n        let obj = this.children.find(o => o.el.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof DiagramLineEndingView) {\n            obj.moveBy(dx, dy, undefined, true);\n        }\n        let [e1, h1, e2] = this.children;\n        // Move handle\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\n        // attrs must ONLY override the child being moved, we \n        // can't override h1 unless we're explicitly moving h1\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\n            h1.moveBy(hdx, 0, undefined, true);\n        } else if(obj === h1) {\n            h1.moveBy(dx, 0, undefined, true);\n        }\n        h1.moveBy(0, hdy, undefined, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let {\n            children: c\n        } = this;        \n        let {\n            cap_size: cs,\n            width,\n            color,\n            select_color\n        } = this.el.style;\n\n        // Configure line\n        ctx.lineWidth = width;\n        let lineColor;\n        switch(this.el.attrs & SelectMask) {\n            case Select.True:\n                lineColor = select_color;\n                break;\n            case Select.False:\n            default:\n                lineColor = color;\n                break;\n        }\n        ctx.fillStyle = lineColor;\n        ctx.strokeStyle = lineColor;\n\n        // Line width offset\n        let wo = width % 2 ? 0.5 : 0;\n        // End offset\n        let eo = Math.sign(c[2].x - c[1].x) * (cs >> 1);\n        \n        // Draw line\n        ctx.beginPath();\n        ctx.moveTo(c[0].x,      c[0].y + wo);\n        ctx.lineTo(c[1].x + wo, c[0].y + wo);\n        ctx.lineTo(c[1].x + wo, c[2].y + wo);\n        ctx.lineTo(c[2].x - eo, c[2].y + wo);\n        ctx.stroke();\n        \n        // Draw arrow head\n        drawArrowHead(\n            ctx, \n            c[1].x, c[2].y + wo, \n            c[2].x, c[2].y + wo, \n            cs\n        );\n        ctx.fill();\n\n        // Draw handles and ends\n        if(this.el.isSelected(attrs)) {\n            super.renderTo(ctx, vr, dsx, dsy);\n        }\n\n    }\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        if(!this.isVisible(vr)) {\n            return;\n        }\n        let radius = 2;\n        let p = Math.PI * 2;\n        // Draw hitbox points\n        ctx.beginPath();\n        for(let hitbox of this.el.hitboxes) {\n            for(let i = 0; i < hitbox.length; i += 2) {\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\n            }\n        }\n        ctx.fill();\n        // Draw bounding box\n        super.renderDebugTo(ctx, vr);\n    }\n\n}\n","import { drawArrowHead } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineVerticalElbowModel } from \"../DiagramModelTypes\";\nimport { \n    DiagramLineEndingView,\n    DiagramLineView\n} from \".\";\nimport { Select, SelectMask } from \"../Attributes\";\n\nexport class LineVerticalElbowView extends DiagramLineView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineVerticalElbowModel;\n\n\n    /**\n     * Creates a new {@link LineVerticalElbowView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineVerticalElbowModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\n        // Select child\n        let obj = this.children.find(o => o.el.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof DiagramLineEndingView) {\n            obj.moveBy(dx, dy, undefined, true);\n        }\n        let [e1, h1, e2] = this.children;\n        // Move handle\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\n        // attrs must ONLY override the child being moved, we \n        // can't override h1 unless we're explicitly moving h1\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\n            h1.moveBy(0, hdy, undefined, true);\n        } else if(obj === h1) {\n            h1.moveBy(0, dy, undefined, true);\n        }\n        h1.moveBy(hdx, 0, undefined, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let {\n            children: c\n        } = this;        \n        let {\n            cap_size: cs,\n            width,\n            color,\n            select_color\n        } = this.el.style;\n\n        // Configure line\n        ctx.lineWidth = width;\n        let lineColor;\n        switch(this.el.attrs & SelectMask) {            \n            case Select.True:\n                lineColor = select_color;\n                break;\n            case Select.False:\n            default:\n                lineColor = color;\n                break;\n        }\n        ctx.fillStyle = lineColor;\n        ctx.strokeStyle = lineColor;\n\n        // Line width offset\n        let wo = width % 2 ? 0.5 : 0;\n        // End offset\n        let eo = Math.sign(c[1].y - c[2].y) * (cs >> 1);\n        \n        // Draw line\n        ctx.beginPath();\n        ctx.moveTo(c[0].x + wo, c[0].y);\n        ctx.lineTo(c[0].x + wo, c[1].y + wo);\n        ctx.lineTo(c[2].x + wo, c[1].y + wo);\n        ctx.lineTo(c[2].x + wo, c[2].y + eo);\n        ctx.stroke();\n\n        // Draw arrow head\n        drawArrowHead(\n            ctx, \n            c[2].x + wo, c[1].y,\n            c[2].x + wo, c[2].y,\n            cs\n        );\n        ctx.fill();\n\n        // Draw handles and ends\n        if(this.el.isSelected(attrs)) {\n            super.renderTo(ctx, vr, dsx, dsy);\n        }\n\n    }\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        if(!this.isVisible(vr)) {\n            return;\n        }\n        let radius = 2;\n        let p = Math.PI * 2;\n        // Draw hitbox points\n        ctx.beginPath();\n        for(let hitbox of this.el.hitboxes) {\n            for(let i = 0; i < hitbox.length; i += 2) {\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\n            }\n        }\n        ctx.fill();\n        // Draw bounding box\n        super.renderDebugTo(ctx, vr);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { AnchorPointModel } from \"../DiagramModelTypes\";\nimport { DiagramAnchorView } from \".\";\n\nexport class AnchorPointView extends DiagramAnchorView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: AnchorPointModel;\n\n\n    /**\n     * Creates a new {@link AnchorPointView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: AnchorPointModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        // Only visible when hovered\n        if(!this.el.isHovered(attrs))\n            return;\n        ctx.fillStyle = this.el.style.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.el.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n}\n","import { drawRect } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { DictionaryBlockModel } from \"../DiagramModelTypes\";\nimport { DiagramObjectView } from \".\";\n\nexport class DictionaryBlockView extends DiagramObjectView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: DictionaryBlockModel;\n\n    /**\n     * The block's top-left x coordinate.\n     */\n    public tlx: number;\n\n    /**\n     * The block's top-left y coordinate.\n     */\n    public tly: number;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DictionaryBlockModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.tlx = 0;\n        this.tly = 0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        super.moveBy(dx, dy);\n        // Move top left corner\n        this.tlx += dx;\n        this.tly += dy;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let { tlx: x, tly: y } = this;\n        let { \n            body, \n            head,\n            select_outline: so,\n            border_radius: br,\n        } = this.el.style;\n        let {\n            width: w,\n            height: h,\n            headerHeight: hh,\n            text\n        } = this.el.layout;\n        let isSplitBlock = hh !== h;\n\n        // Draw body\n        let bf, bs;\n        if(isSplitBlock) {\n            bf = body.fill_color\n            bs = body.stroke_color\n        } else {\n            bf = head.fill_color\n            bs = head.stroke_color\n        }\n        ctx.lineWidth = 1.1;\n        drawRect(ctx, x, y, w, h, br);\n        if(dsx | dsy) {\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\n            ctx.fillStyle = bf;\n            ctx.strokeStyle = bs;\n            ctx.fill();\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 0;\n            ctx.stroke();\n        } else {\n            ctx.fillStyle = bf;\n            ctx.strokeStyle = bs;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw head\n        if(isSplitBlock) {\n            drawRect(ctx, x, y, w, hh, { tr: br, tl: br });\n            ctx.fillStyle = head.fill_color;\n            ctx.strokeStyle = head.stroke_color;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw text\n        for(let set of text) {\n            ctx.font = set.font.css;\n            ctx.fillStyle = set.color;\n            for(let text of set.text) {\n                ctx.fillText(text.t, x + text.x, y + text.y)\n            }\n        }\n\n        if(this.el.isSelected(attrs)) {\n            \n            // Init\n            let { \n                color,\n                padding: p,\n                border_radius: br\n            } = so;\n            p += 1;\n\n            // Draw select border\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n        } else if(this.el.isHovered(attrs)) {\n\n            // Init\n            let {\n                color,\n                size\n            } = this.el.style.anchor_markers;\n            \n            // Draw anchors\n            super.renderTo(ctx, vr, dsx, dsy);    \n\n            // Draw anchor markers\n            ctx.strokeStyle = color;\n            ctx.beginPath();\n            for(let o of this.children) {\n                ctx.moveTo(o.x - size, o.y - size);\n                ctx.lineTo(o.x + size, o.y + size);\n                ctx.moveTo(o.x + size, o.y - size);\n                ctx.lineTo(o.x - size, o.y + size);\n            }\n            ctx.stroke();\n        \n        }\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): DictionaryBlockView {\n        // Update view\n        super.updateView();\n        // Update top-left corner\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\n        // Return\n        return this;\n    }\n\n}\n","import { drawRect } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { BranchBlockModel } from \"../DiagramModelTypes\";\nimport { DiagramObjectView } from \".\";\n\nexport class BranchBlockView extends DiagramObjectView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: BranchBlockModel;\n\n    /**\n     * The block's top-left x coordinate.\n     */\n    public tlx: number;\n\n    /**\n     * The block's top-left y coordinate.\n     */\n    public tly: number;\n\n\n    /**\n     * Creates a new {@link BranchBlockView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: BranchBlockModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.tlx = 0;\n        this.tly = 0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        super.moveBy(dx, dy);\n        // Move top left corner\n        this.tlx += dx;\n        this.tly += dy;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let { tlx: x, tly: y } = this;\n        let { \n            body, \n            head,\n            select_outline: so,\n            border_radius: br,\n        } = this.el.style;\n        let {\n            width: w,\n            height: h,\n            headerHeight: hh,\n            text,\n            lines\n        } = this.el.layout;\n\n        // Draw body\n        ctx.lineWidth = 1.1;\n        drawRect(ctx, x, y, w, h, br);\n        if(dsx | dsy) {\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\n            ctx.fillStyle = body.fill_color;\n            ctx.strokeStyle = body.stroke_color;\n            ctx.fill();\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 0;\n            ctx.stroke();\n        } else {\n            ctx.fillStyle = body.fill_color;\n            ctx.strokeStyle = body.stroke_color;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw lines\n        for(let line of lines) {\n            ctx.moveTo(x + line.x0, y + line.y0);\n            ctx.lineTo(x + line.x1, y + line.y1);\n        }\n        ctx.stroke();\n\n        // Draw head\n        drawRect(ctx, x, y, w, hh, { tr: br, tl: br });\n        ctx.fillStyle = head.fill_color;\n        ctx.strokeStyle = head.stroke_color;\n        ctx.fill();\n        ctx.stroke();\n\n        // Draw text\n        for(let set of text) {\n            ctx.font = set.font.css;\n            ctx.fillStyle = set.color;\n            for(let text of set.text) {\n                ctx.fillText(text.t, x + text.x, y + text.y)\n            }\n        }\n\n        if(this.el.isSelected(attrs)) {\n            \n            // Init\n            let { \n                color,\n                padding: p,\n                border_radius: br\n            } = so;\n            p += 1;\n\n            // Draw select border\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n        } else if(this.el.isHovered(attrs)) {\n\n            // Init\n            let {\n                color,\n                size\n            } = this.el.style.anchor_markers;\n            \n            // Draw anchors\n            super.renderTo(ctx, vr, dsx, dsy);    \n\n            // Draw anchor markers\n            ctx.strokeStyle = color;\n            ctx.beginPath();\n            for(let o of this.children) {\n                ctx.moveTo(o.x - size, o.y - size);\n                ctx.lineTo(o.x + size, o.y + size);\n                ctx.moveTo(o.x + size, o.y - size);\n                ctx.lineTo(o.x - size, o.y + size);\n            }\n            ctx.stroke();\n        \n        }\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): BranchBlockView {\n        // Update view\n        super.updateView();\n        // Update top-left corner\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\n        // Return\n        return this;\n    }\n\n}\n","import { drawRect } from \"../Utilities\";\nimport { RasterCache, ViewportRegion } from \"../DiagramElement\";\nimport { TextBlockModel } from \"../DiagramModelTypes\";\nimport { DiagramObjectView } from \".\";\n\nexport class TextBlockView extends DiagramObjectView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: TextBlockModel;\n\n    /**\n     * The block's top-left x coordinate.\n     */\n    public tlx: number;\n\n    /**\n     * The block's top-left y coordinate.\n     */\n    public tly: number;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: TextBlockModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.tlx = 0;\n        this.tly = 0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        super.moveBy(dx, dy);\n        // Move top left corner\n        this.tlx += dx;\n        this.tly += dy;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let { tlx: x, tly: y } = this;\n        let {\n            text,\n            fill_color,\n            stroke_color,\n            select_outline: so,\n            border_radius: br,\n        } = this.el.style;\n        let {\n            width: w,\n            height: h,\n            text: placements\n        } = this.el.layout;\n\n        // Draw body\n        ctx.lineWidth = 1.1;\n        if(dsx | dsy){\n            drawRect(ctx, x, y, w, h, br);\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\n            ctx.fillStyle = fill_color;\n            ctx.strokeStyle = stroke_color;\n            ctx.fill();\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 0;\n            ctx.stroke();\n        } else {\n            drawRect(ctx, x, y, w, h, br);\n            ctx.fillStyle = fill_color;\n            ctx.strokeStyle = stroke_color;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw text\n        ctx.font = text.font.css;\n        ctx.fillStyle = text.color;\n        for(let p of placements) {\n            ctx.fillText(p.t, x + p.x, y + p.y)\n        }\n\n        if(this.el.isSelected(attrs)) {\n            \n            // Init\n            let { \n                color,\n                padding: p,\n                border_radius: br\n            } = so;\n            p += 1;\n\n            // Draw select border\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n        } else if(this.el.isHovered(attrs)) {\n\n            // Init\n            let {\n                color,\n                size\n            } = this.el.style.anchor_markers;\n            \n            // Draw anchors\n            super.renderTo(ctx, vr, dsx, dsy);    \n\n            // Draw anchor markers\n            ctx.strokeStyle = color;\n            ctx.beginPath();\n            for(let o of this.children) {\n                ctx.moveTo(o.x - size, o.y - size);\n                ctx.lineTo(o.x + size, o.y + size);\n                ctx.moveTo(o.x + size, o.y - size);\n                ctx.lineTo(o.x - size, o.y + size);\n            }\n            ctx.stroke();\n        \n        }\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): TextBlockView {\n        // Update view\n        super.updateView();\n        // Update top-left corner\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\n        // Return\n        return this;\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { PageModel } from \"../DiagramModelTypes\";\nimport { \n    DiagramObjectView,\n    DiagramRootView\n} from \".\";\n\nexport class PageView extends DiagramRootView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: PageModel;    \n    \n    /**\n     * The page's grid pattern.\n     */\n    private _gridPattern: CanvasPattern;\n\n    /**\n     * The page's current selection.\n     */\n    public get selects(): DiagramObjectView[] {\n        return [...this.getSubtree(o => o.el.isSelected())];\n    }\n\n\n    /**\n     * Creates a new {@link PageView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: PageModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        // Create grid pattern\n        let { \n            grid_color: gc, background_color: bc\n        } = this.el.style;\n        this._gridPattern = this.createGridPattern(\n            ...this.el.grid, bc, gc\n        );\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the page surface to a context.\n     * @param grid\n     *  [true]\n     *   Show the grid.\n     *  [false]\n     *   Hide the grid.\n     */\n    public renderPageSurfaceTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion, grid: boolean) {\n        // Draw page\n        ctx.fillStyle = grid ? this._gridPattern : this.el.style.background_color;\n        ctx.fillRect(\n            vr.xMin,  vr.yMin,\n            vr.xMax - vr.xMin,\n            vr.yMax - vr.yMin\n        );\n    }\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: The page's styled x-offset)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: The page's styled y-offset)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = this.el.style.drop_shadow.offset[0], \n        dsy: number = this.el.style.drop_shadow.offset[1],\n        attrs?: number\n    ) { \n        // Configure drop shadow\n        ctx.shadowColor = this.el.style.drop_shadow.color;\n        // Draw contents\n        super.renderTo(ctx, vr, dsx * vr.scale, dsy * vr.scale);\n    }\n\n    /**\n     * Generates a grid canvas pattern.\n     * @param gridX\n     *  The grid size on the x-axis.\n     * @param gridY\n     *  The grid size on the y-axis.\n     * @param fillColor\n     *  The background color.\n     * @param strokeColor\n     *  The line color.\n     * @returns\n     *  The grid canvas pattern centered on the origin.\n     */\n    private createGridPattern(gridX: number, gridY: number, fillColor: string, strokeColor: string): CanvasPattern {\n        let can = document.createElement(\"canvas\");\n        let ctx = can.getContext(\"2d\", { alpha: false })!;\n        can.width = gridX;\n        can.height = gridY;\n        ctx.fillStyle = fillColor;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = strokeColor;\n        ctx.fillRect(0, 0, gridX, gridY);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, gridY);\n        ctx.lineTo(gridX, gridY);\n        ctx.stroke();\n        let ptr = ctx.createPattern(can, \"repeat\")!;\n        ptr.setTransform(new DOMMatrix().translate(0, 1));\n        return ptr;\n    }\n\n}\n","import { DiagramObjectModel, PageModel } from \"./DiagramModelTypes\";\nimport { RasterCache } from \"./DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"./DiagramElement\";\nimport { Hover, Select } from \"./Attributes\";\n\nexport class PageImage {\n\n    /**\n     * The page.\n     */\n    private _page: PageModel;\n\n    /**\n     * The image's padding.\n     */\n    private _padding: number;\n\n    /**\n     * If the grid should be displayed or not.\n     */\n    private _showGrid: boolean;\n\n    /**\n     * If shadow's should be displayed or not.\n     */\n    private _showShadows: boolean;\n     \n    /**\n     * If debug information should be displayed or not.\n     */\n    private _showDebug: boolean;\n\n\n    /**\n     * Creates a new {@link PageImage}.\n     * @param page\n     *  The page to image.\n     * @param padding\n     *  The image's padding.\n     * @param showGrid\n     *  If the grid should be displayed or not.\n     *  (Default: true)\n     * @param showShadows\n     *  If shadow's should be displayed or not.\n     *  (Default: true)\n     * @param showDebug\n     *  If debug information should be displayed or not.\n     *  (Default: false)\n     */\n    constructor(\n        page: PageModel,\n        padding: number = 30,\n        showGrid: boolean = true,\n        showShadows: boolean = true,\n        showDebug: boolean = false\n    ) {\n        this._page = page;\n        this._padding = padding;\n        this._showGrid = showGrid;\n        this._showShadows = showShadows;\n        this._showDebug = showDebug;\n    }\n\n\n    /**\n     * Returns an image of the page.\n     * @returns\n     *  The generated image.\n     */\n    public capture(): HTMLCanvasElement;\n\n    /**\n     * Returns an image of the page focused on a region of objects.\n     * @param objs\n     *  The objects that define the region.\n     * @returns\n     *  The generated image.\n     */\n    public capture(objs?: DiagramObjectModel[]): HTMLCanvasElement;\n    public capture(objs?: DiagramObjectModel[]): HTMLCanvasElement {\n        \n        // Calculate region\n        let xMin, yMin, xMax, yMax;\n        if(objs?.length) {\n            xMin = Infinity;\n            yMin = Infinity;\n            xMax = -Infinity;\n            yMax = -Infinity;\n            for(let obj of objs) {\n                xMin = Math.min(xMin, obj.boundingBox.xMin);\n                yMin = Math.min(yMin, obj.boundingBox.yMin);\n                xMax = Math.max(xMax, obj.boundingBox.xMax);\n                yMax = Math.max(yMax, obj.boundingBox.yMax);\n            }\n        } else {\n            xMin = this._page.boundingBox.xMin;\n            yMin = this._page.boundingBox.yMin;\n            xMax = this._page.boundingBox.xMax;\n            yMax = this._page.boundingBox.yMax;\n        }\n        \n        // Create view\n        let cache = new RasterCache();\n        let view = this._page.createView(cache);\n        view.updateView();\n        \n        // Configure canvas\n        let can = document.createElement(\"canvas\");\n        can.width  = Math.round(xMax - xMin) + (this._padding * 2);\n        can.height = Math.round(yMax - yMin) + (this._padding * 2);\n        \n        // Configure context\n        let ctx = can.getContext(\"2d\")!;\n        ctx.setTransform(\n            1, 0, 0, 1, \n            -xMin + this._padding,\n            -yMin + this._padding\n        );\n\n        // Configure viewport\n        let viewport = new ViewportRegion();\n        viewport.xMin = xMin - this._padding;\n        viewport.yMin = yMin - this._padding;\n        viewport.xMax = xMax + this._padding;\n        viewport.yMax = yMax + this._padding;\n\n        // Cache and clear visual attributes\n        let attrCache = new Map<DiagramObjectModel, number>();\n        let attrObjs = this._page.getSubtree(\n            o => o.isHoveredOrSelected()\n        );\n        for(let obj of attrObjs) {\n            attrCache.set(obj, obj.attrs);\n            obj.setSelect(Select.False);\n            obj.setHover(Hover.Off);\n        }\n\n        // Render image\n        view.renderPageSurfaceTo(ctx, viewport, this._showGrid);\n        if(this._showShadows) {\n            view.renderTo(ctx, viewport);\n        } else {\n            view.renderTo(ctx, viewport, 0, 0);\n        }\n        if(this._showDebug) {\n            view.renderDebugTo(ctx, viewport);\n        }\n\n        // Restore visual attributes\n        for(let [obj, attrs] of attrCache) {\n            obj.attrs = attrs;\n        }\n\n        // Return image\n        return can;\n\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////\n//  1. Value Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype ValueDescriptorBase<K extends ValueTypes> = {\n    type: K,\n    value?: ValueTypeScriptType[K]\n    is_primary?: boolean,\n    is_visible?: boolean\n    is_editable? : boolean,\n    is_required? : boolean,\n}\n\ntype IntValueDescriptor = ValueDescriptorBase<PropertyType.Int> & {\n    min?: number,\n    max?: number\n}\n\ntype FloatValueDescriptor = ValueDescriptorBase<PropertyType.Float> & {\n    min?: number,\n    max?: number,\n}\n\ntype EnumValueDescriptor = ValueDescriptorBase<PropertyType.Enum> & {\n    options: ListPropertyDescriptor \n}\n\ntype ValueTypes\n    = PropertyType.Int\n    | PropertyType.Float\n    | PropertyType.String\n    | PropertyType.Date\n    | PropertyType.Enum\n\ntype ValueTypeScriptType = {\n    [PropertyType.Int]: number | null,\n    [PropertyType.Float]: number | null,\n    [PropertyType.String]: string | null,\n    [PropertyType.Date]: Date | null,\n    [PropertyType.Enum]: string | null\n}\n\nexport enum PropertyType {\n    Int        = 0,\n    Float      = 1,\n    String     = 2,\n    Date       = 3,\n    Enum       = 4,\n    List       = 5,\n    Dictionary = 6,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Standard Property Descriptors  /////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Standard Property Descriptor:\n * Allows recursive definitions of both arrays and dictionaries.\n */\nexport type PropertyDescriptor\n    = StringPropertyDescriptor\n    | NumberPropertyDescriptor\n    | DatePropertyDescriptor\n    | EnumPropertyDescriptor\n    | ListPropertyDescriptor\n    | DictionaryPropertyDescriptor\n\nexport type StringPropertyDescriptor\n    = ValueDescriptorBase<PropertyType.String>;\n\nexport type NumberPropertyDescriptor\n    = IntValueDescriptor\n    | FloatValueDescriptor;\n\nexport type DatePropertyDescriptor\n    = ValueDescriptorBase<PropertyType.Date>;\n\nexport type EnumPropertyDescriptor\n    = EnumValueDescriptor;\n\nexport type ListPropertyDescriptor = {\n    type: PropertyType.List,\n    form: PropertyDescriptor\n    value?: any,\n    is_primary?: boolean,\n    is_visible?: boolean,\n    is_editable? : boolean\n}\n\nexport type DictionaryPropertyDescriptor = {\n    type: PropertyType.Dictionary,\n    form: { \n        [key: string]: PropertyDescriptor\n    },\n    is_primary?: boolean,\n    is_visible?: boolean,\n}\n\nexport type ListValue\n    = ListValueEntries\n    | ListValueDictionary\n\nexport type ListValueEntries = [\n    string, ListValueEntries | ListValueDictionary | null | string | number | Date\n][]\n\nexport type ListValueDictionary = {\n    [key: string]: ListValueEntries | ListValueDictionary | null | string | number | Date\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Restricted Property Descriptor  ////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Restricted Property Descriptor:\n * Restricts recursive definitions of both arrays and dictionaries.\n */\n export type RestrictedPropertyDescriptor\n    = ValueDescriptor\n    | ValueListDescriptor\n    | ValueDictionaryDescriptor\n    | ValueDictionaryListDescriptor\n\ntype ValueDictionaryListDescriptor = {\n    type: PropertyType.List,\n    form: ValueDictionaryDescriptor,\n    value?: any,\n    is_primary?: boolean,\n    is_visible?: boolean,\n    is_editable? : boolean\n}\n\ntype ValueDictionaryDescriptor = {\n    type: PropertyType.Dictionary,\n    form: {\n        [key: string]\n            : ValueDescriptor\n            | ValueListDescriptor\n    },\n    is_primary?: boolean,\n    is_visible?: boolean,\n}\n\ntype ValueListDescriptor = {\n    type: PropertyType.List,\n    form: ValueDescriptor,\n    value?: any,\n    is_primary?: boolean,\n    is_visible?: boolean,\n    is_editable? : boolean\n}\n\ntype ValueDescriptor\n    = StringPropertyDescriptor\n    | NumberPropertyDescriptor\n    | DatePropertyDescriptor\n    | EnumPropertyDescriptor\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Root Property Descriptor  //////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type RootPropertyDescriptor = {\n    [key: string]: RestrictedPropertyDescriptor\n}\n","import { ref, Ref } from \"vue\";\nimport { \n    CollectionProperty,\n    DateProperty,\n    DictionaryProperty,\n    EnumProperty,\n    ListProperty,\n    NumberProperty,\n    PropertyDescriptor,\n    PropertyType,\n    RootProperty,\n    StringProperty\n} from \".\";\n\nexport abstract class Property {\n\n    /**\n     * The property's type.\n     */\n    public readonly type: PropertyType;\n\n    /**\n     * The property's descriptor.\n     */\n    public readonly descriptor: PropertyDescriptor;\n\n    /**\n     * The property's reactive trigger.\n     */\n    public readonly trigger: Ref<number>\n\n    /**\n     * The property's parent.\n     */\n    private _parent: CollectionProperty | undefined;\n\n    /**\n     * The property's root.\n     */\n    public get root(): RootProperty | undefined {\n        let owner = this as Property;\n        while(owner._parent) {\n            owner = owner._parent;\n        }\n        if(owner instanceof RootProperty) {\n            return owner;\n        } else {\n            return undefined;\n        }\n    }\n    \n\n    /**\n     * Creates a new {@link Property}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: PropertyDescriptor\n    ) {\n        this.type = descriptor.type;\n        this.descriptor = descriptor;\n        this.trigger = ref(0);\n        this._parent = parent;\n    }\n\n\n    /**\n     * Creates a new {@link Property}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     * @returns\n     *  The {@link Property}.\n     */\n    public static create(\n        parent: CollectionProperty | undefined,\n        descriptor: PropertyDescriptor,\n        values?: any\n    ): Property {\n        switch(descriptor.type) {\n            case PropertyType.String:\n                return new StringProperty(parent, descriptor, values);\n            case PropertyType.Int:\n            case PropertyType.Float:\n                return new NumberProperty(parent, descriptor, values);\n            case PropertyType.Date:\n                return new DateProperty(parent, descriptor, values);\n            case PropertyType.Enum:\n                return new EnumProperty(parent, descriptor, values);\n            case PropertyType.List:\n                return new ListProperty(parent, descriptor, values);\n            case PropertyType.Dictionary:\n                return new DictionaryProperty(parent, descriptor, values);\n        }\n    }\n\n    /**\n     * Updates the property's trigger. \n     */\n    protected updateProperty() {\n        this.trigger.value = this.toHashValue();\n        this._parent?.updateProperty();\n    }\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public abstract isDefined(): boolean;\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public abstract toRawValue(): RawEntries | RawTypes;\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public abstract toHashValue(): number;\n    \n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public abstract toString(): string;\n\n}\n\nexport type RawTypes =\n    null | string | number\n\nexport type RawEntries\n    = [string, RawEntries | RawTypes][]\n ","import { computeHash } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    DatePropertyDescriptor,\n    Property\n} from \".\";\n\nexport class DateProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: DatePropertyDescriptor;\n\n    /**\n     * The property's value.\n     */\n    private _value: Date | null;\n\n\n    /**\n     * Creates a new {@link DateProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: DatePropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        this._value = null;\n        this.descriptor = descriptor;\n        // Resolve value\n        let v;\n        if(value === null) {\n            v = null;\n        } else {\n            v = value ?? descriptor.value ?? null;\n        }\n        // Set value\n        if(v === null) {\n            this.setValue(null);\n        } else if(v instanceof Date || typeof v === \"string\") {\n            this.setValue(new Date(v));\n        } else {\n            this.setValue(new Date());\n        }\n    }\n    \n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n     public setValue(value: Date | null) {\n        this._value = value;\n        this.updateProperty();\n    }\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): string | null {\n        return this._value?.toISOString() ?? null;\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        if(this._value === null) {\n            return computeHash(\"\")\n        } else {\n            return computeHash(this._value.toString());\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return `${ this._value ?? 'Null' }`;\n    }\n\n}\n","import { computeHash } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    Property,\n    StringPropertyDescriptor\n} from \".\";\n\nexport class StringProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: StringPropertyDescriptor;\n\n    /**\n     * The property's value.\n     */\n    private _value: string | null;\n\n\n    /**\n     * Creates a new {@link StringProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: StringPropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        this._value = null;\n        if(value === null) {\n            this.setValue(null);\n        } else {\n            let v = value ?? descriptor.value ?? null;\n            this.setValue(v === null ? null : `${ v }`);\n        }\n    }\n\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n    public setValue(value: string | null) {\n        this._value = value;\n        this.updateProperty();\n    }\n    \n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): string | null {\n        return this._value;\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        if(this._value === null) {\n            return computeHash(\"\");\n        } else {\n            return computeHash(`v:${ this._value }`);\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return this._value ?? \"Null\";\n    }\n\n}\n","import { clamp, computeHash } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    NumberPropertyDescriptor,\n    Property,\n    PropertyType\n} from \".\";\n\nexport class NumberProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: NumberPropertyDescriptor;\n    \n    /**\n     * The property's minimum allowed value.\n     */\n    public readonly min: number;\n\n    /**\n     * The property's maximum allowed value.\n     */\n    public readonly max: number;\n\n    /**\n     * The property's value.\n     */\n    private _value: number | null;\n\n\n    /**\n     * Creates a new {@link NumberProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: NumberPropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        this.min = descriptor.min ?? -Infinity;\n        this.max = descriptor.max ?? Infinity;\n        this.descriptor = descriptor;\n        this._value = null;\n        // Resolve value\n        let v;\n        if(value === null) {\n            v = null;\n        } else {\n            v = value ?? descriptor.value ?? null;\n        }\n        // Set value\n        if(v === null) {\n            this.setValue(null);\n        } else if(typeof v === \"number\"){\n            this.setValue(v);\n        } else {\n            this.setValue(0);\n        }\n    }\n    \n    \n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n    public setValue(value: number | null) {\n        if(value === null) {\n            this._value = null;\n        } else {\n            let v = clamp(value, this.min, this.max);\n            if(this.type === PropertyType.Int) {\n                this._value = Math.round(v);\n            } else {\n                this._value = v;\n            }\n        }\n        this.updateProperty();\n    }\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): number | null {\n        return this._value;\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        return computeHash(`${ this._value ?? \"\" }`);\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return `${ this._value ?? 'Null' }`;\n    }\n\n}\n","import { computeHash } from \"../Utilities\";\nimport { \n    DictionaryPropertyDescriptor,\n    ListPropertyDescriptor,\n    Property,\n    RawEntries\n} from \".\";\n\nexport abstract class CollectionProperty extends Property {\n\n    // TODO: Implement enumerator, get(), size(). Hide value.\n\n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: CollectionPropertyDescriptor;\n    \n    /**\n     * The set of properties.\n     */\n    public value: Map<string, Property>;\n\n\n    /**\n     * Creates a new {@link CollectionProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: CollectionPropertyDescriptor\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        this.value = new Map();\n    }\n\n    \n    /**\n     * Adds a property to the collection.\n     * @param property\n     *  The property.\n     * @param id\n     *  The property's id.\n     * @param index\n     *  The property's location in the collection.\n     * @returns\n     *  The property's id.\n     */\n    public abstract addProperty(property: Property, id: string, index: number): string;\n    \n    /**\n     * Removes a property from the collection.\n     * @param id\n     *  The property's id.\n     */\n    public abstract removeProperty(id: string): void;\n\n    /**\n     * Returns a subproperty's location in the collection.\n     * @param id\n     *  The subproperty's id.\n     * @returns\n     *  The subproperty's location in the collection.\n     */\n    public indexOf(id: string): number {\n        return [...this.value.keys()].indexOf(id);\n    }\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): RawEntries {\n        return [...this.value.entries()].map(([id, v]) => [id, v.toRawValue()]);\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        let text = [...this.value.values()].map(v => v.toHashValue()).join(\".\");\n        return computeHash(text);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype CollectionPropertyDescriptor\n    = ListPropertyDescriptor\n    | DictionaryPropertyDescriptor\n","import { \n    CollectionProperty,\n    DictionaryPropertyDescriptor,\n    ListValue,\n    Property\n} from \".\";\n\nexport class DictionaryProperty extends CollectionProperty {\n\n    /**\n     * The property's descriptor.\n     */\n    public override descriptor: DictionaryPropertyDescriptor;\n    \n    /**\n     * The property's primary key.\n     */\n    public readonly primaryKey: string | null;\n\n\n    /**\n     * Creates a new {@link DictionaryProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: DictionaryPropertyDescriptor,\n        values?: ListValue\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        this.primaryKey = null;\n        // Configure values\n        this.value = new Map();\n        for(let key in descriptor.form) {\n            // Create property\n            let val;\n            if(!values) {\n                val = undefined;\n            } else if(Array.isArray(values)) {\n                val = values.find(o => o[0] === key)?.at(1);\n            } else {\n                val = values[key]\n            }\n            let prop = Property.create(this, descriptor.form[key], val);\n            // Add property\n            this.value.set(key, prop);\n            // Configure primary key\n            if(!this.primaryKey && prop.descriptor.is_primary) {\n                this.primaryKey = key;\n            }\n        }\n    }\n\n\n    /**\n     * Adds a property to the dictionary.\n     * @param property\n     *  The property.\n     * @param id\n     *  The property's id.\n     * @param index\n     *  The property's location in the collection.\n     * @returns\n     *  The property's id.\n     */\n    public override addProperty(property: Property, id: string, index: number): string {\n        throw new Error(\"Properties cannot be dynamically added to dictionaries.\");\n    }\n\n    /**\n     * Removes a property from the dictionary.\n     * @param id\n     *  The property's id.\n     */\n    public override removeProperty(id: string): void {\n        throw new Error(\"Properties cannot be dynamically removed from dictionaries.\");\n    }\n\n    /**\n     * Tests if the primary property is defined.\n     * @returns\n     *  True if the primary property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        if(!this.primaryKey) {\n            return false;\n        } else {\n            return this.value.get(this.primaryKey)!.isDefined();\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        if(!this.primaryKey) {\n            return \"Error - No Primary Key\"\n        } else {\n            return this.value.get(this.primaryKey)!.toString()\n        }\n    }\n\n}\n","import { MD5 } from \"../Utilities\";\nimport { \n    CollectionProperty,\n    ListPropertyDescriptor,\n    Property,\n    RawEntries\n} from \".\";\n\nexport class ListProperty extends CollectionProperty {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override descriptor: ListPropertyDescriptor;\n\n\n    /**\n     * Creates a new {@link ListProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: ListPropertyDescriptor,\n        values?: RawEntries\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        // Configure values\n        this.value = new Map();\n        if(Array.isArray(values)) {\n            for(let [id, value] of values) {\n                // Create property\n                let prop = Property.create(this, descriptor.form, value);\n                // Add property\n                this.value.set(id, prop);\n            }\n        } else if(descriptor.value) {\n            if(Array.isArray(descriptor.value)) {\n                for(let [id, value] of descriptor.value) {\n                    // Create property\n                    let prop = Property.create(this, descriptor.form, value);\n                    // Add property\n                    this.value.set(MD5(id), prop);\n                }\n            } else {\n                for(let id in descriptor.value) {\n                    // Create property\n                    let value = descriptor.value[id];\n                    let prop = Property.create(this, descriptor.form, value);\n                    // Add property\n                    this.value.set(MD5(id), prop);\n                }\n            }\n        }\n    }\n    \n\n    /**\n     * Adds a property to the collection.\n     * @param property\n     *  The property.\n     * @param id\n     *  The property's id.\n     *  (Default: Randomly generated)\n     * @param index\n     *  The property's location in the collection.\n     *  (Default: End of the collection)\n     * @returns\n     *  The property's id.\n     */\n    public addProperty(\n        property: Property,\n        id: string = this.getNextId(),\n        index: number = this.value.size\n    ): string {\n        let entries = [...this.value.entries()];\n        entries.splice(index, 0, [id, property]);\n        this.value = new Map(entries);\n        this.updateProperty();\n        return id;\n    }\n    \n    /**\n     * Removes a property from the collection.\n     * @param id\n     *  The property's id.\n     */\n    public removeProperty(id: string) {\n        this.value.delete(id);\n        this.updateProperty();\n    }\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return 0 < this.value.size;\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return [...this.value.values()].map(v => v.toString()).join(\", \");\n    }\n\n    /**\n     * Returns a randomly generated id not in use by the list.\n     * @returns\n     *  A randomly generated id.\n     */\n    private getNextId() {\n        let id = MD5(crypto.randomUUID());\n        while(this.value.has(id)) {\n            id = MD5(crypto.randomUUID());\n        }\n        return id;\n    }\n\n}\n","import { computeHash, MD5 } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    EnumPropertyDescriptor,\n    ListProperty,\n    Property\n} from \".\";\n\nexport class EnumProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: EnumPropertyDescriptor;\n\n    /**\n     * The property's list of options.\n     */\n    public readonly options: ListProperty;\n\n    /**\n     * The property's value.\n     */\n    private _value: string | null;\n\n\n    /**\n     * Creates a new {@link EnumProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: EnumPropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        let options = Property.create(undefined, descriptor.options);\n        this.descriptor = descriptor;\n        this.options = options as ListProperty;\n        this._value = null;\n        // Resolve value\n        let v;\n        if(value === null) {\n            v = null;\n        } else if(value !== undefined) {\n            v = value;\n        } else if(descriptor.value) {\n            v = MD5(descriptor.value)\n        } else {\n            v = null;\n        }\n        // Set value\n        if(v === null) {\n            this.setValue(null);\n        } else if(typeof v === \"string\") { \n            this.setValue(v);\n        } else {\n            this.setValue(null);\n        }\n    }\n\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n    public setValue(value: string | null) {\n        if(value === null) {\n            this._value = null;\n        } else {\n            if(this.options.value.has(value)) {\n                this._value = value;\n            } else {\n                this._value = null;\n            }\n        }\n        this.updateProperty();\n    }\n\n    /**\n     * Returns the property's reference value.\n     * @returns\n     *  The property's reference value.\n     */\n    public toReferenceValue(): Property | null {\n        if(this._value === null) {\n            return null;\n        } else {\n            return this.options.value.get(this._value)!;\n        }\n    }\n    \n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): string | null {\n        return this._value;\n    }\n    \n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        if(this._value === null) {\n            return computeHash(\"\");\n        } else {\n            return computeHash(`v:${ this._value }`);\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return this.toReferenceValue()?.toString() ?? \"Null\";\n    }\n\n}\n","import { DiagramObjectModel } from \"../DiagramModelTypes\";\nimport {\n    DictionaryProperty,\n    DictionaryPropertyDescriptor,\n    PropertyType,\n    RootPropertyDescriptor\n} from \".\";\n\nexport class RootProperty extends DictionaryProperty {\n\n    /**\n     * The property's associated object.\n     */\n    public object: DiagramObjectModel;\n\n    /**\n     * The property's 'update event' handler.\n     */\n    private _notifyPropertyUpdate: (() => void) | undefined;\n\n\n    /**\n     * Creates a new {@link RootProperty}.\n     * @param object\n     *  The property's associated object.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     */\n    constructor(\n        object: DiagramObjectModel,\n        descriptor: RootPropertyDescriptor,\n        values?: any\n    ) {\n        let dpd: DictionaryPropertyDescriptor = {\n            type: PropertyType.Dictionary,\n            form: descriptor\n        }\n        super(undefined, dpd, values);\n        this.object = object;\n    }\n\n\n    /**\n     * Updates the property's trigger. \n     */\n    protected override updateProperty(): void {\n        super.updateProperty();\n        if(this._notifyPropertyUpdate) {\n            this._notifyPropertyUpdate();\n        }\n    }\n\n    /**\n     * Configures the property's 'update event' handler.\n     * @param listener\n     *  A function to invoke when the property's value changes.\n     */\n    public onUpdate(listener: () => void) {\n        this._notifyPropertyUpdate = listener;\n    }\n\n}","/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n * Updated by Michael Carenzo 2022.\n */\n\nconst hex = \"0123456789abcdef\";\n\n/**\n * Converts a 32-bit number to hex (least significant byte first).\n * @param num\n *  The number.\n * @returns\n *  The hex string.\n */\nfunction toHex(num: number): string {\n    let str = \"\";\n    for (let i = 0; i <= 3; i++) {\n        str += hex.charAt((num >> (i * 8 + 4)) & 0x0F) + hex.charAt((num >> (i * 8)) & 0x0F);\n    }\n    return str;\n}\n\n/**\n * Converts a string into an array of blocks. Each block contains 16, 32-bit,\n * words. Size padding and padding bits are appended per the MD5 standard.  \n * @param str\n *  The string.\n * @returns\n *  The set of blocks flattened into a single array.\n */\nfunction stringToBlocks(str: string): number[] {\n    let i;\n    let size = ((str.length + 8) >> 6) + 1;\n    let blocks = new Array(size * 16).fill(0);\n    for (i = 0; i < str.length; i++) {\n        blocks[i >> 2] |= str.charCodeAt(i) << ((i % 4) * 8);\n    }\n    blocks[i >> 2] |= 0x80 << ((i % 4) * 8);\n    blocks[size * 16 - 2] = str.length * 8;\n    return blocks;\n}\n\n/**\n * Adds two numbers (wrapping at 2^32). This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n * @param x\n *  The first operand.\n * @param y\n *  The second operand.\n * @returns\n *  The sum.\n */\nfunction add(x: number, y: number): number {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/**\n * Rotates a 32-bit number `cnt` bits to the left.\n * @param num\n *  The number.\n * @param cnt\n *  The number of bits to rotate by.\n * @returns\n *  The new number.\n */\nfunction rol(num: number, cnt: number): number {\n    return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * CMN transform function.\n * @param q\n *  The result of the F, G, H, or I auxiliary function.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param x \n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction cmn(q: number, a: number, b: number, x: number, s: number, t: number): number {\n    return add(rol(add(add(a, q), add(x, t)), s), b);\n}\n\n/**\n * FF transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction ff(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\n\n/**\n * GG transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction gg(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\n\n/**\n * HH transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction hh(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\n/**\n * II transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction ii(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\n/**\n * Calculates the MD5 hash of a string.\n * @param str\n *  The string.\n * @returns\n *  The MD5 digest.\n */\nexport function MD5(str: string): string {\n    let x = stringToBlocks(str),\n        a = 1732584193,\n        b = -271733879,\n        c = -1732584194,\n        d = 271733878;\n\n    for (let i = 0; i < x.length; i += 16) {\n\n        let old_a = a,\n            old_b = b,\n            old_c = c,\n            old_d = d;\n\n        // Round 1\n\n        a = ff(a, b, c, d, x[i + 0], 7, -680876936);\n        d = ff(d, a, b, c, x[i + 1], 12, -389564586);\n        c = ff(c, d, a, b, x[i + 2], 17, 606105819);\n        b = ff(b, c, d, a, x[i + 3], 22, -1044525330);\n        a = ff(a, b, c, d, x[i + 4], 7, -176418897);\n        d = ff(d, a, b, c, x[i + 5], 12, 1200080426);\n        c = ff(c, d, a, b, x[i + 6], 17, -1473231341);\n        b = ff(b, c, d, a, x[i + 7], 22, -45705983);\n        a = ff(a, b, c, d, x[i + 8], 7, 1770035416);\n        d = ff(d, a, b, c, x[i + 9], 12, -1958414417);\n        c = ff(c, d, a, b, x[i + 10], 17, -42063);\n        b = ff(b, c, d, a, x[i + 11], 22, -1990404162);\n        a = ff(a, b, c, d, x[i + 12], 7, 1804603682);\n        d = ff(d, a, b, c, x[i + 13], 12, -40341101);\n        c = ff(c, d, a, b, x[i + 14], 17, -1502002290);\n        b = ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n        // Round 2\n\n        a = gg(a, b, c, d, x[i + 1], 5, -165796510);\n        d = gg(d, a, b, c, x[i + 6], 9, -1069501632);\n        c = gg(c, d, a, b, x[i + 11], 14, 643717713);\n        b = gg(b, c, d, a, x[i + 0], 20, -373897302);\n        a = gg(a, b, c, d, x[i + 5], 5, -701558691);\n        d = gg(d, a, b, c, x[i + 10], 9, 38016083);\n        c = gg(c, d, a, b, x[i + 15], 14, -660478335);\n        b = gg(b, c, d, a, x[i + 4], 20, -405537848);\n        a = gg(a, b, c, d, x[i + 9], 5, 568446438);\n        d = gg(d, a, b, c, x[i + 14], 9, -1019803690);\n        c = gg(c, d, a, b, x[i + 3], 14, -187363961);\n        b = gg(b, c, d, a, x[i + 8], 20, 1163531501);\n        a = gg(a, b, c, d, x[i + 13], 5, -1444681467);\n        d = gg(d, a, b, c, x[i + 2], 9, -51403784);\n        c = gg(c, d, a, b, x[i + 7], 14, 1735328473);\n        b = gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n        // Round 3\n\n        a = hh(a, b, c, d, x[i + 5], 4, -378558);\n        d = hh(d, a, b, c, x[i + 8], 11, -2022574463);\n        c = hh(c, d, a, b, x[i + 11], 16, 1839030562);\n        b = hh(b, c, d, a, x[i + 14], 23, -35309556);\n        a = hh(a, b, c, d, x[i + 1], 4, -1530992060);\n        d = hh(d, a, b, c, x[i + 4], 11, 1272893353);\n        c = hh(c, d, a, b, x[i + 7], 16, -155497632);\n        b = hh(b, c, d, a, x[i + 10], 23, -1094730640);\n        a = hh(a, b, c, d, x[i + 13], 4, 681279174);\n        d = hh(d, a, b, c, x[i + 0], 11, -358537222);\n        c = hh(c, d, a, b, x[i + 3], 16, -722521979);\n        b = hh(b, c, d, a, x[i + 6], 23, 76029189);\n        a = hh(a, b, c, d, x[i + 9], 4, -640364487);\n        d = hh(d, a, b, c, x[i + 12], 11, -421815835);\n        c = hh(c, d, a, b, x[i + 15], 16, 530742520);\n        b = hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n        // Round 4\n\n        a = ii(a, b, c, d, x[i + 0], 6, -198630844);\n        d = ii(d, a, b, c, x[i + 7], 10, 1126891415);\n        c = ii(c, d, a, b, x[i + 14], 15, -1416354905);\n        b = ii(b, c, d, a, x[i + 5], 21, -57434055);\n        a = ii(a, b, c, d, x[i + 12], 6, 1700485571);\n        d = ii(d, a, b, c, x[i + 3], 10, -1894986606);\n        c = ii(c, d, a, b, x[i + 10], 15, -1051523);\n        b = ii(b, c, d, a, x[i + 1], 21, -2054922799);\n        a = ii(a, b, c, d, x[i + 8], 6, 1873313359);\n        d = ii(d, a, b, c, x[i + 15], 10, -30611744);\n        c = ii(c, d, a, b, x[i + 6], 15, -1560198380);\n        b = ii(b, c, d, a, x[i + 13], 21, 1309151649);\n        a = ii(a, b, c, d, x[i + 4], 6, -145523070);\n        d = ii(d, a, b, c, x[i + 11], 10, -1120210379);\n        c = ii(c, d, a, b, x[i + 2], 15, 718787259);\n        b = ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n        a = add(a, old_a);\n        b = add(b, old_b);\n        c = add(c, old_c);\n        d = add(d, old_d);\n    }\n\n    return toHex(a) + toHex(b) + toHex(c) + toHex(d);\n}\n","/**\n * Draws an arrow head to the context.\n * @param ctx\n *  The context to draw to.\n * @param sx\n *  The arrow's source x-axis coordinate.\n * @param sy\n *  The arrow's source y-axis coordinate.\n * @param tx\n *  The arrow's target x-axis coordinate.\n * @param ty\n *  The arrow's target y-axis coordinate.\n * @param h\n *  The arrow's height.\n *  (Default: 12)\n * @param n\n *  The arrow's offset on its axis. A positive value nudges the arrowhead `n`\n *  pixels forward on its axis. A negative value nudges the arrowhead `n`\n *  pixels backwards on its axis. \n *  (Default: 0)\n */\nexport function drawArrowHead(\n    ctx: CanvasRenderingContext2D, \n    sx: number, sy: number, \n    tx: number, ty: number, \n    h: number = 12, n: number = 0\n) {\n    let dx = tx - sx;\n    let dy = ty - sy;\n    let angle = Math.atan2(dy, dx);\n    let a = tx - h * Math.cos(angle - Math.PI / 6);\n    let b = ty - h * Math.sin(angle - Math.PI / 6);\n    let c = tx - h * Math.cos(angle + Math.PI / 6);\n    let d = ty - h * Math.sin(angle + Math.PI / 6);\n    ctx.beginPath();\n    ctx.moveTo(a, b);\n    ctx.lineTo(c, d);\n    ctx.lineTo(tx, ty);\n    ctx.closePath();\n}\n\n/**\n * Draws a rectangular path to the context.\n * @param ctx\n *  The context to draw to.\n * @param x\n *  The top-left x coordinate.\n * @param y\n *  The top-left y coordinate.\n * @param w\n *  The width of the rectangle.\n * @param h\n *  The height of the rectangle.\n * @param r\n *  The rectangle's border radius.\n * @param s\n *  The rectangle's stroke width.\n *  (Default: 1)\n */\nexport function drawRect(\n    ctx: CanvasRenderingContext2D,\n    x: number, y: number,\n    w: number, h: number,\n    r: number, s?: number\n): void;\n\n /**\n  * Draws a rectangular path to a context.\n  * @param ctx\n  *  The context to draw to.\n  * @param x\n  *  The top-left x coordinate.\n  * @param y\n  *  The top-left y coordinate.\n  * @param w\n  *  The width of the rectangle.\n  * @param h\n  *  The height of the rectangle.\n  * @param r\n  *  An object which defines the border radius of each corner. If a corner\n  *  is not specified, it is assumed to be 0.\n  * @param s\n  *  The rectangle's stroke width.\n  *  (Default: 1)\n  */\nexport function drawRect(\n    ctx: CanvasRenderingContext2D,\n    x: number, y: number,\n    w: number, h: number,\n    r: BorderRadius, \n    s?: number\n): void;\n\nexport function drawRect(\n    ctx: CanvasRenderingContext2D, \n    x: number, y: number,\n    w: number, h: number,\n    r: BorderRadius | number,\n    s: number = 1\n) {\n    // Account for stroke width\n    x += s / 2;\n    y += s / 2;\n    w -= s;\n    h -= s;\n    // Parse radius\n    if (typeof r === \"number\") {\n        r = { tl: r, tr: r, br: r, bl: r }\n    } else {\n        r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\n    }\n    // Draw rectangular path\n    ctx.beginPath();\n    ctx.moveTo(x + r.tl!, y);\n    ctx.lineTo(x + w - r.tr!, y);\n    ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\n    ctx.lineTo(x + w, y + h - r.br!);\n    ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\n    ctx.lineTo(x + r.bl!, y + h);\n    ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\n    ctx.lineTo(x, y + r.tl!);\n    ctx.quadraticCurveTo(x, y, x + r.tl!, y);\n    ctx.closePath();\n}\n\nexport type BorderRadius = {\n    \n    /**\n     * Top left radius.\n     */\n    tl?: number,\n\n    /**\n     * Top right radius.\n     */\n    tr?: number,\n\n    /**\n     * Bottom right radius.\n     */\n    br?: number,\n\n    /**\n     * Bottom left radius.\n     */\n    bl?: number\n\n}\n","export class EventEmitter {\n    \n    /**\n     * The event emitter's index of event listeners.\n     */\n    private _listeners: Map<string, Function[]>;\n\n    \n    /**\n     * Creates a new {@link EventEmitter}. \n     */\n    constructor(){\n        this._listeners = new Map();\n    }\n\n\n    /**\n     * Adds an event listener to an event.\n     * @param event\n     *  The name of the event.\n     * @param callback\n     *  The function to call when the event is raised.\n     */\n    public on(event: string, callback: Function) {\n        if(!this._listeners.has(event))\n            this._listeners.set(event, []);\n        this._listeners.get(event)!.unshift(callback);\n    }\n\n    /**\n     * Adds a one-time event listener to an event.\n     * @param event\n     *  The name of the event.\n     * @param callback\n     *  The function to call when the event is raised.\n     */\n    public once(event: string, callback: Function) {\n        let once = (...args: any[]) => {\n            let actions = this._listeners.get(event)!;\n            actions.splice(actions.indexOf(once), 1);\n            callback(...args);\n        }\n        if(!this._listeners.has(event))\n            this._listeners.set(event, []);\n        this._listeners.get(event)!.unshift(once);\n    }\n\n    /**\n     * Dispatches the event listeners associated with a given event.\n     * @param event\n     *  The name of the event to raise.\n     * @param args\n     *  The arguments to pass to the event listeners.\n     */\n    protected emit(event: string, ...args: any[]) {\n        if(this._listeners.has(event)) {\n            let listeners = this._listeners.get(event)!;\n            for(let i = listeners.length - 1; 0 <= i; i--) {\n                listeners[i](...args);\n            }\n        }\n    }\n\n    /**\n     * Removes all event listeners associated with a given event. If no event\n     * name is specified, all event listeners are removed.\n     * @param event\n     *  The name of the event.\n     */\n    public removeAllListeners(event?: string) {\n        if(event !== undefined) {\n            this._listeners.delete(event);\n        } else {\n            this._listeners.clear();\n        }\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////\n//  1. Font Store  ////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nclass FontStore {\n\n    /**\n     * The font store's internal font list.\n     */\n    private _fontList: Map<string, Font>;\n\n    /**\n     * Creates a new {@link FontStore}.\n     */\n    constructor() {\n        this._fontList = new Map([\n            [\"default\", new Font({ size: \"10pt\", family: \"sans-serif\" })],\n        ]);\n    }\n\n    /**\n     * Returns the specified font. If the font has not been loaded, the default\n     * font is returned instead.\n     * @param descriptor\n     *  The font's descriptor.\n     * @return\n     *  The font.\n     */\n    public getFont(descriptor: FontDescriptor): Font {\n        let id = FontStore.getCssFontString(descriptor);\n        if(this._fontList.has(id)) {\n            return this._fontList.get(id)!\n        } else {\n            return this._fontList.get(\"default\")!;\n        }\n    }\n\n    /**\n     * Loads the specified fonts.\n     * @param descriptors\n     *  The fonts to load.\n     * @param timeout\n     *  The amount of time to wait (in milliseconds) per font before giving up.\n     *  (Default: 4000)\n     * @returns\n     *  A Promise that resolves once the fonts have loaded.\n     * @throws { Error }\n     *  If any of the fonts failed to load.\n     */\n    public async loadFonts(descriptors: FontDescriptor[], timeout: number = 4000) {\n        // Load fonts\n        let req = [];\n        for(let font of descriptors) {\n            req.push(this.loadFont(font, timeout));\n        }\n        let results = await Promise.allSettled(req);\n        // Parse results\n        let failedFonts = [];\n        for(let i = 0; i < results.length; i++) {\n            if(results[i].status === \"fulfilled\")\n                continue;\n            failedFonts.push(FontStore.getCssFontString(descriptors[i]));\n        }\n        if(failedFonts.length) {\n            let fonts = `'${ failedFonts.join(\"', '\") }'`;\n            throw new Error(`The following fonts failed to load: ${ fonts }`);\n        }\n    }\n\n    /**\n     * Loads the specified font.\n     * @param descriptor\n     *  The font to load.\n     * @param timeout\n     *  The amount of time to wait (in milliseconds) before giving up.\n     *  (Default: 4000)\n     * @returns\n     *  A Promise that resolves once the font has loaded.\n     * @throws { Error }\n     *  If the timeout was reached or if the document's font store encountered\n     *  an error while attempting to load the font.\n     */\n    public async loadFont(descriptor: FontDescriptor, timeout: number = 4000): Promise<boolean> {\n        let fontString = FontStore.getCssFontString(descriptor);\n        let fonts = (document as any).fonts; \n        if(fonts.check(fontString)) {\n            if(!this._fontList.has(fontString)){\n                this._fontList.set(fontString, new Font(descriptor));\n            } \n            return true;\n        } else {\n            let set = this._fontList.set.bind(this._fontList);\n            let start = Date.now();\n            // Create loader\n            let load = new Promise<boolean>(async (res, rej) => {\n                (async function fetch() {\n                    if(timeout <= Date.now() - start) {\n                        rej(\n                            new Error(`Failed to load font '${ \n                                fontString \n                            }' request timed out after ${ \n                                timeout \n                            }ms.`)\n                        );\n                    } else {\n                        fonts.load(fontString).then((fontList: Array<any>) => {\n                            if(0 < fontList.length) {\n                                let result = fonts.check(fontString);\n                                if(result) {\n                                    set(fontString, new Font(descriptor));\n                                }\n                                res(result);\n                            } else {\n                                setTimeout(fetch, 50);\n                            }\n                        }, rej);\n                    }\n                })()\n            })\n            // Create timer\n            let timeoutId;\n            let timer = new Promise<boolean>((_, rej) => {\n                timeoutId = setTimeout(\n                    () => rej(\n                        new Error(`Failed to load font '${ \n                            fontString \n                        }' request timed out after ${ \n                            timeout \n                        }ms.`)\n                    ),\n                    timeout\n                );\n            })\n            // Wait for either the loader or the timer to resolve\n            let result = await Promise.race([load, timer]);\n            // Clear timeout and complete request\n            clearTimeout(timeoutId);\n            return result;\n        }\n    }\n\n    /**\n     * Converts a FontDescriptor into a CSS font string.\n     * @param font\n     *  The font to evaluate.\n     * @returns\n     *  The FontDescriptor as a CSS font string.\n     */\n    public static getCssFontString(font: FontDescriptor): string {\n        return `${ font.weight ?? 400 } ${ font.size } ${ font.family }`\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Font  //////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class Font { \n\n    /**\n     * The default character to width index.\n     */\n    private static DEFAULT_INDEX: string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\t \";\n\n    /**\n     * The font's whitespace regex.\n     */\n    private static WHITESPACE: RegExp = /(\\s+)/;\n\n    /**\n     * The font's internal context.\n     */\n    private _ctx: CanvasRenderingContext2D;\n\n    /**\n     * The font's internal character to width index.\n     */\n    private _widthIndex: Map<string, number>\n\n    /**\n     * The font's css string.\n     */\n    public css: string;\n\n    /**\n     * The font's descriptor.\n     */\n    public descriptor: FontDescriptor\n    \n\n    /**\n     * Creates a new {@link FontFamily}.\n     * @param descriptor\n     *  The font's descriptor.\n     */\n    constructor(descriptor: FontDescriptor) {\n        this.css = FontStore.getCssFontString(descriptor);\n        this.descriptor = descriptor;\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        this._ctx.font = this.css;\n        this._widthIndex = new Map();\n        for(let char of Font.DEFAULT_INDEX) {\n            this._widthIndex.set(char, this.measureWidth(char));\n        }\n    }\n\n\n    /**\n     * Returns the width of the given text.\n     * @param text\n     *  The text to measure.\n     * @returns\n     *  The width of the text (in pixels).\n     * @throws { Error }\n     *  If `font` has not been loaded.\n     */\n    public measureWidth(text: string): number {\n        if((document as any).fonts.check(this.css)) {\n            return this._ctx.measureText(text).width;\n        } else {\n            throw new Error(`The font '${ \n                this.css \n            }' has not been loaded. The width of '${ \n                text \n            }' cannot be measured.`)\n        }\n    }\n\n    /**\n     * Returns the width and height of the given text.\n     * @param text\n     *  The text to measure.\n     * @returns\n     *  The width and height of the text (in pixels).\n     * @throws { Error }\n     *  If `font` has not been loaded.\n     */\n    public measure(text: string): { width: number, ascent: number, descent: number } {\n        if((document as any).fonts.check(this.css)) {\n            let m = this._ctx.measureText(text);\n            return {\n                width: m.width,\n                ascent: m.actualBoundingBoxAscent,\n                descent: m.actualBoundingBoxDescent\n            };\n        } else {\n            throw new Error(`The font '${ \n                this.css \n            }' has not been loaded. The width of '${ \n                text \n            }' cannot be measured.`)\n        }\n    }\n\n    /**\n     * Returns the width of a character.\n     * @param char\n     *  The character.\n     * @returns\n     *  The character's width.\n     */\n    public getCharWidth(char: string): number {\n        if(!this._widthIndex.has(char)) {\n            this._widthIndex.set(char, this.measureWidth(char));\n        }\n        return this._widthIndex.get(char)!;\n    }\n\n    /**\n     * Segments a string into lines no longer than the specified width.\n     * @param text\n     *  The text to wrap.\n     * @param width\n     *  The maximum width allowed.\n     * @returns\n     *  The segmented lines.\n     */\n    public wordWrap(text: string, width: number): string[] {\n        let lines = text.trim().split(/\\n/);\n        let segments: (string[] | string)[] = [];\n        for(let i = 0; i < lines.length; i++) {\n            if(lines[i]) {\n                segments[i] = this.lineWrap(lines[i], width);\n            } else {\n                segments[i] = lines[i]\n            }\n        }\n        return segments.flat();\n    }\n\n    /**\n     * Segments a line of text into lines no longer than the specified width.\n     * @param text\n     *  A single line of text. (i.e. Text has no newline characters.)\n     * @param width\n     *  The maximum width allowed.\n     * @returns\n     *  The segmented lines.\n     */\n    private lineWrap(text: string, width: number): string[] {\n        let line = \"\";\n        let lineWidth = 0;\n        let segments: string[] = [];\n        let tokens = text.split(Font.WHITESPACE).filter(Boolean);\n        let whitespaceParity = Font.WHITESPACE.test(tokens[0]) ? 0 : 1;\n        for(let i = 0; i < tokens.length; i++) {\n            let tokenWidth = this.measureWidth(tokens[i]);\n            \n            // Add Whitespace\n            if(i % 2 === whitespaceParity) {\n                line += tokens[i];\n                lineWidth += tokenWidth;\n                continue;\n            }\n            \n            // Add Word\n            if(width < lineWidth + tokenWidth) {\n                if(i !== 0) {\n                    // Finish line\n                    segments.push(line.trimEnd());\n                    // Reset line\n                    line = \"\";\n                    lineWidth = 0;\n                }\n                if(width < tokenWidth) {\n                    // Wrap token\n                    let word = tokens[i];\n                    for(let j = 0; j < word.length; j++) {\n                        tokenWidth = this.getCharWidth(word[j]);\n                        if(j !== 0 && width < lineWidth + tokenWidth) {\n                            // Finish line\n                            segments.push(line);\n                            // Reset line\n                            line = \"\";\n                            lineWidth = 0;\n                        }\n                        line += word[j];\n                        lineWidth += tokenWidth;\n                    }\n                    // Move onto next token\n                    continue;\n                }\n            }\n            line += tokens[i];\n            lineWidth += tokenWidth;\n\n        }\n        segments.push(line.trimEnd());\n        return segments;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. FontDescriptor  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type FontDescriptor = {\n    size: string,\n    family: string,\n    weight?: number,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. GlobalFontStore  ///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const GlobalFontStore = new FontStore();\n","///////////////////////////////////////////////////////////////////////////////\n//  1. General  ///////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Bounds a number within a specified range.\n * \n * **Example**\n * \n * - `clamp(41, 0, 100)` returns `41`. \n * - `clamp(-120, 0, 100)` returns `0`.\n * - `clamp(231, 0, 100)` returns `100`.\n * \n * @param n\n *  The number to bound.\n * @param min\n *  The range's lower bound.\n * @param max\n *  The range's upper bound.\n * @returns\n *  The number's bounded value.\n */\nexport function clamp(n: number, min: number, max: number): number {\n    return Math.min(Math.max(n, min), max);\n}\n\n/**\n * Rounds a number to the nearest multiple.\n * @param n\n *  The number to round.\n * @param multiple\n *  The multiple.\n * @returns\n *  The number rounded to the nearest multiple.\n */\nexport function round(n: number, multiple: number): number {\n    return Math.sign(n) * Math.round(Math.abs(n) / multiple) * multiple;\n}\n\n/**\n * Checks if two floats are equal up to the specified decimal place.\n * @param a\n *  The first number to compare.\n * @param b\n *  The second number to compare.\n * @param decimals\n *  The number of decimal places.\n *  (Default: 5)\n */\nexport function floatEq(a: number, b: number, decimals: number = 5) {\n    let m = 10 ** decimals;\n    return Math.floor(a * m) === Math.floor(b * m); \n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Bit Functions  /////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Generates an enum's bit mask.\n * @param obj\n *  The enum to evaluate.\n * @returns\n *  The enum's bit mask.\n */\nexport function generateBitMask(obj: { [key: string]: number }): number {\n    let mask = 0;\n    for (let bit in obj)\n        mask |= obj[bit];   \n    return mask;\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Geometry  //////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Calculates a line's hitbox.\n * @param x0\n *  The x coordinate of the 1st point.\n * @param y0\n *  The y coordinate of the 1st point.\n * @param x1\n *  The x coordinate of the 2nd point.\n * @param y1\n *  The y coordinate of the 2nd point.\n * @param width\n *  The width of the hitbox.\n * @returns\n *  The set of vertices that define the hitbox region.\n */\nexport function getLineHitbox(x0: number, y0: number, x1: number, y1: number, width: number): number[] {\n    let w = width / 2;\n    let vx = x1 - x0;\n    let vy = y1 - y0;\n    let angle = Math.acos(vx / Math.sqrt(vx**2 + vy**2));\n    let dx = w * Math.sin(angle);\n    let dy = w * Math.cos(angle);\n    return [\n        x0 - dx, y0 - dy,\n        x0 + dx, y0 + dy,\n        x1 + dx, y1 + dy,\n        x1 - dx, y1 - dy,\n    ]\n}\n\n/**\n * Tests if the given point lies inside the given region.\n * @param x\n *  The x coordinate.\n * @param y\n *  The y coordinate.\n * @param vertices\n *  The vertices that define the region. \n */\nexport function isInsideRegion(x: number, y: number, vertices: number[]) {\n    // If polygon\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    for(let i = 0; i < vertices.length; i += 2) {\n        minX = Math.min(minX, vertices[i]);\n        minY = Math.min(minY, vertices[i + 1]);\n        maxX = Math.max(maxX, vertices[i]);\n        maxY = Math.max(maxY, vertices[i + 1]);\n    }\n    if(minX < x && x < maxX && minY < y && y < maxY) {\n        // Compute intersection vector\n        let v1x0 = x;\n        let v1y0 = y;\n        let v1x1 = maxX + 1;\n        let v1y1 = y\n        // Computer vector intersections\n        let totalIntersections = 0;\n        let len = vertices.length;\n        for(let i = 0; i < len; i += 2) {\n            let intersection = doVectorsIntersect(\n                v1x0, v1y0, v1x1, v1y1, \n                vertices[i], vertices[i + 1], \n                vertices[(i + 2) % len], vertices[(i + 3) % len]\n            );\n            if(intersection) totalIntersections++;\n        }\n        return totalIntersections % 2 !== 0;\n    }\n    return false;\n}\n\n/**\n * Tests if the given point lies inside the given shape.\n * @param x\n *  The point's x coordinate.\n * @param y\n *  The point's y coordinate.\n * @param sx\n *  The shape's x coordinate.\n * @param sy\n *  The shape's y coordinate.\n * @param vertices\n *  The shape's vertices relative to (0,0). \n * @returns\n *  True if the point lines inside the shape, false otherwise.\n */\nexport function isInsideShape(\n    x: number, y: number, sx: number, sy: number, vertices: number[]\n): boolean {\n\n    // If circle\n    if(vertices.length === 1) {\n        let dx = x - sx;\n        let dy = y - sy;\n        let r = vertices[0];\n        return dx * dx + dy * dy < r * r\n    }\n    \n    // If polygon\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let txVertices = [];\n    for(let i = 0, vx, vy; i < vertices.length; i += 2) {\n        vx = sx + vertices[i];\n        vy = sy + vertices[i + 1];\n        minX = Math.min(minX, vx);\n        minY = Math.min(minY, vy);\n        maxX = Math.max(maxX, vx);\n        maxY = Math.max(maxY, vy);\n        txVertices.push(vx, vy);\n    }\n    if(minX < x && x < maxX && minY < y && y < maxY) {\n        // Compute intersection vector\n        let v1x0 = x;\n        let v1y0 = y;\n        let v1x1 = maxX + 1;\n        let v1y1 = y\n        // Computer vector intersections\n        let totalIntersections = 0;\n        let len = txVertices.length;\n        for(let i = 0; i < len; i += 2) {\n            let intersection = doVectorsIntersect(\n                v1x0, v1y0, v1x1, v1y1, \n                txVertices[i], txVertices[i + 1], \n                txVertices[(i + 2) % len], txVertices[(i + 3) % len]\n            );\n            if(intersection) totalIntersections++;\n        }\n        return totalIntersections % 2 !== 0;\n    }\n    return false;\n\n}\n\n/**\n * Tests if two vectors intersect. Collinear vectors do not intersect.\n * @param v1x0\n *  Vector 1's x0 coordinate.\n * @param v1y0 \n *  Vector 1's y0 coordinate.\n * @param v1x1\n *  Vector 1's x1 coordinate.\n * @param v1y1\n *  Vector 1's y1 coordinate.\n * @param v2x0\n *  Vector 2's x0 coordinate.\n * @param v2y0\n *  Vector 2's y0 coordinate.\n * @param v2x1 \n *  Vector 2's x1 coordinate.\n * @param v2y1 \n *  Vector 2's y1 coordinate.\n * @returns\n *  True if the vectors intersect, false otherwise.\n */\nexport function doVectorsIntersect(\n    v1x0: number, v1y0: number, \n    v1x1: number, v1y1: number, \n    v2x0: number, v2y0: number,\n    v2x1: number, v2y1: number\n): boolean {\n    let a1, b1, c1, a2, b2, c2, d1, d2;\n    // Test vector 2 on 1\n    a1 = v1y0 - v1y1;\n    b1 = v1x1 - v1x0;\n    c1 = (v1x0 * v1y1) - (v1x1 * v1y0)\n    d1 = (a1 * v2x0) + (b1 * v2y0) + c1;\n    d2 = (a1 * v2x1) + (b1 * v2y1) + c1;\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\n        return false;\n    // Test vector 1 on 2\n    a2 = v2y0 - v2y1;\n    b2 = v2x1 - v2x0;\n    c2 = (v2x0 * v2y1) - (v2x1 * v2y0)\n    d1 = (a2 * v1x0) + (b2 * v1y0) + c2;\n    d2 = (a2 * v1x1) + (b2 * v1y1) + c2;\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\n        return false;\n    // If Collinear\n    if ((a1 * b2) - (a2 * b1) == 0) \n        return false;\n    return true;\n}\n","/**\n * Computes the hash of a string using Java's `hashCode()` function.\n * @param string\n *  The string to hash.\n * @returns\n *  The string's hash.\n */\nexport function computeHash(string: string): number {\n    let hash = 0;\n    if (string.length === 0)\n        return hash;\n    for (let i = 0; i < string.length; i++) {\n        hash = ((hash << 5) - hash) + string.charCodeAt(i);\n        hash |= 0; // Convert to 32-bit integer\n    }\n    return hash;\n}\n\n/**\n * Capitalizes the first letter in a string.\n * @param text\n *  The string to capitalize.\n * @returns\n *  The capitalized string.\n */\nexport function capitalize(text: string): string {\n    return text ? `${ text[0].toLocaleUpperCase() }${ text.substring(1) }` : \"\"\n}\n\n/**\n * Casts a string to title case.\n * \n * ex. \"foo_bar\" -> \"Foo Bar\" \n * \n * @param text\n *  The string to cast to title case.\n * @returns\n *  The string cast to title case.\n */\nexport function titleCase(text: string): string {\n    return text.split(/\\s+|_/).map(s => capitalize(s)).join(\" \");\n}\n","export enum MouseClick { \n    Left   = 0, \n    Middle = 1,\n    Right  = 2\n}\n","import { SemanticRole } from \"../DiagramFactory\";\nimport { GraphExport, GraphObjectExport } from \"./GraphExportTypes\";\nimport { DiagramAnchorableModel, DiagramAnchorModel, DiagramObjectModel } from \"../DiagramModelTypes\";\n\nexport class SemanticAnalyzer {\n\n    /**\n     * Derives a graph from a diagram object.\n     * @param object\n     *  The diagram object.\n     * @returns\n     *  The graph's edges and nodes.\n     */\n    public static toGraph(object: DiagramObjectModel): GraphExport {\n        let items: Map<string, GraphObjectExport>;\n        let edges: Map<string, GraphObjectExport> = new Map();\n        let nodes: Map<string, GraphObjectExport> = new Map();\n        for(let obj of object.getSubtree()) {\n            // Select item map\n            switch(obj.getSemanticRole()) {\n                case SemanticRole.Node:\n                    items = nodes;\n                    break;\n                case SemanticRole.Edge:\n                    items = edges;\n                    break;\n                default:\n                    continue;\n            }\n            // Resolve prev & next\n            let next = this.traverse(obj, Direction.Next) as any;\n            for(let [key, value] of next) {\n                next.set(key, value.map((o: DiagramObjectModel) => o.id));\n            }\n            let prev = this.traverse(obj, Direction.Prev) as any;\n            for(let [key, value] of prev) {\n                prev.set(key, value.map((o: DiagramObjectModel) => o.id));\n            }\n            // Export object\n            items.set(obj.id, new GraphObjectExport(obj.template, obj.props, next, prev));\n        }\n        return { edges, nodes }\n    }\n\n    /**\n     * Traverses a diagram object and derives the next set of diagram objects\n     * as if it were a graph. The object must be a\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\n     * @param object\n     *  The diagram object.\n     * @returns\n     *  The next set of diagram objects.\n     */\n    public static getNextGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\n        return [...this.traverse(object, Direction.Next).values()].flat();\n    }\n\n    /**\n     * Traverses a diagram object and derives the previous set of diagram\n     * objects as if it were a graph. The object must be a\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\n     * @param object\n     *  The diagram object.\n     * @returns\n     *  The previous set of diagram objects.\n     */\n    public static getPrevGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\n        return [...this.traverse(object, Direction.Prev).values()].flat();\n    }\n\n    /**\n     * Traverses a {@link DiagramObjectModel} and derives the next set of\n     * diagram objects as if it were a graph.\n     * @param object\n     *  The diagram object.\n     * @param direction\n     *  The traversal direction.\n     * @returns\n     *  The link map.\n     */\n    private static traverse(\n        object: DiagramObjectModel,\n        direction: Direction\n    ): Map<string, DiagramObjectModel[]> {\n        let map = new Map<string, DiagramObjectModel[]>();\n        if(\n            !object.hasRole(SemanticRole.Edge) &&\n            !object.hasRole(SemanticRole.Node)\n        ) {\n            return map;\n        }\n        let stack = [...object.children];\n        while(stack.length) {\n            let obj = stack.pop()!;\n            // Anchor object\n            if(obj instanceof DiagramAnchorModel) {\n                for(let child of obj.children) {\n                    this.registerLink(\n                        obj.template.id,\n                        this.traverseAnchorable(child, obj, direction),\n                        map\n                    )\n                }\n                continue;\n            }\n            // Anchorable object\n            if(obj instanceof DiagramAnchorableModel) {\n                this.registerLink(\n                    obj.anchor?.template.id ?? \"undefined\",\n                    this.traverseAnchorable(obj, obj.parent!, direction),\n                    map\n                )\n                continue;\n            }\n            // Node or Edge object\n            if(\n                obj.hasRole(SemanticRole.Node) ||\n                obj.hasRole(SemanticRole.Edge)\n            ) {\n                continue;\n            }\n            // General object\n            for(let child of obj.children) {\n                stack.push(child);\n            }\n        }\n        return map;\n    }\n\n    /**\n     * Registers a link with a link map.\n     * @param via \n     *  The route the link is connected through.\n     * @param obj\n     *  The linked object.\n     * @param map\n     *  The link map.\n     */\n    public static registerLink(\n        via: string,\n        obj: DiagramObjectModel | undefined,\n        map: Map<string, DiagramObjectModel[]>\n    ) {\n        if(!obj) return;\n        if(!map.has(via)) {\n            map.set(via, []);\n        }\n        map.get(via)!.push(obj);\n    }\n\n    \n    /**\n     * Traverses a {@link DiagramAnchorableModel} and derives the next diagram\n     * object as if it were a graph.\n     * @param object \n     *  The {@link DiagramAnchorableModel}.\n     * @param source\n     *  The object the {@link DiagramAnchorableModel} was accessed from.\n     * @param direction\n     *  The traversal direction.\n     * @returns\n     *  The next diagram object, if there was one.\n     */\n    public static traverseAnchorable(\n        object: DiagramAnchorableModel,\n        source: DiagramObjectModel,\n        direction: Direction\n    ): DiagramObjectModel | undefined {\n        let r1, r2;\n        switch(direction) {\n            case Direction.Next:\n                r1 = SemanticRole.LinkSource;\n                r2 = SemanticRole.LinkTarget;\n                break;\n            case Direction.Prev:\n                r1 = SemanticRole.LinkTarget;\n                r2 = SemanticRole.LinkSource;\n                break;\n        }\n        let p;\n        if(object.anchor === source && object.hasRole(r1)) {\n            p = object.parent;\n\n        }\n        if(object.parent === source && object.hasRole(r2)) {\n            p = object.anchor;\n        }\n        while(p) {\n            if(\n                p.hasRole(SemanticRole.Node) || \n                p.hasRole(SemanticRole.Edge)\n            ) {\n                break;\n            }\n            p = p.parent;\n        }\n        return p;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nenum Direction {\n    Next = 0,\n    Prev = 1\n}\n","import { RootProperty } from \"../Property\"\nimport { ObjectTemplate } from \"../DiagramFactory\"\n\nexport type GraphExport = {\n\n    /**\n     * The graph's nodes.\n     */\n    nodes: Map<string, GraphObjectExport>\n    \n    /**\n     * The graph's edges.\n     */\n    edges: Map<string, GraphObjectExport>\n\n}\n\nexport class GraphObjectExport {\n    \n    /**\n     * The object's template.\n     */\n    public template: ObjectTemplate\n\n    /**\n     * The object's properties.\n     */\n    public props: RootProperty\n \n    /**\n     * The object's parent link map.\n     */\n    public prevLinkMap: Map<string, string[]>\n \n    /**\n     * The object's child link map.\n     */\n    public nextLinkMap: Map<string, string[]>\n\n    /**\n     * The object's parents.\n     */\n    public get prev(): string[] {\n        return [...this.prevLinkMap.values()].flat();\n    }\n\n    /**\n     * The object's children.\n     */\n    public get next(): string[] {\n        return [...this.nextLinkMap.values()].flat();\n    }\n\n\n    /**\n     * Creates a new {@link GraphObjectExport}.\n     * @param template\n     *  The object's template.\n     * @param props\n     *  The object's properties.\n     * @param nextLinkMap\n     *  The object's parent link map.\n     * @param prevLinkMap\n     *  The object's child link map.\n     */\n    constructor(\n        template: ObjectTemplate,\n        props: RootProperty,\n        nextLinkMap: Map<string, string[]>,\n        prevLinkMap: Map<string, string[]>\n    ) {\n        this.template = template;\n        this.props = props;\n        this.nextLinkMap = nextLinkMap;\n        this.prevLinkMap = prevLinkMap;\n    }\n\n}\n","export class PointerTracker {\n\n    /**\n     * The pointer's total delta-x.\n     */\n    public deltaX: number;\n\n    /**\n     * The pointer's total delta-y.\n     */\n    public deltaY: number;\n\n    /**\n     * The pointer's current delta-x.\n     */\n    public movementX: number;\n\n    /**\n     * The pointer's current delta-y.\n     */\n    public movementY: number;\n    \n    /**\n     * The drag target.\n     */\n    public target: HTMLElement | null;\n\n    /**\n     * The pointer's origin on the x-axis.\n     */\n    private _originX: number;\n\n    /**\n     * The pointer's origin on the y-axis.\n     */\n    private _originY: number;\n\n    /**\n     * The pointer's last position on the x-axis.\n     */\n    private _lastX: number;\n\n    /**\n     * The pointer's last position on the y-axis.\n     */\n    private _lastY: number;\n\n\n    /**\n     * Creates a new {@link PointerTracker}.\n     */\n    constructor() {\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.movementX = 0;\n        this.movementY = 0;\n        this.target = null;\n        this._originX = 0;\n        this._originY = 0;\n        this._lastX = 0;\n        this._lastY = 0;\n    }\n\n\n    /**\n     * Captures the pointer and resets the pointer tracker.\n     * @param event\n     *  The pointer down event.\n     * @param callback\n     *  The function to call on pointer movement.\n     */\n    public capture(event: PointerEvent, callback: (e: PointerEvent, t: PointerTracker) => void) {\n        this._originX = event.clientX;\n        this._originY = event.clientY;\n        this._lastX = this._originX;\n        this._lastY = this._originY;\n        this.target = event.target as HTMLElement;\n        this.target.setPointerCapture(event.pointerId);\n        this.target.onpointermove = (e) => {\n            this.update(e);\n            callback(e, this);\n        };\n    }\n\n    /**\n     * Updates the pointer tracker.\n     * @param event\n     *  The pointer move event.\n     */\n    private update(event: PointerEvent) {\n        this.deltaX = event.clientX - this._originX;\n        this.deltaY = event.clientY - this._originY;\n        this.movementX = event.clientX - this._lastX;\n        this.movementY = event.clientY - this._lastY;\n        this._lastX = event.clientX;\n        this._lastY = event.clientY;\n    }\n\n    /**\n     * Releases the current pointer.\n     * @param event\n     *  The pointer up event.\n     */\n    public release(event: PointerEvent) {\n        if(this.target !== null) {\n            this.target.releasePointerCapture(event.pointerId);\n            this.target.onpointermove = null;\n            this.target = null;\n        }\n    }\n\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"frame center\" }\nconst _hoisted_2 = { class: \"frame right\" }\nconst _hoisted_3 = { class: \"frame bottom\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AppTitleBar = _resolveComponent(\"AppTitleBar\")!\n  const _component_BlockDiagram = _resolveComponent(\"BlockDiagram\")!\n  const _component_EditorSidebar = _resolveComponent(\"EditorSidebar\")!\n  const _component_AppFooterBar = _resolveComponent(\"AppFooterBar\")!\n  const _component_AppHotkeyBox = _resolveComponent(\"AppHotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_AppHotkeyBox, { id: \"main\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_AppTitleBar, { id: \"app-title-bar\" }),\n      _createElementVNode(\"div\", {\n        id: \"app-body\",\n        ref: \"body\",\n        style: _normalizeStyle(_ctx.gridLayout)\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_BlockDiagram, { id: \"block-diagram\" })\n        ]),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: \"resize-handle\",\n            onPointerdown: _cache[0] || (_cache[0] = ($event: any) => (_ctx.startResize($event, _ctx.Handle.Right)))\n          }, null, 32),\n          _createVNode(_component_EditorSidebar, { id: \"app-sidebar\" })\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_AppFooterBar, { id: \"app-footer-bar\" })\n        ])\n      ], 4)\n    ]),\n    _: 1\n  }))\n}","import { ValidationErrorResult } from \"./ValidationErrorResult\";\nimport { ValidationWarningResult } from \"./ValidationWarningResult\";\nimport {\n    DiagramObjectModel,\n    GraphObjectExport\n} from \"../BlockDiagram\";\n\nexport class DiagramValidator {\n\n    /**\n     * The validator's error list.\n     */\n    private _errors: ValidationErrorResult[];\n\n    /**\n     * The validator's warning list.\n     */\n    private _warnings: ValidationWarningResult[];\n\n\n    /**\n     * Creates a new {@link DiagramValidator}.\n     */\n    constructor() {\n        this._errors = [];\n        this._warnings = [];\n    } \n\n\n    /**\n     * Resets and runs the validator.\n     * @param object\n     *  The diagram object to validate.\n     */\n    public run(object: DiagramObjectModel) {\n        this.reset();\n        this.validate(object);\n    }\n\n    /**\n     * Validates a diagram.\n     * @param diagram\n     *  The diagram to validate.\n     */\n    protected validate(diagram: DiagramObjectModel) {}\n\n    /**\n     * Returns the validator's current set of warnings.\n     * @returns\n     *  The validator's current set of warnings.\n     */\n    public getWarnings(): ValidationWarningResult[] {\n        return this._warnings;\n    }\n\n    /**\n     * Returns the validator's current set of errors.\n     * @returns\n     *  The validator's current set of errors.\n     */\n    public getErrors(): ValidationErrorResult[] {\n        return this._errors;\n    }\n\n    /**\n     * Adds a warning to the validator.\n     * @param object\n     *  The id of the object that failed to validate.\n     * @param reason\n     *  The reason the object failed to validate.\n     */\n    public addWarning(object: string, reason: string) {\n        this._warnings.push({ object, reason });\n    }\n\n    /**\n     * Adds an error to the validator.\n     * @param object\n     *  The id of the object that failed to validate.\n     * @param reason\n     *  The reason the object failed to validate.\n     */\n    protected addError(object: string, reason: string) {\n        this._errors.push({ object, reason });\n    }\n\n    /**\n     * Tests if the validator is in a valid state.\n     * @returns\n     *  True if the validator is in a valid state, false otherwise.\n     */\n    public inValidState(): boolean {\n        return this._errors.length === 0;\n    }\n\n    /**\n     * Resets the validator's state.\n     */\n    public reset() {\n        this._errors = [];\n        this._warnings = [];\n    }\n\n}\n","import { DiagramValidator } from \"./scripts/DiagramValidator/DiagramValidator\";\nimport { \n    DiagramObjectModel, \n    DictionaryProperty, \n    GraphObjectExport, \n    ListProperty, \n    Property, \n    PropertyType,\n    SemanticAnalyzer \n} from \"./scripts/BlockDiagram\";\n\nclass AttackFlowValidator extends DiagramValidator {\n\n    /**\n     * Validates a diagram.\n     * @param diagram\n     *  The diagram to validate.\n     */\n    protected override validate(diagram: DiagramObjectModel): void {\n        let graph = SemanticAnalyzer.toGraph(diagram);\n        // Validate nodes\n        for (let [id, node] of graph.nodes) {\n            this.validateNode(id, node); \n            switch(node.template.id) {\n                case \"note\":\n                    if(node.next.length === 0) {\n                        this.addError(id, \"A Note must point to at least one object.\");\n                    }\n                    break;\n            }\n        }\n        // Validate edges\n        for (let [id, edge] of graph.edges) {\n            this.validateEdge(id, edge);\n        }\n    }\n\n    /**\n     * Validates a node.\n     * @param id\n     *  The node's id.\n     * @param node\n     *  The node.\n     */\n    protected validateNode(id: string, node: GraphObjectExport) {\n        for (const [key, value] of node.props.value) {\n            this.validateProperty(id, key, value)\n        }\n    }\n\n    /**\n     * Validates a property against its descriptor.\n     * @param id\n     *  The property's node id.\n     * @param name\n     *  The property's name.\n     * @param property\n     *  The property.\n     */\n    protected validateProperty(id: string, name: string, property: Property) {\n        switch (property.type) {\n            case PropertyType.Int:\n            case PropertyType.Float:\n            case PropertyType.String:\n            case PropertyType.Date:\n            case PropertyType.Enum:\n                let descriptor = property.descriptor as any;\n                if(descriptor.is_required && !property.isDefined()) {\n                    this.addError(id, `Missing required field: '${ name }'`);\n                }\n                break;\n            case PropertyType.Dictionary:\n                if(property instanceof DictionaryProperty) {\n                    for(let [k, v] of property.value) {\n                        this.validateProperty(id, `${ name }.${ k }`, v);\n                    }\n                }\n                break;\n            case PropertyType.List:\n                if(property instanceof ListProperty) {\n                    for(let v of property.value.values()) {\n                        switch(v.type) {\n                            case PropertyType.Int:\n                            case PropertyType.Float:\n                            case PropertyType.String:\n                            case PropertyType.Date:\n                            case PropertyType.Enum:\n                                let descriptor = v.descriptor as any;\n                                if(descriptor.is_required && !v.isDefined()) {\n                                    this.addError(id, `Empty item in list: '${ name }'.`);\n                                }\n                                break;\n                            case PropertyType.List:\n                                throw new Error(\"Unexpected list property.\");\n                            case PropertyType.Dictionary:\n                                this.validateProperty(id, name, v);\n                                break;\n                        }\n                    }\n                }\n                break;\n        }\n    }\n\n    /**\n     * Validates an edge.\n     * @param id\n     *  The edge's id.\n     * @param edge\n     *  The edge.\n     */\n    protected validateEdge(id: string, edge: GraphObjectExport) {\n        if (edge.prev.length === 0 || edge.next.length === 0) {\n            this.addWarning(id, \"Edge should connect on both ends.\");\n        }\n    }\n\n}\n\nexport default AttackFlowValidator;\n","import { DiagramObjectModel } from \"../BlockDiagram\";\n\nexport class DiagramPublisher {\n\n    /**\n     * Returns the published diagram in text form.\n     * @param diagram\n     *  The diagram to publish.\n     * @returns\n     *  The published diagram in text form.\n     */\n    public publish(diagram: DiagramObjectModel): string {\n        return \"\";\n    };\n\n}\n","import { DiagramPublisher } from \"./scripts/DiagramPublisher/DiagramPublisher\";\nimport {\n    CollectionProperty,\n    DiagramObjectModel,\n    DictionaryProperty,\n    EnumProperty,\n    GraphObjectExport,\n    ListProperty,\n    Property,\n    PropertyType,\n    RawEntries,\n    SemanticAnalyzer\n} from \"./scripts/BlockDiagram\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Publisher Constants  //////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nconst AttackFlowExtensionId\n    = \"fb9c968a-745b-4ade-9b25-c324172197f4\";\n\nconst AttackFlowSchemaUrl\n    = \"https://center-for-threat-informed-defense.github.io/attack-flow/stix/attack-flow-schema-2.0.0.json\";\n\nconst AttackFlowSchemaVersion\n    = \"2.0.0\";\n\nconst AttackFlowExtensionCreatedDate\n    = \"2022-08-02T19:34:35.143Z\";\n\nconst AttackFlowExtensionModifiedDate\n    = AttackFlowExtensionCreatedDate;\n\nconst AttackFlowDocsExternalReference =\n    {\n        source_name: \"Documentation\",\n        description: \"Documentation for Attack Flow\",\n        url: \"https://center-for-threat-informed-defense.github.io/attack-flow\"\n    };\n\nconst AttackFlowGitHubExternalReference =\n    {\n        source_name: \"GitHub\",\n        description: \"Source code repository for Attack Flow\",\n        url: \"https://github.com/center-for-threat-informed-defense/attack-flow\"\n    };\n\nconst AttackFlowExtensionCreatorName\n    = \"MITRE Engenuity Center for Threat-Informed Defense\";\n\nconst AttackFlowSdos\n    = new Set<string>([\n        \"attack-flow\",\n        \"attack-action\",\n        \"attack-asset\",\n        \"attack-condition\",\n        \"attack-operator\"\n    ]);\n\nconst AttackFlowTemplatesMap: Map<string, string>\n    = new Map([\n        [\"flow\", \"attack-flow\"],\n        [\"action\", \"attack-action\"],\n        [\"asset\", \"attack-asset\"],\n        [\"condition\", \"attack-condition\"],\n        [\"or\", \"attack-operator\"],\n        [\"and\", \"attack-operator\"],\n    ]);\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Attack Flow Publisher  ////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nclass AttackFlowPublisher extends DiagramPublisher {\n\n    /**\n     * Returns the published diagram in text form.\n     * @param diagram\n     *  The diagram to publish.\n     * @returns\n     *  The published diagram in text form.\n     */\n    public override publish(diagram: DiagramObjectModel): string {\n        let graph = SemanticAnalyzer.toGraph(diagram);\n\n        // Extract page\n        let pageId = diagram.id;\n        let page = graph.nodes.get(pageId);\n        if(page) {\n            graph.nodes.delete(pageId);\n        } else {\n            throw new Error(\"Page object missing from export.\")\n        }\n\n        // Create bundle\n        let stixBundle = this.createStixBundle();\n        let author = this.createFlowAuthorSdo(page);\n        let flow = this.createFlowSdo(pageId, page, author.id);\n        stixBundle.objects.push(flow);\n        stixBundle.objects.push(author);\n\n        // Graph ID -> STIX node.\n        let stixNodes = new Map<string, Sdo>();\n        // Parent STIX node -> Child Links\n        let stixChildren = new Map<Sdo, Link[]>();\n\n        // Create SDOs and SCOs from graph nodes\n        for (let [id, node] of graph.nodes) {\n            let stixNode = this.toStixNode(id, node);\n            stixBundle.objects.push(stixNode);\n            stixNodes.set(id, stixNode);\n            stixChildren.set(stixNode, []);\n        }\n\n        // Create adjacency list from graph edges\n        for (let edge of graph.edges.values()) {\n            let prev = edge.prev;\n            let next = edge.next;\n            // Skip edges that don't connect two nodes\n            if(prev.length !== 1 || next.length !== 1)\n                continue;\n            // Register link\n            let prevNode = stixNodes.get(prev[0]);\n            let nextNode = stixNodes.get(next[0]);\n            if (prevNode && nextNode) {\n                stixChildren.get(prevNode)!.push({\n                    obj: nextNode,\n                    via: edge.prevLinkMap.keys().next().value\n                });\n            } else {\n                throw new Error(`Edge '${ edge }' is missing one or more nodes.`);\n            }\n        }\n\n        // Embed references\n        for (let [node, children] of stixChildren) {\n            let SROs = this.tryEmbed(node, children);\n            // If any embeds failed, append SROs\n            stixBundle.objects.push(...SROs);\n        }\n\n        // Configure flow roots\n        loop1:\n        for(let [id, value] of graph.nodes) {\n            let type = value.template.id;\n            // Ensure no parents\n            // if(value.prev.length !== 0)\n            //     continue;\n            for (let prevEdgeId of value.prev) {\n                let prevEdge = graph.edges.get(prevEdgeId)!;\n                if (prevEdge.prev.length > 0) {\n                    let prevNode = stixNodes.get(prevEdge.prev[0])!;\n                    if (prevNode.type == \"attack-action\" || prevNode.type == \"attack-condition\") {\n                        break loop1;\n                    }\n                }\n            }\n            // Add start ref\n            let stixId = stixNodes.get(id)!.id;\n            switch(type) {\n                case \"action\":\n                case \"condition\":\n                    flow.start_refs.push(stixId);\n                    break;\n            }\n        }\n\n        // Return bundle as string\n        return JSON.stringify(stixBundle, null, 2);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Stix Node Creation  ////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Exports a graph object to an SDO or SCO.\n     * @param id\n     *  The graph object's id.\n     * @param node\n     *  The graph object.\n     * @returns\n     *  The exported SDO or SCO.\n     */\n    private toStixNode(id: string, node: GraphObjectExport): Sdo {\n        let obj = this.createSdo(node.template.id, id);\n        switch(obj.type) {\n            case \"attack-action\":\n                this.mergeActionProperty(obj, node.props);\n                break;\n            default:\n                this.mergeBasicDictProperty(obj, node.props);\n                break;\n        }\n        return obj;\n    }\n\n    /**\n     * Merges an action's properties into a STIX action node.\n     * @param node\n     *  The STIX action node.\n     * @param property\n     *  The action's properties.\n     */\n    private mergeActionProperty(node: Sdo, property: DictionaryProperty) {\n        for(let [key, prop] of property.value) {\n            switch(key) {\n                case \"confidence\":\n                    if(!(prop instanceof EnumProperty)) {\n                        throw new Error(\"'confidence' is improperly defined.\");\n                    }\n                    if(!prop.isDefined()) {\n                        break;\n                    }\n                    prop = prop.toReferenceValue()!;\n                    if(!(prop instanceof DictionaryProperty)) {\n                        throw new Error(\"'confidence' is improperly defined.\");\n                    }\n                    [ prop ] = this.getSubproperties(prop, \"value\");\n                    // Falls through\n                default:\n                    if(prop.isDefined()) {\n                        node[key] = prop.toRawValue();\n                    }\n            }\n        }\n    }\n\n    /**\n     * Merges a basic dictionary into a STIX node.\n     * @param node\n     *  The STIX node.\n     * @param property\n     *  The dictionary property.\n     */\n    private mergeBasicDictProperty(node: Sdo, property: DictionaryProperty) {\n        for(let [key, prop] of property.value) {\n            switch(prop.type) {\n                case PropertyType.Dictionary:\n                    throw new Error(\"Basic dictionaries cannot contain dictionaries.\");\n                case PropertyType.Enum:\n                    if (prop instanceof EnumProperty && prop.isDefined()) {\n                        let value = prop.toReferenceValue()!.toRawValue()!;\n                        node[key] = value === \"True\";\n                    }\n                    break;\n                case PropertyType.List:\n                    if (prop.isDefined()) {\n                        this.mergeBasicListProperty(node, key, prop as ListProperty);\n                    }\n                    break;\n                default:\n                    if(prop.isDefined()) {\n                        node[key] = prop.toRawValue();\n                    }\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Merges a basic list into a STIX node.\n     * @param node\n     *  The STIX node.\n     * @param key\n     *  The list property's key.\n     * @param property\n     *  The list property.\n     */\n    private mergeBasicListProperty(node: Sdo, key: string, property: ListProperty) {\n        node[key] = [];\n        for(let prop of property.value.values()) {\n            switch(prop.type) {\n                case PropertyType.Dictionary:\n                    throw new Error(\"Basic lists cannot contain dictionaries.\");\n                case PropertyType.List:\n                    throw new Error(\"Basic lists cannot contain lists.\");\n                case PropertyType.Enum:\n                    throw new Error(\"Basic lists cannot contain enums.\");\n                default:\n                    if(prop.isDefined()) {\n                        node[key].push(prop.toRawValue());\n                    }\n                    break;\n            }\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Relationships Embeddings  //////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Embed a reference to each child in the parent. If any of the children\n     * cannot be embedded, return a new SRO in its place.\n     *\n     * @remarks\n     * While processing each node, we also process the in edges and out edges of that\n     * node. Some edges may be represented as embedded refs in the node's SDO, and\n     * others may be represented as separate relationship objects (i.e. SROs), therefore\n     * this method can return multiple objects.\n     *\n     * @param parent\n     *  The STIX node.\n     * @param children\n     *  The STIX node's children.\n     * @returns\n     *  Zero or more SROs.\n     */\n    private tryEmbed(parent: Sdo, children: Link[]): Sro[] {\n        let SROs = [];\n        // Attempt to embed children in parent\n        for (const c of children) {\n            let sro = null;\n            switch (parent.type) {\n                case \"attack-action\":\n                    sro = this.tryEmbedInAction(parent, c.obj);\n                    break;\n                case \"attack-asset\":\n                    sro = this.tryEmbedInAsset(parent, c.obj);\n                    break;\n                case \"attack-condition\":\n                    sro = this.tryEmbedInCondition(parent, c.obj, c.via);\n                    break;\n                case \"attack-operator\":\n                    sro = this.tryEmbedInOperator(parent, c.obj);\n                    break;\n                case \"note\":\n                    this.tryEmbedInNote(parent, c.obj);\n                    break;\n                default:\n                    sro = this.tryEmbedInDefault(parent, c.obj);\n            }\n            // If embed failed, append SRO\n            if (sro) {\n                SROs.push(sro);\n            }\n        }\n        return SROs;\n    }\n\n    /**\n     * Embed a reference to the child in the action. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX action node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInAction(parent: Sdo, child: Sdo): Sro | undefined {\n        let sro;\n        switch (child.type) {\n            case \"process\":\n                /**\n                 * Note:\n                 * If there are multiple children with type \"process\", only the\n                 * first one will be set as the command ref. The others will be\n                 * set as SROs.\n                 */\n                if (parent.command_ref) {\n                    sro = this.createSro(parent, child);\n                } else {\n                    parent.command_ref = child.id;\n                }\n                break;\n            case \"attack-asset\":\n                if (!parent.asset_refs) {\n                    parent.asset_refs = [];\n                }\n                parent.asset_refs.push(child.id);\n                break;\n            case \"attack-action\":\n                // Falls through\n            case \"attack-operator\":\n                // Falls through\n            case \"attack-condition\":\n                if (!parent.effect_refs) {\n                    parent.effect_refs = [];\n                }\n                parent.effect_refs.push(child.id);\n                break;\n            default:\n                sro = this.createSro(parent, child);\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the asset. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX asset node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInAsset(parent: Sdo, child: Sdo): Sro | undefined {\n        let sro;\n        /**\n         * Note:\n         * If there are multiple children, only the first one will be set as\n         * the object_ref. The others will be set as SROs.\n         */\n        if (parent.object_ref) {\n            sro = this.createSro(parent, child);\n        } else {\n            parent.object_ref = child.id;\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the condition. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX condition node.\n     * @param child\n     *  A STIX child node.\n     * @param via\n     *  The route the child is connected through.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInCondition(parent: Sdo, child: Sdo, via: string): Sro | undefined {\n        let sro;\n        switch (child.type) {\n            case \"attack-action\":\n                // Falls through\n            case \"attack-operator\":\n                // Falls through\n            case \"attack-condition\":\n                switch(via) {\n                    case \"true_anchor\":\n                        if (!parent.on_true_refs) {\n                            parent.on_true_refs = [];\n                        }\n                        parent.on_true_refs.push(child.id);\n                        break;\n                    case \"false_anchor\":\n                        if (!parent.on_false_refs) {\n                            parent.on_false_refs = [];\n                        }\n                        parent.on_false_refs.push(child.id);\n                        break;\n                    default:\n                        sro = this.createSro(parent, child);\n                        break;\n                }\n                break;\n            default:\n                sro = this.createSro(parent, child);\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the operator. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX operator node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInOperator(parent: Sdo, child: Sdo): Sro | undefined {\n        let sro;\n        switch (child.type) {\n            case \"attack-action\":\n                // Falls through\n            case \"attack-operator\":\n                // Falls through\n            case \"attack-condition\":\n                if (!parent.effect_refs) {\n                    parent.effect_refs = [];\n                }\n                parent.effect_refs.push(child.id);\n                break;\n            default:\n                sro = this.createSro(parent, child);\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the note. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX note node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInNote(parent: Sdo, child: Sdo): void {\n        if(!parent.object_refs) {\n            parent.object_refs = [];\n        }\n        parent.object_refs.push(child.id);\n    }\n\n    /**\n     * Embed a reference to the child in the parent. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX parent node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInDefault(parent: Sdo, child: Sdo): Sro {\n        return this.createSro(parent, child);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Stix Bundle  ///////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Create the initial STIX bundle with required extension/creator SDOs.\n     * @returns\n     *  The initial STIX bundle with required extension/creator SDOs.\n     */\n    private createStixBundle(): BundleSdo {\n        const extensionAuthor = this.createExtensionAuthorSdo();\n        const extension = this.createExtensionSdo(extensionAuthor.id);\n        return {\n            ...this.createSdo(\"bundle\"),\n            objects             : [extension, extensionAuthor]\n        };\n    }\n\n    /**\n     * Creates the extension-definition SDO.\n     * @param creatorId\n     *  The creator's id.\n     * @returns\n     *  The extension-definition SDO.\n     */\n    private createExtensionSdo(creatorId: string): ExtensionSdo {\n        let obj = this.createSdo(\"extension-definition\", AttackFlowExtensionId);\n        return {\n            ...obj,\n            name                : \"Attack Flow\",\n            description         : \"Extends STIX 2.1 with features to create Attack Flows.\",\n            created             : AttackFlowExtensionCreatedDate,\n            modified            : AttackFlowExtensionModifiedDate,\n            created_by_ref      : creatorId,\n            schema              : AttackFlowSchemaUrl,\n            version             : AttackFlowSchemaVersion,\n            extension_types     : [\"new-sdo\"],\n            external_references : [\n                AttackFlowDocsExternalReference,\n                AttackFlowGitHubExternalReference,\n            ]\n        }\n    }\n\n    /**\n     * Creates the extension-definition author SDO.\n     * @returns\n     *  The extension-definition author SDO.\n     */\n    private createExtensionAuthorSdo(): ExtensionAuthorSdo {\n        let obj = this.createSdo(\"identity\", AttackFlowExtensionId);\n        return {\n            ...obj,\n            create_by_ref       : obj.id,\n            name                : AttackFlowExtensionCreatorName,\n            identity_class      : \"organization\",\n            created             : AttackFlowExtensionCreatedDate,\n            modified            : AttackFlowExtensionModifiedDate\n        };\n    }\n\n    /**\n     * Creates the attack flow SDO.\n     * @param id\n     *  The page's id.\n     * @param page\n     *  The page object.\n     * @param authorId\n     *  The author's id.\n     */\n    private createFlowSdo(id: string, page: GraphObjectExport, authorId: string): Sdo {\n\n        // Create flow\n        let flow: Sdo = {\n            ...this.createSdo(page.template.id, id),\n            created_by_ref      : authorId,\n            start_refs          : []\n        }\n\n        // Merge properties\n        for(let [key, prop] of page.props.value) {\n            switch(key) {\n                case \"external_references\":\n                    if(!(prop instanceof ListProperty)) {\n                        throw new Error(\"'external_references' is improperly defined.\");\n                    }\n                    if(prop.descriptor.form.type !== PropertyType.Dictionary) {\n                        throw new Error(\"'external_references' is improperly defined.\");\n                    }\n                    flow[key] = [];\n                    for(let ref of prop.value.values()) {\n                        let entries = ref.toRawValue() as RawEntries;\n                        flow[key].push(Object.fromEntries(entries));\n                    }\n                    break;\n                case \"scope\":\n                    if(!(prop instanceof EnumProperty)) {\n                        throw new Error(\"'scope' is improperly defined.\");\n                    }\n                    if(!prop.isDefined()) {\n                        break;\n                    }\n                    prop = prop.toReferenceValue()!;\n                    if(prop.isDefined()) {\n                        flow[key] = `${prop.toRawValue()!}`.toLocaleLowerCase();\n                    }\n                    break;\n                default:\n                    if(prop.isDefined()) {\n                        flow[key] = prop.toRawValue()\n                    }\n                    break;\n            }\n        }\n\n        // Return flow\n        return flow;\n\n    }\n\n    /**\n     * Creates the attack flow author SDO.\n     * @param page\n     *  The page object.\n     * @returns\n     *  The attack flow author SDO.\n     */\n    private createFlowAuthorSdo(page: GraphObjectExport): Sdo {\n        let props = page.props.value.get(\"author\");\n\n        // Create author\n        let author = this.createSdo(\"identity\");\n\n        // Merge properties\n        if(props instanceof CollectionProperty) {\n            for(let [key, prop] of props.value) {\n                switch(key) {\n                    case \"identity_class\":\n                        if(!(prop instanceof EnumProperty)) {\n                            throw new Error(\"'identity_class' is improperly defined.\");\n                        }\n                        if(!prop.isDefined()) {\n                            break;\n                        }\n                        prop = prop.toReferenceValue()!;\n                        if(prop.isDefined()) {\n                            author[key] = `${prop.toRawValue()!}`.toLocaleLowerCase();\n                        }\n                        break;\n                    default:\n                        if(prop.isDefined()) {\n                            author[key] = prop.toRawValue()\n                        }\n                        break;\n                }\n            }\n        } else {\n            throw new Error(\"'author' is improperly defined.\");\n        }\n\n        // Return author\n        return author;\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. SDO & SRO  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Creates a STIX Domain Object (SDO).\n     * @param template\n     *  The STIX object's template.\n     * @param stixId\n     *  The STIX object's id.\n     *  (Default: Randomly generated)\n     * @returns\n     *  The SDO object.\n     */\n    private createSdo(template: string, stixId: string = crypto.randomUUID()): Sdo {\n        let now = new Date().toISOString();\n        let type = AttackFlowTemplatesMap.get(template) ?? template;\n        type = type.replace(/_/g, \"-\");\n\n        // Create SDO\n        let sdo: Sdo = {\n            type                : type,\n            id                  : `${ type }--${ stixId }`,\n            spec_version        : \"2.1\",\n            created             : now,\n            modified            : now,\n        }\n\n        // Declare extension on Attack Flow SDOs.\n        if (AttackFlowSdos.has(type)) {\n            sdo.extensions = {\n                [`extension-definition--${ AttackFlowExtensionId }`] : {\n                    extension_type: \"new-sdo\",\n                }\n            };\n        }\n\n        // Return SDO\n        return sdo;\n    }\n\n    /**\n     * Creates a STIX Relationship Object (SRO).\n     * @param parent\n     *  The parent STIX node.\n     * @param child\n     *  The child STIX node.\n     * @param type\n     *  The relationship type.\n     *  (Default: related-to)\n     * @returns\n     *  The SRO object.\n     */\n    private createSro(parent: Sdo, child: Sdo, type: string = \"related-to\"): Sro {\n        const stixId = crypto.randomUUID();\n        const now = new Date().toISOString();\n        return {\n            type                : \"relationship\",\n            id                  : `relationship--${ stixId }`,\n            spec_version        : \"2.1\",\n            created             : now,\n            modified            : now,\n            relationship_type   : type,\n            source_ref          : parent.id,\n            target_ref          : child.id\n        };\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Helpers  ///////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Resolves a set of subproperties from a collection property.\n     * @param property\n     *  The collection property.\n     * @param ids\n     *  The subproperty id's.\n     * @returns\n     *  The subproperties.\n     */\n    private getSubproperties(property: CollectionProperty, ...ids: string[]): Property[] {\n        let subproperties = [];\n        for(let id of ids) {\n            let prop = property.value.get(id);\n            if(prop) {\n                subproperties.push(prop);\n            } else {\n                throw new Error(`${ id } was not defined on root property.`);\n            }\n        }\n        return subproperties;\n    }\n\n}\n\nexport default AttackFlowPublisher;\n\n\n///////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n\ntype Sdo = {\n    type         : string,\n    id           : string,\n    spec_version : string,\n    created      : string,\n    modified     : string,\n    extensions?   : {\n        [key: string] : {\n            extension_type: string\n        }\n    },\n    [key: string]: any\n}\n\ntype Sro = {\n    type              : string,\n    id                : string,\n    spec_version      : string,\n    created           : string,\n    modified          : string,\n    relationship_type : string,\n    source_ref        : string,\n    target_ref        : string\n}\n\ntype ExtensionSdo = Sdo & {\n    name                : string,\n    description         : string,\n    created             : string,\n    modified            : string,\n    created_by_ref      : string,\n    schema              : string,\n    version             : string,\n    extension_types     : string[],\n    external_references : {\n        source_name: string,\n        description: string,\n        url: string\n    }[]\n}\n\ntype ExtensionAuthorSdo = Sdo & {\n    create_by_ref  : string,\n    name           : string,\n    identity_class : string,\n    created        : string,\n    modified       : string\n}\n\ntype BundleSdo = Sdo & {\n    objects : [ExtensionSdo, ExtensionAuthorSdo, ...Sdo[]]\n}\n\ntype Link = {\n    obj: Sdo,\n    via: string\n}\n","import validator from \"./builder.config.validator\";\nimport publisher from \"./builder.config.publisher\";\nimport { AppConfiguration } from \"@/store/StoreTypes\";\nimport { Colors, DarkTheme } from \"./scripts/BlockDiagram/DiagramFactory/Themes\";\nimport {\n    AnchorAngle,\n    PropertyType,\n    SemanticRole,\n    TemplateType\n} from \"./scripts/BlockDiagram\";\n\nconst config: AppConfiguration = {\n    is_web_hosted: false,\n    file_type_name: \"Attack Flow\",\n    file_type_extension: \"afb\",\n    schema: {\n        page_template: \"flow\",\n        templates: [\n            {\n                id: \"flow\",\n                type: TemplateType.Page,\n                role: SemanticRole.Node,\n                grid: [10, 10],\n                properties: {\n                    name                         : { type: PropertyType.String, value: \"Untitled Document\", is_primary: true },\n                    description                  : { type: PropertyType.String, },\n                    author                       : {\n                        type: PropertyType.Dictionary,\n                        form: {\n                            name: { type: PropertyType.String, is_primary: true },\n                            identity_class: {\n                                type: PropertyType.Enum,\n                                options: {\n                                    type  : PropertyType.List,\n                                    form  : { type: PropertyType.String },\n                                    value : [\n                                        [\"individual\", \"Individual\"],\n                                        [\"group\", \"Group\"],\n                                        [\"system\", \"System\"],\n                                        [\"organization\", \"Organization\"],\n                                        [\"class\", \"Class\"],\n                                        [\"unknown\", \"Unknown\"]\n                                    ]\n                                }\n                            },\n                            contact_information: { type: PropertyType.String }\n                        }\n                    },\n                    scope                        : {\n                        type: PropertyType.Enum,\n                        options: {\n                            type: PropertyType.List,\n                            form: { type: PropertyType.String },\n                            value: [\n                                [\"incident\", \"Incident\"],\n                                [\"campaign\", \"Campaign\"],\n                                [\"threat-actor\", \"Threat Actor\"],\n                                [\"malware\", \"Malware\"],\n                                [\"other\", \"Other\"]\n                            ]\n                        },\n                        value: \"incident\"\n                    },\n                    external_references          : {\n                        type: PropertyType.List,\n                        form: {\n                            type: PropertyType.Dictionary,\n                            form: {\n                                source_name: { type: PropertyType.String, is_primary: true, is_required: true },\n                                description: { type: PropertyType.String },\n                                url: { type: PropertyType.String },\n                            }\n                        }\n                    },\n                    created                      : { type: PropertyType.Date, value: new Date(), is_visible: false }\n                },\n                style: DarkTheme.Page()\n            },\n            {\n                id: \"true_anchor\",\n                type: TemplateType.AnchorPoint,\n                role: SemanticRole.None,\n                radius: 10,\n                line_templates: {\n                    [AnchorAngle.DEG_0] : `@__builtin__line_horizontal_elbow`,\n                    [AnchorAngle.DEG_90]: `@__builtin__line_vertical_elbow`\n                },\n                style: DarkTheme.AnchorPoint()\n            },\n            {\n                id: \"false_anchor\",\n                type: TemplateType.AnchorPoint,\n                role: SemanticRole.None,\n                radius: 10,\n                line_templates: {\n                    [AnchorAngle.DEG_0] : `@__builtin__line_horizontal_elbow`,\n                    [AnchorAngle.DEG_90]: `@__builtin__line_vertical_elbow`\n                },\n                style: DarkTheme.AnchorPoint()\n            },\n            {\n                id: \"action\",\n                namespace: \"attack_flow.action\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    tactic_id                    : { type: PropertyType.String },\n                    tactic_ref                   : { type: PropertyType.String },\n                    technique_id                 : { type: PropertyType.String },\n                    technique_ref                : { type: PropertyType.String },\n                    description                  : { type: PropertyType.String },\n                    confidence                   : {\n                        type: PropertyType.Enum,\n                        options: {\n                            type: PropertyType.List,\n                            form: {\n                                type: PropertyType.Dictionary,\n                                form: {\n                                    text  : { type: PropertyType.String, is_primary: true },\n                                    value : { type: PropertyType.Int }\n                                }\n                            },\n                            value: [\n                                [\"speculative\",   { text: \"Speculative\", value: 0 }],\n                                [\"very-doubtful\", { text: \"Very Doubtful\", value: 10 }],\n                                [\"doubtful\",      { text: \"Doubtful\", value: 30 }],\n                                [\"even-odds\",     { text: \"Even Odds\", value: 50 }],\n                                [\"probable\",      { text: \"Probable\", value: 70 }],\n                                [\"very-probable\", { text: \"Very Probable\", value: 90 }],\n                                [\"certain\",       { text: \"Certain\", value: 100 }]\n                            ]\n                        },\n                        value: null\n                    },\n                    execution_start              : { type: PropertyType.Date },\n                    execution_end                : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Blue }})\n            },\n            {\n                id: \"asset\",\n                namespace: \"attack_flow.asset\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true},\n                    description                  : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Orange }})\n            },\n            {\n                id: \"condition\",\n                namespace: \"attack_flow.condition\",\n                type: TemplateType.BranchBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    description                  : { type: PropertyType.String, is_primary: true, is_required: true },\n                    pattern                      : { type: PropertyType.String },\n                    pattern_type                 : { type: PropertyType.String },\n                    pattern_version              : { type: PropertyType.String },\n                    date                         : { type: PropertyType.Date }\n                },\n                branches: [\n                    {\n                        text: \"True\",\n                        anchor_template: \"true_anchor\",\n                    },\n                    {\n                        text: \"False\",\n                        anchor_template: \"false_anchor\"\n                    }\n                ],\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.BranchBlock({ head: { ...Colors.Green }})\n            },\n            {\n                id: \"or\",\n                namespace: \"attack_flow.OR_operator\",\n                type: TemplateType.TextBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    operator: {\n                        type: PropertyType.String,\n                        value: \"OR\",\n                        is_primary: true,\n                        is_visible: false,\n                        is_editable: false,\n                    }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.TextBlock({ ...Colors.Red, horizontal_padding: 35 })\n            },\n            {\n                id: \"and\",\n                namespace: \"attack_flow.AND_operator\",\n                type: TemplateType.TextBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    operator: {\n                        type: PropertyType.String,\n                        value: \"AND\",\n                        is_primary: true,\n                        is_visible: false,\n                        is_editable: false,\n                    }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.TextBlock({ ...Colors.Red, horizontal_padding: 35 })\n            },\n            {\n                id: \"attack_pattern\",\n                namespace: \"stix_object.attack_pattern\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"campaign\",\n                namespace: \"stix_object.campaign\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    objective                    : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"course_of_action\",\n                namespace: \"stix_object.course_of_action\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    action_type                  : { type: PropertyType.String },\n                    os_execution_envs            : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    action_bin                   : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"grouping\",\n                namespace: \"stix_object.grouping\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    context                      : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"identity\",\n                namespace: \"stix_object.identity\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_required: true, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    roles                        : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    identity_class               : { type: PropertyType.String, is_required: true },\n                    sectors                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    contact_information          : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"indicator\",\n                namespace: \"stix_object.indicator\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    indicator_types              : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true } },\n                    pattern                      : { type: PropertyType.String, is_required: true },\n                    pattern_type                 : { type: PropertyType.String, is_required: true },\n                    patter_version               : { type: PropertyType.String },\n                    valid_from                   : { type: PropertyType.Date, is_required: true},\n                    valid_until                  : { type: PropertyType.Date },\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"infrastructure\",\n                namespace: \"stix_object.infrastructure\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    infrastructure_types         : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"intrusion_set\",\n                namespace: \"stix_object.intrusion_set\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    goals                        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    resource_level               : { type: PropertyType.String},\n                    primary_motivation           : { type: PropertyType.String},\n                    secondary_motivations        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"location\",\n                namespace: \"stix_object.location\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    latitude                     : { type: PropertyType.Float, min: -90, max: 90 },\n                    longitude                    : { type: PropertyType.Float, min: -180, max: 180 },\n                    precision                    : { type: PropertyType.Float },\n                    region                       : { type: PropertyType.String },\n                    country                      : { type: PropertyType.String },\n                    administrative_area          : { type: PropertyType.String },\n                    city                         : { type: PropertyType.String },\n                    street_address               : { type: PropertyType.String },\n                    postal_code                  : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"malware\",\n                namespace: \"stix_object.malware\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    malware_types                : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    is_family                    : { type: PropertyType.Enum,\n                                                     options: {\n                                                        type: PropertyType.List,\n                                                        form: { type:PropertyType.String },\n                                                        value: [[\"true\", \"True\"], [\"false\", \"False\"]]},\n                                                    is_required: true },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    os_execution_envs            : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    architecture_execution_envs  : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    implementation_languages     : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    capabilities                 : { type: PropertyType.List, form: { type: PropertyType.String } },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"malware_analysis\",\n                namespace: \"stix_object.malware_analysis\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    product                      : { type: PropertyType.String, is_primary: true, is_required: true },\n                    version                      : { type: PropertyType.String },\n                    configuration_version        : { type: PropertyType.String },\n                    modules                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    analysis_engine_version      : { type: PropertyType.String },\n                    analysis_definition_version  : { type: PropertyType.String },\n                    submitted                    : { type: PropertyType.Date },\n                    analysis_started             : { type: PropertyType.Date },\n                    analysis_ended               : { type: PropertyType.Date },\n                    av_result                    : { type: PropertyType.String},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"note\",\n                namespace: \"stix_object.note\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    abstract                     : { type: PropertyType.String, is_primary: true },\n                    content                      : { type: PropertyType.String, is_required: true },\n                    authors                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"observed_data\",\n                namespace: \"stix_object.observed_data\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    first_observed               : { type: PropertyType.Date, is_required: true },\n                    last_observed                : { type: PropertyType.Date, is_required: true },\n                    number_observed              : { type: PropertyType.Int, min: 0, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"opinion\",\n                namespace: \"stix_object.opinion\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    explanation                  : { type: PropertyType.String, is_primary: true },\n                    authors                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    opinion                      : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"report\",\n                namespace: \"stix_object.report\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    report_types                 : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    published                    : { type: PropertyType.Date, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"threat_actor\",\n                namespace: \"stix_object.threat_actor\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    threat_actor_types           : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    roles                        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    goals                        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    sophistication               : { type: PropertyType.String },\n                    resource_level               : { type: PropertyType.String },\n                    primary_motivation           : { type: PropertyType.String },\n                    secondary_motivations        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    personal_motivations         : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"tool\",\n                namespace: \"stix_object.tool\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    tool_types                   : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    tool_version                 : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"vulnerability\",\n                namespace: \"stix_object.vulnerability\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"artifact\",\n                namespace: \"stix_observable.artifact\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    mime_type                    : { type: PropertyType.String },\n                    payload_bin                  : { type: PropertyType.String },\n                    url                          : { type: PropertyType.String },\n                    hashes                       : { type: PropertyType.String },\n                    encryption_algorithm         : { type: PropertyType.String },\n                    decryption_key               : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"autonomous_system\",\n                namespace: \"stix_observable.autonomous_system\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    number                       : { type: PropertyType.String, is_primary: true, is_required: true },\n                    name                         : { type: PropertyType.String },\n                    rir                          : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"directory\",\n                namespace: \"stix_observable.directory\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    path                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    path_enc                     : { type: PropertyType.String },\n                    ctime                        : { type: PropertyType.Date },\n                    mtime                        : { type: PropertyType.Date },\n                    atime                        : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"domain_name\",\n                namespace: \"stix_observable.domain_name\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"email_address\",\n                namespace: \"stix_observable.email_address\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                    display_name                 : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"email_message\",\n                namespace: \"stix_observable.email_message\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    is_multipart                 : { type: PropertyType.Enum,\n                        options: {\n                           type: PropertyType.List,\n                           form: { type:PropertyType.String },\n                           value: [[\"true\", \"True\"], [\"false\", \"False\"]]},\n                       is_required: true },\n                    date                         : { type: PropertyType.String },\n                    content_type                 : { type: PropertyType.String },\n                    message_id                   : { type: PropertyType.String },\n                    subject                      : { type: PropertyType.String, is_primary: true },\n                    received_lines               : { type: PropertyType.String },\n                    additional_header_fields     : { type: PropertyType.String },\n                    body                         : { type: PropertyType.String },\n                    body_multipart               : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"file\",\n                namespace: \"stix_observable.file\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    hashes                       : { type: PropertyType.String },\n                    size                         : { type: PropertyType.String },\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    name_enc                     : { type: PropertyType.String },\n                    magic_number_hex             : { type: PropertyType.String },\n                    mime_type                    : { type: PropertyType.String },\n                    ctime                        : { type: PropertyType.Date },\n                    mtime                        : { type: PropertyType.Date },\n                    atime                        : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"ipv4_addr\",\n                namespace: \"stix_observable.ipv4_addr\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"ipv6_addr\",\n                namespace: \"stix_observable.ipv6_addr\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"mac_addr\",\n                namespace: \"stix_observable.mac_addr\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"mutex\",\n                namespace: \"stix_observable.mutex\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"network_traffic\",\n                namespace: \"stix_observable.network_traffic\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    start                        : { type: PropertyType.Date },\n                    end                          : { type: PropertyType.Date },\n                    is_active                    : { type: PropertyType.Enum,\n                        options: {\n                           type: PropertyType.List,\n                           form: { type:PropertyType.String },\n                           value: [[\"true\", \"True\"], [\"false\", \"False\"]]}},\n                    src_port                     : { type: PropertyType.Int, min: 0, max: 65535 },\n                    dst_port                     : { type: PropertyType.Int, min: 0, max: 65535 },\n                    protocols                    : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    src_byte_count               : { type: PropertyType.Int, min: 0 },\n                    dst_byte_count               : { type: PropertyType.Int, min: 0 },\n                    src_packets                  : { type: PropertyType.Int, min: 0 },\n                    dst_packets                  : { type: PropertyType.Int, min: 0 },\n                    ipfix                        : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"process\",\n                namespace: \"stix_observable.process\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    is_hidden                    : { type: PropertyType.Enum,\n                        options: {\n                           type: PropertyType.List,\n                           form: { type:PropertyType.String },\n                           value: [[\"true\", \"True\"], [\"false\", \"False\"]]}},\n                    pid                          : { type: PropertyType.Int, min: 0 },\n                    created_time                 : { type: PropertyType.Date },\n                    cwd                          : { type: PropertyType.String },\n                    command_line                 : { type: PropertyType.String, is_required: true },\n                    environment_variables        : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"software\",\n                namespace: \"stix_observable.software\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    cpe                          : { type: PropertyType.String },\n                    languages                    : { type: PropertyType.List, form: {type: PropertyType.String}},\n                    vendor                       : { type: PropertyType.String },\n                    version                      : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"url\",\n                namespace: \"stix_observable.url\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"user_account\",\n                namespace: \"stix_observable.user_account\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    user_id                      : { type: PropertyType.String },\n                    credential                   : { type: PropertyType.String },\n                    account_login                : { type: PropertyType.String },\n                    account_type                 : { type: PropertyType.String },\n                    display_name                 : { type: PropertyType.String, is_primary: true, is_required: true },\n                    is_service_account           : { type: PropertyType.Enum,\n                                                     options: {\n                                                        type: PropertyType.List,\n                                                        form: { type:PropertyType.String },\n                                                        value: [[\"true\", \"True\"], [\"false\", \"False\"]]}},\n                    is_privileged                : { type: PropertyType.Enum,\n                                                     options: {\n                                                        type: PropertyType.List,\n                                                        form: { type:PropertyType.String },\n                                                        value: [[\"true\", \"True\"], [\"false\", \"False\"]]}},\n                    can_escalate_privs           : { type: PropertyType.Enum,\n                                                     options: {\n                                                        type: PropertyType.List,\n                                                        form: { type:PropertyType.String },\n                                                        value: [[\"true\", \"True\"], [\"false\", \"False\"]]}},\n                    is_disabled                  : { type: PropertyType.Enum,\n                                                     options: {\n                                                        type: PropertyType.List,\n                                                        form: { type:PropertyType.String },\n                                                        value: [[\"true\", \"True\"], [\"false\", \"False\"]]}},\n                    account_created              : { type: PropertyType.Date },\n                    account_expires              : { type: PropertyType.Date },\n                    credential_last_changed      : { type: PropertyType.Date },\n                    account_first_login          : { type: PropertyType.Date },\n                    account_last_login           : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"windows_registry_key\",\n                namespace: \"stix_observable.windows_registry_key\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    key                          : { type: PropertyType.String, is_primary: true },\n                    values                       : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    modified_time                : { type: PropertyType.Date },\n                    number_of_subkeys            : { type: PropertyType.Int, min: 0 },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"x509_certificate\",\n                namespace: \"stix_observable.x509_certificate\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    subject                      : { type: PropertyType.String, is_primary: true, is_required: true },\n                    is_self_signed               : { type: PropertyType.Enum,\n                        options: {\n                           type: PropertyType.List,\n                           form: { type:PropertyType.String },\n                           value: [[\"true\", \"True\"], [\"false\", \"False\"]]}},\n                    hashes                       : { type: PropertyType.String },\n                    version                      : { type: PropertyType.String },\n                    serial_number                : { type: PropertyType.String },\n                    signature_algorithm          : { type: PropertyType.String },\n                    issuer                       : { type: PropertyType.String },\n                    validity_not_before          : { type: PropertyType.Date },\n                    validity_not_after           : { type: PropertyType.Date },\n                    subject_public_key_algorithm : { type: PropertyType.String },\n                    subject_public_key_modulus   : { type: PropertyType.String },\n                    subject_public_key_exponent  : { type: PropertyType.Int, min: 0 },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            }\n        ]\n    },\n    menus: {\n        help_menu: {\n            help_links: [\n                {\n                    text: \"Attack Flow Website\",\n                    url: \"https://center-for-threat-informed-defense.github.io/attack-flow/\"\n                },\n                {\n                    text: \"Attack Flow Builder Help\",\n                    url: \"https://center-for-threat-informed-defense.github.io/attack-flow/builder/\"\n                },\n                {\n                    text: \"MITRE ATT&CK Framework\",\n                    url: \"https://attack.mitre.org/\"\n                },\n                {\n                    text: \"GitHub Repository\",\n                    url: \"https://github.com/center-for-threat-informed-defense/attack-flow\"\n                },\n                {\n                    text: \"Change Log\",\n                    url: \"https://center-for-threat-informed-defense.github.io/attack-flow/builder/\"\n                }\n            ]\n        }\n    },\n    validator,\n    publisher\n};\n\nexport default config;\n","import { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport abstract class AppCommand  {\n\n    /**\n     * The application context.\n     */\n    protected _context: ApplicationStore;\n\n\n    /**\n     * Creates a new {@link AppCommand}.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        this._context = context;\n    }\n\n\n    /**\n     * Executes an application command.\n     */\n    public abstract execute(): void;\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class CopySelectedChildren extends AppCommand {\n\n    /**\n     * The objects to add to the clipboard.\n     */\n    private _objects: DiagramObjectModel[];\n\n\n    /**\n     * Copies an object's selected children to the application's clipboard.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super(context);\n        // Get selected children\n        let objects = object.children.filter(c => c.isSelected());\n        // Clone selection\n        let o = context.settings.edit.clone_offset;\n        let clones = object.factory.cloneObjects(...objects);\n        for(let obj of clones) {\n            obj.moveBy(o[0], o[1]);\n        }\n        this._objects = clones;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._context.clipboard = this._objects;\n    }\n\n}\n","export class Browser {\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Download Files  ////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Petereport Save method\n     */\n    private static _aLink = document.createElement(\"a\");\n\n\n    public static downloadTextPetereport(filename: string, text: string, ext = \"txt\", canvas: HTMLCanvasElement) {\n\n        const div_report_pk = document.querySelector('#report_pk') as HTMLElement;\n        const report_pk = div_report_pk.getAttribute('value');\n\n        const div_finding_pk = document.querySelector('#finding_pk') as HTMLElement;\n        const finding_pk = div_finding_pk.getAttribute('value');\n\n        const div_csrf_token = document.querySelector('#csrf_token') as HTMLElement;\n        const csrf_token: string  = div_csrf_token.getAttribute('value') as string;\n\n        const div_attackflow_pk = document.querySelector('#attackflow_pk') as HTMLElement;\n        let attackflow_pk: string  = div_attackflow_pk.getAttribute('value') as string;\n\n\n        // Convert canvas to dataURL and log to console\n        const atttack_flow_image = canvas.toDataURL();\n\n        if (attackflow_pk == \"None\") {\n            const requestOptions = {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\", \"X-CSRFToken\": csrf_token},\n                body: JSON.stringify({title: filename, extension: ext, afb_content: text, afb_image: atttack_flow_image})\n            };\n\n            fetch(\"/en/attackflow/add_afb/\" + report_pk + \"/\" + finding_pk, requestOptions)\n                .then(async response => {\n                  const data = await response.json();\n\n                  // check for error response\n                  if (response.ok) {\n                    window.location.href = '/report/attackflow/' + report_pk\n                  }\n\n                })\n                .catch(error => {\n                  console.error(\"There was an error!\", error);\n                });\n        }\n        else {\n            const requestOptions = {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\", \"X-CSRFToken\": csrf_token},\n                body: JSON.stringify({title: filename, extension: ext, afb_content: text, afb_image: atttack_flow_image})\n            };\n\n            //console.log(requestOptions);\n            fetch(\"/en/attackflow/edit_afb/\" + attackflow_pk, requestOptions)\n                .then(async response => {\n                  const data = await response.json();\n\n                  // check for error response\n                  if (response.ok) {\n                    window.location.href = '/report/attackflow/' + report_pk\n                  }\n\n                })\n                .catch(error => {\n                  console.error(\"There was an error!\", error);\n                });\n        }\n\n        \n\n    }\n\n\n    /**\n     * Downloads a text file.\n     * @param filename\n     *  The text file's name.\n     * @param text\n     *  The text file's contents.\n     * @param ext\n     *  The text file's extension.\n     *  (Default: 'txt')\n     */\n    public static downloadTextFile(filename: string, text: string, ext = \"txt\") {\n        let blob = new Blob([text], { type: \"octet/stream\" });\n        let url = window.URL.createObjectURL(blob);\n        this._aLink.href = url;\n        this._aLink.download = `${ filename }.${ ext }`;\n        this._aLink.click();\n        window.URL.revokeObjectURL(url);\n    }\n\n    /**\n     * Downloads an image file.\n     * @param filename\n     *  The image file's name.\n     * @param canvas\n     *  The image file's contents.\n     */\n    public static downloadImageFile(filename: string, canvas: HTMLCanvasElement) {\n        canvas.toBlob(blob => {\n            if(!blob)\n                return;\n            let url = window.URL.createObjectURL(blob);\n            this._aLink.href = url;\n            this._aLink.download = `${ filename }.png`\n            this._aLink.click();\n            window.URL.revokeObjectURL(url);\n        }, \"image/octet-stream\")\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. File Selection Dialogs  ////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n    \n    /**\n     * Prompts the user to select a text file from their file system.\n     * @returns\n     *  A Promise that resolves with the chosen text file.\n     */\n    public static openTextFileDialog(): Promise<TextFile> {\n            \n        // Create file input\n        let fileInput = document.createElement(\"input\");\n        fileInput.type = \"file\";\n        \n        // Configure file input\n        let result = new Promise<TextFile>((resolve) => {\n            fileInput.addEventListener(\"change\", (event) => {\n                let file = (event.target as any).files[0];\n                let reader = new FileReader();\n                reader.onload = (e: ProgressEvent<FileReader>) => {\n                    resolve({\n                        filename: file.name,\n                        contents: e.target?.result\n                    });\n                }\n                reader.readAsText(file);\n            });\n        });\n        \n        // Click file input\n        fileInput.click();\n        \n        // Return result\n        return result;\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Browser Window Control  ////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Opens an element in fullscreen.\n     * @param el\n     *  The element to fullscreen.\n     *  (Default: `document.body`)\n     */\n    public static fullscreen(el: HTMLElement = document.body) {\n        let cast = el as any;\n        if (cast.requestFullscreen) {\n            cast.requestFullscreen();\n        } else if (cast.webkitRequestFullscreen) {\n            // Safari\n            cast.webkitRequestFullscreen();\n        } else if (cast.msRequestFullscreen) {\n            // IE11\n            cast.msRequestFullscreen();\n        }\n    }\n    \n    \n}\n\n\n///////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n\ntype TextFile = {\n    filename: string,\n    contents: string | ArrayBuffer | null | undefined\n}\n","import pkg from \"~/package.json\";\nimport Configuration from \"@/assets/builder.config\";\nimport { PageCommand } from \"./Commands/PageCommand\";\nimport { markRaw, ref, Ref } from \"vue\";\nimport {\n    DiagramValidator,\n    ValidationErrorResult,\n    ValidationWarningResult\n} from \"@/assets/scripts/DiagramValidator\";\nimport { \n    BlockDiagramSchema,\n    CameraLocation,\n    DiagramFactory,\n    DiagramObjectExport,\n    DiagramObjectModel,\n    PageModel\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class PageEditor {\n\n    /**\n     * The page's id.\n     */\n    public id: string;\n\n    /**\n     * The page.\n     */\n    public page: PageModel;\n\n    /**\n     * The editor's update trigger.\n     */\n    public trigger: Ref<number>;\n    \n    /**\n     * The editor's front-end view parameters.\n     */\n    public view: EditorViewParameters;\n\n    /**\n     * The editor's pointer location.\n     */\n    public pointer: Ref<PointerLocation>;\n\n    /**\n     * The editor's camera location.\n     */\n    public location: Ref<CameraLocation>;\n\n    /**\n     * The editor's undo stack.\n     */\n    private _undoStack: PageCommand[];\n\n    /**\n     * The editor's redo stack.\n     */\n    private _redoStack: PageCommand[];\n\n    /**\n     * The editor's page validator.\n     */\n    private _validator: DiagramValidator | undefined;\n\n\n    /**\n     * Creates a new {@link PageEditor}.\n     * @param page\n     *  The page to manage.\n     */\n    private constructor(page: PageModel);\n\n    /**\n     * Creates a new {@link PageEditor}.\n     * @param page\n     *  The page to manage.\n     * @param location\n     *  The editor's camera location.\n     */\n    private constructor(page: PageModel, location: CameraLocation);\n    private constructor(page: PageModel, location?: CameraLocation) {\n        this.id = page.id;\n        this.page = page;\n        this.trigger = ref(0);\n        this.view = { x: 0, y:0, k: 1, w: 0, h: 0 };\n        this.pointer = ref({ x: 0, y: 0 });\n        this.location = ref(location ?? { x: 0, y: 0, k: 1 });\n        this._undoStack = [];\n        this._redoStack = [];\n        if(Configuration.validator) {\n            this._validator = new Configuration.validator();\n            this._validator.run(page);\n        }\n    }\n    \n\n    /**\n     * Returns a dummy {@link PageEditor}.\n     * @returns\n     *  A dummy {@link PageEditor}.\n     */\n    public static createDummy(): PageEditor {\n        return markRaw(new this(PageModel.createDummy()));\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Command Execution  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Executes a page command.\n     * @param command\n     *  The command.\n     */\n    public execute(command: PageCommand) {\n        if(command.page !== this.page.id) {\n            throw new Error(\n                \"Command is not configured to operate on this page.\"\n            );\n        }\n        if(command.execute()) {\n            this._redoStack = [];\n            this._undoStack.push(command);\n        }\n        this._validator?.run(this.page);\n        this.trigger.value++;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Page History  //////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Undoes the last page command.\n     */\n    public undo() {\n        if(this._undoStack.length) {\n            this._undoStack.at(-1)!.undo();\n            this._redoStack.push(this._undoStack.pop()!);\n        }\n    }\n\n    /**\n     * Tests if the last command can be undone.\n     * @returns\n     *  True if the last command can be undone, false otherwise.\n     */\n    public canUndo(): boolean {\n        return 0 < this._undoStack.length;\n    }\n\n    /**\n     * Redoes the last undone page command.\n     */\n    public redo() {\n        if(this._redoStack.length) {\n            this._redoStack.at(-1)!.execute();\n            this._undoStack.push(this._redoStack.pop()!);\n        }\n    }\n\n    /**\n     * Tests if the last undone action can be redone.\n     * @returns\n     *  True if the last undone action can be redone, false otherwise.\n     */\n    public canRedo(): boolean {\n        return 0 < this._redoStack.length;\n    }   \n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Page Validation  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Tests if the page represents a valid diagram per the configured\n     * validator. If the application is not configured with a validator, `true`\n     * is returned by default.\n     * @returns\n     *  True if the page is valid, false otherwise.\n     */\n    public isValid() {\n        return this._validator?.inValidState() ?? true;\n    }\n\n    /**\n     * Returns the page's validation errors per the configured validator.\n     * @returns\n     *  The page's validation errors.\n     */\n    public getValidationErrors(): ValidationErrorResult[] {\n        return this._validator?.getErrors() ?? [];\n    }\n\n    /**\n     * Returns the page's validation warnings per the configured validator.\n     * @returns\n     *  The page's validation errors.\n     */\n    public getValidationWarnings(): ValidationWarningResult[] {\n        return this._validator?.getWarnings() ?? [];\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Page Import & Export  //////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Creates a new page.\n     * @param schema\n     *  The page's internal schema.\n     * @returns\n     *  The page's editor.\n     */\n    public static async createNew(schema: BlockDiagramSchema): Promise<PageEditor> {\n        let factory = await DiagramFactory.create(schema);\n        let page = factory.createObject(schema.page_template) as PageModel;\n        return markRaw(new PageEditor(page));\n    }\n\n    /**\n     * Deserializes a page export.\n     * @param file\n     *  The page export.\n     * @returns\n     *  The page's editor.\n     */\n    public static async fromFile(file: string): Promise<PageEditor> {\n        \n        // Parse document\n        let page = JSON.parse(file) as PageExport;\n\n        // Initialize diagram factory\n        let factory = await DiagramFactory.create(page.schema);\n        \n        // Compile export index\n        let index = new Map<string, DiagramObjectExport>();\n        for(let obj of page.objects) {\n            index.set(obj.id, obj);\n        }\n\n        // Initialize page model\n        let pageExp = index.get(page.id)!\n        let pageObj = (function deserialize(\n            exp: DiagramObjectExport,\n            expIndex: Map<string, DiagramObjectExport>,\n            objIndex: Map<string, DiagramObjectModel>,\n            factory: DiagramFactory\n        ): DiagramObjectModel {\n\n            // Create object\n            if(!objIndex.has(exp.id)) {\n                let children: DiagramObjectModel[] = []\n                for(let id of exp.children) {\n                    children.push(deserialize(\n                        index.get(id)!,\n                        expIndex,\n                        objIndex,\n                        factory\n                    ));\n                }\n                let obj = factory.createObject({ ...exp, children });\n                objIndex.set(obj.id, obj);\n            }\n            \n            // Return object\n            return objIndex.get(exp.id)!;\n\n        })(pageExp, index, new Map(), factory) as PageModel;\n\n        // Recalculate layout\n        pageObj.recalculateLayout();\n\n        // Return editor\n        return markRaw(new PageEditor(pageObj, page.location));\n\n    }\n\n    /**\n     * Exports the page as a text file.\n     * @returns\n     *  The serialized page.\n     */\n    public toFile(): string {\n        // Calculate camera location\n        let v = this.view;\n        let location = {\n            x: ((v.w / 2) - v.x) / v.k,\n            y: ((v.h / 2) - v.y) / v.k,\n            k: v.k\n        }\n        // Compile export\n        let doc: PageExport = {\n            version: pkg.version,\n            id: this.page.id,\n            schema: this.page.factory.getSchema(),\n            objects: [...this.page.getSubtree()].map(o => o.toExport()),\n            location: location\n        }\n        return JSON.stringify(doc);\n    }\n\n    /**\n     * TODO:\n     * In the future, a document will bundle multiple pages together. One or\n     * more pages can be exported into a document bundle and multiple document\n     * bundles can be imported at once. Documents \"unwrap\" and dump their pages\n     * into the application. Documents contain no information other than the\n     * pages.  \n     */\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Editor View Parameters  ///////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type EditorViewParameters = {\n\n    /**\n     * The editor view's left x-coordinate.\n     */\n    x: number\n\n    /**\n     * The editor view's top y-coordinate.\n     */\n    y: number\n\n    /**\n     * The editor view's scale.\n     */\n    k: number\n\n    /**\n     * The editor view's width.\n     */\n    w: number\n\n    /**\n     * The editor view's height.\n     */\n    h: number\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype PointerLocation = {\n\n    /**\n     * The pointer's x coordinate.\n     */\n    x: number,\n\n    /**\n     * The pointer's y coordinate.\n     */\n    y: number\n\n}\n\ntype PageExport = {\n\n    /**\n     * The application's version number.\n     */\n    version: string\n    \n    /**\n     * The page's id.\n     */\n    id: string\n\n    /**\n     * The page's internal schema.\n     */\n    schema: BlockDiagramSchema\n\n    /**\n     * The page's diagram objects.\n     */\n    objects: DiagramObjectExport[]\n\n    /**\n     * The page's camera location.\n     */\n    location: CameraLocation\n\n}\n","import Configuration from \"@/assets/builder.config\";\nimport { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class LoadFile extends AppCommand {\n\n    /**\n     * The page editor to load.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Loads a page editor into the application.\n     * @param context\n     *  The application context.\n     * @param file\n     *  The page editor to load.\n     */\n    constructor(context: ApplicationStore, file: PageEditor) {\n        super(context);\n        this._editor = file;\n    }\n\n\n    /**\n     * Loads an empty page file into the application.\n     * @param context\n     *  The application context.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromNew(context: ApplicationStore): Promise<LoadFile> {\n        let schema = structuredClone(Configuration.schema);\n        let page = await PageEditor.createNew(schema);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Loads a page export into the application.\n     * @param context\n     *  The application context.\n     * @param file\n     *  The page export.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromFile(context: ApplicationStore, file: string): Promise<LoadFile> {\n        let page = await PageEditor.fromFile(file);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Loads a page file from the file system, into the application.\n     * @param context\n     *  The application context.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromFileSystem(context: ApplicationStore): Promise<LoadFile> {\n        let file = (await Browser.openTextFileDialog()).contents as string;\n        let page = await PageEditor.fromFile(file);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Loads a page file from a remote url, into the application.\n     * @param context\n     *  The application context.\n     * @param url\n     *  The remote url.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromUrl(context: ApplicationStore, url: string): Promise<LoadFile> {\n        let file = await (await fetch(url, { credentials: \"omit\" })).text();\n        let page = await PageEditor.fromFile(file);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        // NOTE: For now, only one page will be loaded at a time.\n        this._context.pages.clear();\n        this._context.pages.set(this._editor.id, this._editor);\n        this._context.activePage = this._editor;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore, AppSettings } from \"@/store/StoreTypes\";\n\nexport class LoadSettings extends AppCommand {\n\n    /**\n     * The application's settings.\n     */\n    private _settings: AppSettings;\n\n\n    /**\n     * Configures the application's settings.\n     * @param context\n     *  The application context.\n     * @param settings\n     *  The application's settings.\n     */\n    constructor(context: ApplicationStore, settings: AppSettings) {\n        super(context);\n        this._settings = settings;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._context.settings = this._settings; \n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class OpenHyperlink extends AppCommand {\n\n    /**\n     * The hyperlink's url.\n     */\n    private _url: string;\n\n\n    /**\n     * Opens an external hyperlink.\n     * @param context\n     *  The application context.\n     * @param url\n     *  The hyperlink's url.\n     */\n    constructor(context: ApplicationStore, url: string) {\n        super(context);\n        this._url = url;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        window.open(this._url, \"_blank\");\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class PublishPageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Publishes a page to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else if(!editor.isValid()) {\n            throw new Error(`Page '${ id }' is not valid.`);\n        } else if(!this._context.publisher) {\n            throw new Error(`App is not configured with a publisher.`);\n        } else {\n            this._editor = editor;\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        Browser.downloadTextFile(\n            this._editor.page.props.toString(),\n            this._context.publisher!.publish(this._editor.page),\n            \"json\"\n        );\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageImage } from \"@/assets/scripts/BlockDiagram/PageImage\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class SavePageImageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Saves a page as an image to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let d = this._context.settings.view.diagram;         \n        let e = this._context.settings.file.image_export;\n        let image = new PageImage(\n            this._editor.page,\n            e.padding,\n            d.display_grid,\n            d.display_shadows,\n            d.display_debug_mode\n        );\n        Browser.downloadImageFile(\n            this._editor.page.props.toString(),\n            image.capture()\n        );\n    }\n\n}\n","import Configuration from \"@/assets/builder.config\";\nimport { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageEditor } from \"@/store/PageEditor\";\n// PETEREPORT add\nimport { PageImage } from \"@/assets/scripts/BlockDiagram/PageImage\";\n// PETEREPORT add\n\n\nexport class SavePageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Saves a page to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        Browser.downloadTextFile(\n            this._editor.page.props.toString(),\n            this._editor.toFile(),\n            Configuration.file_type_extension\n        );\n    }\n\n}\n\n\n\nexport class SavePageToDevicePetereport extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Saves a page to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let d = this._context.settings.view.diagram;         \n        let e = this._context.settings.file.image_export;\n        let image = new PageImage(\n            this._editor.page,\n            e.padding,\n            d.display_grid,\n            d.display_shadows,\n            d.display_debug_mode\n        );\n        Browser.downloadTextPetereport(\n            this._editor.page.props.toString(),\n            this._editor.toFile(),\n            Configuration.file_type_extension,\n            image.capture()\n        );\n    }\n\n}\n\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageImage } from \"@/assets/scripts/BlockDiagram/PageImage\";\nimport { PageEditor } from \"@/store/PageEditor\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SaveSelectionImageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The objects to capture. \n     */\n    private _objects: DiagramObjectModel[]\n\n\n    /**\n     * Saves a page's selection as an image to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n        this._objects = [...editor.page.getSubtree(o => o.isSelected())];\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let d = this._context.settings.view.diagram;         \n        let e = this._context.settings.file.image_export;\n        let image = new PageImage(\n            this._editor.page,\n            e.padding,\n            d.display_grid,\n            d.display_shadows,\n            d.display_debug_mode\n        );\n        Browser.downloadImageFile(\n            this._editor.page.props.toString(),\n            image.capture(this._objects)\n        );\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class SetEditorPointerLocation extends AppCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The pointer's x location.\n     */\n    private _x: number;\n\n    /**\n     * The pointer's y location.\n     */\n    private _y: number; \n\n\n    /**\n     * Sets a page editor's pointer location.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     * @param x\n     *  The pointer's x location.\n     * @param y\n     *  The pointer's y location.\n     */\n    constructor(context: ApplicationStore, id: string, x: number, y: number) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n        this._x = x;\n        this._y = y;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._editor.pointer.value = { x: this._x, y: this._y };\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { EditorViewParameters, PageEditor } from \"@/store/PageEditor\";\n\nexport class SetEditorViewParams extends AppCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The new front-end view parameters.\n     */\n    private _params: EditorViewParameters;\n\n\n    /**\n     * Sets a page editor's front-end view parameters.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     * @param params\n     *  The new front-end view parameters.\n     */\n    constructor(context: ApplicationStore, id: string, params: EditorViewParameters) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n        this._params = params;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._editor.view = this._params;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class SetRenderQuality extends AppCommand {\n\n    /**\n     * If the render quality should be high (true) or low (false).\n     */\n    private _highQuality: boolean;\n\n\n    /**\n     * Sets the diagram's render quality.\n     * @param context\n     *  The application context.\n     * @param highQuality\n     *  If the render quality should be high (true) or low (false).\n     */\n    constructor(context: ApplicationStore, highQuality: boolean) {\n        super(context);\n        this._highQuality = highQuality;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.render_high_quality = this._highQuality;\n    }\n\n}\n","import { ApplicationStore } from \"@/store/StoreTypes\";\nimport { AppCommand } from \"../AppCommand\";\n\nexport class SwitchToFullscreen extends AppCommand {\n\n    /**\n     * Switches the application to fullscreen mode.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let cast = document.body as any;\n        if (cast.requestFullscreen) {\n            cast.requestFullscreen();\n        } else if (cast.webkitRequestFullscreen) {\n            // Safari\n            cast.webkitRequestFullscreen();\n        } else if (cast.msRequestFullscreen) {\n            // IE11\n            cast.msRequestFullscreen();\n        }\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class ToggleDebugDisplay extends AppCommand {\n\n    /**\n     * Toggles the diagram's debug display.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.display_debug_mode = !diagram.display_debug_mode;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class ToggleGridDisplay extends AppCommand {\n\n    /**\n     * Toggle's the diagram's grid display.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.display_grid = !diagram.display_grid;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class ToggleShadowDisplay extends AppCommand {\n\n    /**\n     * Toggle's the diagram's shadow display.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.display_shadows = !diagram.display_shadows;\n    }\n\n}\n","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-19c6f860\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"logo\" }, \"AFB Petereport\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TitleBar = _resolveComponent(\"TitleBar\")!\n\n  return (_openBlock(), _createBlock(_component_TitleBar, {\n    class: \"app-title-bar-element\",\n    menus: _ctx.menus,\n    onSelect: _ctx.onItemSelect\n  }, {\n    icon: _withCtx(() => [\n      _hoisted_1\n    ]),\n    _: 1\n  }, 8, [\"menus\", \"onSelect\"]))\n}","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-63eba18e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"icon\" }\nconst _hoisted_2 = [\"onMouseenter\", \"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    class: \"title-bar-control\",\n    onUnfocus: _ctx.menuClose\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"li\", _hoisted_1, [\n        _renderSlot(_ctx.$slots, \"icon\", {}, undefined, true)\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.menus, (menu) => {\n        return (_openBlock(), _createElementBlock(\"li\", {\n          key: menu.text,\n          class: _normalizeClass({ focused: menu.text === _ctx.focusedMenu }),\n          onMouseenter: ($event: any) => (_ctx.menuEnter(menu.text)),\n          onClick: ($event: any) => (_ctx.menuOpen(menu.text))\n        }, [\n          _createElementVNode(\"p\", null, _toDisplayString(menu.text), 1),\n          (menu.text === _ctx.focusedMenu)\n            ? (_openBlock(), _createBlock(_component_ContextMenuListing, {\n                key: 0,\n                class: \"menu-listing\",\n                sections: menu.sections,\n                onSelect: _ctx.menuSelect,\n                onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n              }, null, 8, [\"sections\", \"onSelect\"]))\n            : _createCommentVNode(\"\", true)\n        ], 42, _hoisted_2))\n      }), 128))\n    ]),\n    _: 3\n  }, 8, [\"onUnfocus\"]))\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-03d00514\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onMouseenter\"]\nconst _hoisted_2 = { class: \"item\" }\nconst _hoisted_3 = { class: \"text\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"more-arrow\" }, null, -1))\nconst _hoisted_5 = {\n  key: 0,\n  class: \"submenu\"\n}\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = [\"href\"]\nconst _hoisted_8 = { class: \"check\" }\nconst _hoisted_9 = { class: \"text\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"shortcut\"\n}\nconst _hoisted_11 = {\n  key: 0,\n  class: \"section-divider\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\", true)!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"context-menu-listing-control\",\n    style: _normalizeStyle(_ctx.offset),\n    onContextmenu: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sections, (section, i) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"section\",\n        key: section.id\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section.items, (item) => {\n          return (_openBlock(), _createElementBlock(_Fragment, {\n            key: item.text\n          }, [\n            (item.type === _ctx.MenuType.Submenu)\n              ? (_openBlock(), _createElementBlock(\"li\", {\n                  key: 0,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onMouseenter: ($event: any) => (_ctx.submenuEnter(item)),\n                  onMouseleave: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.submenuLeave && _ctx.submenuLeave(...args)))\n                }, [\n                  _createElementVNode(\"a\", _hoisted_2, [\n                    _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item.text), 1),\n                    _hoisted_4\n                  ]),\n                  (item.text === _ctx.focusedSubMenu)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                        _createVNode(_component_ContextMenuListing, {\n                          sections: item.sections,\n                          onSelect: _ctx.onChildItemSelect\n                        }, null, 8, [\"sections\", \"onSelect\"])\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ], 42, _hoisted_1))\n              : (_openBlock(), _createElementBlock(\"li\", {\n                  key: 1,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onClick: ($event: any) => (_ctx.onItemClick(item))\n                }, [\n                  _createElementVNode(\"a\", {\n                    class: \"item\",\n                    href: item.disabled ? null : item.link,\n                    target: \"_blank\"\n                  }, [\n                    _withDirectives(_createElementVNode(\"span\", _hoisted_8, \"✓\", 512), [\n                      [_vShow, item.value]\n                    ]),\n                    _createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.text), 1),\n                    (item.shortcut)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(_ctx.formatShortcut(item.shortcut)), 1))\n                      : _createCommentVNode(\"\", true)\n                  ], 8, _hoisted_7)\n                ], 10, _hoisted_6))\n          ], 64))\n        }), 128)),\n        (i < _ctx.sections.length - 1)\n          ? (_openBlock(), _createElementBlock(\"a\", _hoisted_11))\n          : _createCommentVNode(\"\", true)\n      ]))\n    }), 128))\n  ], 36))\n}","///////////////////////////////////////////////////////////////////////////////\n//  1. Context Menu  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport enum MenuType {\n    Item    = 0,\n    Toggle  = 1,\n    Submenu = 2\n}\n\nexport type ContextMenu\n    = ContextMenuItem\n    | ContextMenuToggleItem\n    | ContextMenuSubmenu;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Generic Context Menu  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ninterface ContextMenuBase<T> {\n    type: T\n    text: string\n    disabled?: boolean\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Context Menu Section  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport interface ContextMenuSection {\n    id: string,\n    items: ContextMenu[]\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Context Menu Types  ////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport interface ContextMenuItem extends ContextMenuBase<MenuType.Item> {\n    data: any\n    shortcut?: string,\n    keepMenuOpenOnSelect?: boolean\n}\n\nexport interface ContextMenuToggleItem extends ContextMenuBase<MenuType.Toggle> {\n    data: any\n    value: boolean,\n    shortcut?: string,\n    keepMenuOpenOnSelect?: boolean\n}\n\nexport interface ContextMenuSubmenu extends ContextMenuBase<MenuType.Submenu> {\n    sections : ContextMenuSection[]\n}\n","\nimport { defineComponent, PropType } from 'vue';\nimport { ContextMenu, ContextMenuItem, ContextMenuSection, MenuType } from \"@/assets/scripts/ContextMenuTypes\";\n\nconst KeyToText: { [key: string]: string } = {\n  Control    : \"Ctrl\",\n  Escape     : \"Esc\",\n  ArrowLeft  : \"←\",\n  ArrowUp    : \"↑\",\n  ArrowRight : \"→\",\n  ArrowDown  : \"↓\",\n  Delete     : \"Del\"\n}\n\nexport default defineComponent({\n  name: 'ContextMenuListing',\n  props: {\n    sections: {\n      type: Array as PropType<ContextMenuSection[]>,\n      required: true\n    },\n    forceInsideWindow: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      xOffset: 0,\n      yOffset: 0,\n      leaveTimeout: 500,\n      leaveTimeoutId: 0,\n      focusedSubMenu: null as string | null,\n      MenuType\n    }\n  },\n  computed: {\n\n    /**\n     * Returns the ContextMenuListing's offset styling.\n     * @returns\n     *  The ContextMenuListing's offset styling.\n     */\n    offset(): { marginTop: string, marginLeft: string } {\n      return {\n        marginTop: `${ this.yOffset }px`,\n        marginLeft: `${ this.xOffset }px`\n      }\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Submenu mouse enter behavior.\n     * @param item\n     *  The hovered submenu item.\n     */\n    submenuEnter(item: ContextMenu) {\n      clearTimeout(this.leaveTimeoutId);\n      if(!item.disabled) {\n        this.focusedSubMenu = item.text;\n      }\n    },\n\n    /**\n     * Submenu mouse leave behavior.\n     */\n    submenuLeave() {\n      this.leaveTimeoutId = setTimeout(() => {\n        this.focusedSubMenu = null;\n      }, this.leaveTimeout)\n    },\n\n    /**\n     * Menu item selection behavior.\n     * @param item\n     *  The selected menu item.\n     */\n    onItemClick(item: ContextMenuItem) {\n      if(item.disabled)\n        return;\n      this.$emit(\"select\", item.data, !item.keepMenuOpenOnSelect);\n    },\n\n    /**\n     * Submenu item selection behavior.\n     * @param data\n     *  The menu item's data.\n     * @param closeSubmenu\n     *  If the active submenu should close.\n     */\n    onChildItemSelect(data: any, closeSubmenu: boolean) {\n      this.$emit(\"select\", data, closeSubmenu);\n      if(closeSubmenu) {\n        this.focusedSubMenu = null;\n      }\n    },\n\n    /**\n     * Formats a keyboard shortcut.\n     * @param shortcut\n     *  The keyboard shortcut to format.\n     * @returns\n     *  The formatted keyboard shortcut.\n     */\n    formatShortcut(shortcut?: string): string | undefined {\n      if(!shortcut) {\n        return shortcut;\n      } else {\n        return shortcut\n          .split(\"+\")\n          .map(c => c in KeyToText ? KeyToText[c] : c)\n          .join(\"+\");\n      }\n    }\n\n  },\n  emits: [\"select\"],\n  mounted() {\n    if(!this.forceInsideWindow) return;\n    // Offset submenu if outside of viewport\n    let viewWidth  = window.innerWidth;\n    let viewHeight = window.innerHeight;\n    let { top, left, bottom, right } = this.$el.getBoundingClientRect();\n    this.xOffset = right > viewWidth ? -Math.min(left, right - viewWidth) : 0;\n    this.yOffset = bottom > viewHeight ? -Math.min(top, bottom - viewHeight) : 0;\n  }\n});\n","import { render } from \"./ContextMenuListing.vue?vue&type=template&id=03d00514&scoped=true&ts=true\"\nimport script from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenuListing.vue?vue&type=style&index=0&id=03d00514&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-03d00514\"]])\n\nexport default __exports__","\n// Dependencies\nimport { defineComponent, PropType } from 'vue';\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\n// Components\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\n\nexport default defineComponent({\n  name: 'TitleBar',\n  props: {\n    menus: {\n      type: Array as PropType<ContextMenu[]>,\n      default: []\n    }\n  },\n  data() {\n    return {\n      focusedMenu: null as string | null\n    }\n  },\n  emits: [\"select\"],\n  methods: {\n    \n    /**\n     * Menu selection behavior.\n     * @param id\n     *  The id of the selected menu.\n     */\n    menuOpen(id: string) {\n      this.focusedMenu = id;\n    },\n\n    /**\n     * Menu mouse enter behavior.\n     * @param id\n     *  The id of the hovered menu.\n     */\n    menuEnter(id: string) {\n      if(this.focusedMenu === null)\n        return;\n      this.focusedMenu = id;\n    },\n\n    /**\n     * Menu close behavior.\n     */\n    menuClose() {\n      this.focusedMenu = null;\n    },\n\n    /**\n     * Menu item selection behavior.\n     * @param data\n     *  The menu item's data.\n     * @param closeSubmenu\n     *  If the active menu should close.\n\n     */\n    menuSelect(data: any, closeMenu: boolean) {\n      this.$emit(\"select\", data);\n      if(closeMenu) this.focusedMenu = null;\n    }\n\n  },\n  components: { FocusBox, ContextMenuListing }\n});\n","import { render } from \"./TitleBar.vue?vue&type=template&id=63eba18e&scoped=true&ts=true\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./TitleBar.vue?vue&type=style&index=0&id=63eba18e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63eba18e\"]])\n\nexport default __exports__","\n// Dependencies\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\nimport { CommandEmitter } from \"@/store/Commands/Command\";\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapMutations } from \"vuex\";\n// Components\nimport TitleBar from \"@/components/Controls/TitleBar.vue\";\n\nexport default defineComponent({\n  name: \"AppTitleBar\",\n  computed: {\n\n    /**\n     * Context Menu Store data\n     */\n    ...mapGetters(\"ContextMenuStore\", [\n      \"fileMenu\",\n      \"editMenu\",\n      \"layoutMenu\",\n      \"viewMenu\",\n      \"helpMenu\"\n    ]),\n    \n    /**\n     * Returns the application's menus.\n     * @returns\n     *  The application's menus.\n     */\n    menus(): ContextMenu[] {\n      return [\n        this.fileMenu, \n        this.editMenu,\n        this.layoutMenu,\n        this.viewMenu,\n        this.helpMenu\n      ]\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store actions\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Menu item selection behavior.\n     * @param emitter\n     *  Menu item's command emitter.\n     */\n    async onItemSelect(emitter: CommandEmitter) {\n      try {\n        let cmd = emitter();\n        if(cmd instanceof Promise) {\n          this.execute(await cmd);\n        } else {\n          this.execute(cmd);\n        }\n      } catch(ex: any) {\n        console.error(ex);\n      }\n    }\n\n  },\n  components: { TitleBar }\n});\n","import { render } from \"./AppTitleBar.vue?vue&type=template&id=19c6f860&scoped=true&ts=true\"\nimport script from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppTitleBar.vue?vue&type=style&index=0&id=19c6f860&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19c6f860\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_HotkeyBox = _resolveComponent(\"HotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_HotkeyBox, {\n    class: \"app-hotkey-box-element\",\n    hotkeys: _ctx.hotkeys,\n    global: true,\n    onFire: _ctx.onHotkeyFired\n  }, {\n    default: _withCtx(() => [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _: 3\n  }, 8, [\"hotkeys\", \"onFire\"]))\n}","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e99f3da\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  class: \"hotkey-box-container\",\n  tabindex: \"0\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","///////////////////////////////////////////////////////////////////////////////\n//  1. HotkeyObserver  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class HotkeyObserver<T> {\n\n    /**\n     * The advance key state function, bound to the current object.\n     */\n    private _boundAdvanceKeyState: (e: KeyboardEvent) => void;\n\n     /**\n      * The reverse key state function, bound to the current object.\n      */\n    private _boundReverseKeyState: (e: KeyboardEvent) => void;\n\n    /**\n     * The function to call when a hotkey sequence is matched.\n     */\n    private _callback: (command: T) => void;\n    \n    /**\n     * The hotkey observer's call loop.\n     */\n    private _callLoop: number | undefined;\n\n    /**\n     * The DOM element the hotkey observer is watching.\n     */\n    private _container: HTMLElement | null;\n\n    /**\n     * The hotkey observer's hotkey-id-to-item map.\n     */\n    private _hotkeyIdMap: Map<string, Hotkey<T>>;\n\n    /**\n     * The current key state.\n     */\n    private _keyState: string;\n    \n    /**\n     * The amount of time (in milliseconds) a hotkey sequence needs to be held\n     * before its raised.\n     */\n    private _recognitionDelay: number;\n\n\n    /**\n     * Creates a new {@link HotkeyObserver}.\n     * @param callback\n     *  The function to call once a hotkey sequence is triggered.\n     * @param recognitionDelay\n     *  The time to wait (in milliseconds) before firing the hotkey callback.\n     */\n    constructor(callback: (command: T) => void, recognitionDelay: number) {\n        this._boundAdvanceKeyState = this.advanceKeyState.bind(this);\n        this._boundReverseKeyState = this.reverseKeyState.bind(this);\n        this._callback = callback;\n        this._callLoop = undefined;\n        this._container = null;\n        this._hotkeyIdMap = new Map();\n        this._keyState = \".\";\n        this._recognitionDelay = recognitionDelay;\n    }\n\n\n    /**\n     * Binds the HotkeyObserver to an HTML element.\n     * @param container\n     *  The HTML element to bind to.\n     */\n    public observe(container: HTMLElement) {\n        this._container = container;\n        this._container.addEventListener(\"keydown\", this._boundAdvanceKeyState);\n        this._container.addEventListener(\"keyup\", this._boundReverseKeyState);\n    }\n\n    /**\n     * Unbinds the HotkeyObserver from the HTML element.\n     */\n    public disconnect() {\n        this._container?.removeEventListener(\"keydown\", this._boundAdvanceKeyState);\n        this._container?.removeEventListener(\"keyup\", this._boundReverseKeyState);\n    }\n\n    /**\n     * Configures the hotkeys to listen for.\n     * @param keyMap\n     *  An array of hotkeys.\n     * @throws { OverlappingHotkeysError }\n     *  If any hotkey sequences overlap with each other.\n     */\n    public setHotkeys(keyMap: Hotkey<T>[]) {\n        this._hotkeyIdMap = new Map<string, Hotkey<T>>();\n        for (let item of keyMap) {\n            if (item.shortcut === \"\") continue;\n            // Derive hotkey id\n            let hotkeyId = this.keySequenceToHotKeyId(item.shortcut);\n            // Ensure hotkey id doesn't overlap with others \n            for (let id of this._hotkeyIdMap.keys()) {\n                if (id.startsWith(hotkeyId) || hotkeyId.startsWith(id)) {\n                    throw new OverlappingHotkeysError(\n                        `Overlapping key sequences ('${\n                            id\n                        }' and '${\n                            hotkeyId\n                        }') are not allowed.`\n                    );\n                }\n            }\n            // Add hotkey\n            this._hotkeyIdMap.set(hotkeyId, item);\n        }\n    }\n\n    /**\n     * Tests if a hotkey sequence is active.\n     * @param sequence\n     *  The hotkey sequence.\n     * @param strict\n     *  [true]\n     *   The active keys must match the provided hotkey sequence exactly.\n     *  [false]\n     *   The active keys only need to contain the provided hotkey sequence.\n     *  (Default: true)\n     * @returns\n     *  True if the provided hotkey sequence is active, false otherwise.\n     */\n    public isHotkeyActive(sequence: string, strict: boolean = true): boolean {\n        let id = this.keySequenceToHotKeyId(sequence);\n        return strict ? this._keyState === id : this._keyState.includes(id);\n    }\n\n    /**\n     * Adds a key event to the current key state.\n     * @param e\n     *  The keydown event.\n     */\n    private advanceKeyState(e: KeyboardEvent) {\n        let key = e.key.toLocaleLowerCase();\n        // Only acknowledge a key once\n        if (this._keyState.endsWith(`.${ key }.`))\n            return;\n        // Advanced current key state\n        clearTimeout(this._callLoop);\n        this._keyState += `${ key }.`\n        // If inside input field, ignore hotkeys\n        if((e.target as any).tagName === \"INPUT\")\n            return;\n        // Check key state\n        if (this._hotkeyIdMap.has(this._keyState)) {\n            let hotkey = this._hotkeyIdMap.get(this._keyState)!;\n            // Disable browser default behavior if not requested\n            if (!hotkey.allowBrowserBehavior)\n                e.preventDefault();\n            // Execute shortcut\n            this.triggerHotkey(hotkey);\n        } else {\n            // If no key matched, block browser behavior by default\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Removes a key event from the current key state. \n     * @param e\n     *  The keyup event.\n     */\n    private reverseKeyState(e: KeyboardEvent) {\n        clearTimeout(this._callLoop);\n        let key = e.key.toLocaleLowerCase();\n        this._keyState = this._keyState.replace(`.${ key }.`, \".\");\n    }\n\n    /**\n     * Triggers the provided hotkey.\n     * @param hotkey\n     *  The hotkey item to trigger.\n     */\n    private triggerHotkey(hotkey: Hotkey<T>) {\n        if (!hotkey.data || hotkey.disabled)\n            return;\n        this._callLoop = setTimeout(() => {\n            // Fire hotkey\n            this._callback(hotkey.data!);\n            if (!hotkey.repeat) {\n                return;\n            }\n            // Schedule repeat call loop\n            let repeat = function (this: any) {\n                this._callback(hotkey.data!);\n                // Schedule next call\n                this._callLoop = setTimeout(\n                    repeat, hotkey.repeat!.interval\n                );\n            }.bind(this);\n            // Kick off call loop\n            this._callLoop = setTimeout(\n                repeat, hotkey.repeat!.delay\n            );\n        }, this._recognitionDelay);\n    }\n\n    /**\n     * Converts a key sequence to its hotkey id.\n     * @param sequence\n     *  The sequence to evaluate.\n     * @returns\n     *  The sequence's hotkey id.\n     */\n    private keySequenceToHotKeyId(sequence: string): string {\n        let hotkeyId = sequence\n            .toLocaleLowerCase()\n            .replace(/\\s+/g, '')\n            .split(\"+\")\n            .join(\".\");\n        return `.${hotkeyId}.`\n    }\n\n}\n\nexport class OverlappingHotkeysError extends Error {\n\n    /**\n     * Creates a new OverlappingHotkeysError.\n     * @param message\n     *  The error message.\n     */\n    constructor(message: string) {\n        super(message);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Hotkey  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport interface Hotkey<T> {\n\n    /**\n     * The hotkey's shortcut.\n     */\n    shortcut: string\n\n    /**\n     * The hotkey's data.\n     */\n    data?: T\n\n    /**\n     * The hotkey's repeat interval.\n     */\n    repeat?: {\n\n        /**\n         * The amount of time to wait (in milliseconds) before executing the\n         * interval.\n         */\n        delay: number\n\n        /**\n         * The amount of time (in milliseconds) between each successive call.\n         */\n        interval: number\n    },\n\n    /**\n     * If the hotkey is disabled.\n     */\n    disabled?: boolean\n\n    /**\n     * If the browser's default behavior should be permitted.\n     */\n    allowBrowserBehavior?: boolean\n\n}\n","\nimport { Hotkey, HotkeyObserver } from \"@/assets/scripts/HotkeyObserver\";\nimport { defineComponent, markRaw, PropType } from \"vue\";\n\nexport default defineComponent({\n  name: \"HotkeyBox\",\n  provide() {\n    return {\n\n      /**\n       * Tests if a hotkey sequence is active.\n       * @param sequence\n       *  The hotkey sequence.\n       * @param strict\n       *  [true]\n       *   The active keys must match the provided hotkey sequence exactly.\n       *  [false]\n       *   The active keys only need to contain the provided hotkey sequence.\n       *  (Default: true)\n       * @returns\n       *  True if the provided hotkey sequence is active, false otherwise.\n       */\n      isHotkeyActive: (sequence: string, strict: boolean = true): boolean => {\n        return this.observer.isHotkeyActive(sequence, strict)\n      }\n\n    }\n  },\n  props: {\n    hotkeys: {\n      type: Array as PropType<Hotkey<any>[]>,\n      default: [],\n    },\n    global: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      observer: markRaw(new HotkeyObserver(\n        (id: string, data?: any) => this.$emit(\"fire\", id, data)\n      , 0))\n    };\n  },\n  emits: [\"fire\"],\n  watch: {\n    // On hotkeys change\n    hotkeys() {\n      this.observer.setHotkeys(this.hotkeys);\n    },\n  },\n  mounted() {\n    this.observer.observe(this.global ? document.body : this.$el);\n    this.observer.setHotkeys(this.hotkeys);\n  },\n  unmounted() {\n    this.observer.disconnect();\n  }\n});\n","import { render } from \"./HotkeyBox.vue?vue&type=template&id=5e99f3da&scoped=true&ts=true\"\nimport script from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport \"./HotkeyBox.vue?vue&type=style&index=0&id=5e99f3da&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5e99f3da\"]])\n\nexport default __exports__","\n// Dependencies\nimport { Hotkey } from \"@/assets/scripts/HotkeyObserver\";\nimport { defineComponent } from \"vue\";\nimport { Command, CommandEmitter } from \"@/store/Commands/Command\";\nimport { mapGetters, mapMutations } from \"vuex\";\n// Components\nimport HotkeyBox from \"@/components/Containers/HotkeyBox.vue\";\n\nexport default defineComponent({\n  name: \"AppHotkeyBox\",\n  computed: {\n\n    /**\n     * Hotkey Store data\n     */\n    ...mapGetters(\"HotkeyStore\", [\n      \"nativeHotkeys\",\n      \"fileHotkeys\",\n      \"editHotKeys\",\n      \"layoutHotkeys\",\n      \"viewHotkeys\"\n    ]),\n    \n    /**\n     * Returns the application's hotkeys.\n     * @returns\n     *  The application's hotkeys.\n     */\n    hotkeys(): Hotkey<() => Command>[] {\n      return [\n        ...this.nativeHotkeys, \n        ...this.fileHotkeys,\n        ...this.editHotKeys,\n        ...this.layoutHotkeys,\n        ...this.viewHotkeys\n      ]\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store mutations\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Hotkey fired behavior.\n     * @param emitter\n     *  The hotkey's command emitter.\n     */\n    async onHotkeyFired(emitter: CommandEmitter) {\n      try {\n        let cmd = emitter();\n        if(cmd instanceof Promise) {\n          let test = await cmd;\n          this.execute(test);\n        } else {\n          this.execute(cmd);\n        }\n      } catch(ex: any) {\n        console.error(ex);\n      }\n    }\n\n  },\n  components: { HotkeyBox }\n});\n","import { render } from \"./AppHotkeyBox.vue?vue&type=template&id=ce1df532&ts=true\"\nimport script from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class ReorderObject extends PageCommand {\n\n    /**\n     * The object to reorder.\n     */\n    private _object: DiagramObjectModel;\n\n    /**\n     * The object's parent.\n     */\n    private _parent: DiagramObjectModel;\n\n    /**\n     * The object's previous location in its parent.\n     */\n    private _prevIndex: number;\n\n    /**\n     * The object's next location in its parent.\n     */\n    private _nextIndex: number;\n\n\n    /**\n     * Reorders an object's position in its parent.\n     * @param object\n     *  The object to reorder.\n     * @param order\n     *  The object's new ordering.\n     */\n    constructor(object: DiagramObjectModel, order: Order) {\n        if(!object.parent) {\n            throw new DiagramObjectModelError(\n                \"Object must have a parent.\", object\n            );\n        }\n        super(object.root.id);\n        this._object = object;\n        this._parent = object.parent;\n        this._prevIndex = object.getIndexInParent();\n        switch(order) {\n            case Order.Top:\n                this._nextIndex = object.children.length;\n                break;\n            case Order.OneAbove:\n                this._nextIndex = this._prevIndex + 1;\n                break;\n            case Order.OneBelow:\n                this._nextIndex = this._prevIndex - 1;\n                break;\n            case Order.Bottom:\n                this._nextIndex = 0;\n                break;\n        }\n    }\n\n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._parent.reorderChild(this._object.id, this._nextIndex);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._parent.reorderChild(this._object.id, this._prevIndex);\n    }\n    \n}\n\nexport enum Order {\n    Top      = 0,\n    OneAbove = 2,\n    OneBelow = 3,\n    Bottom   = 4,\n}\n","import { resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenu = _resolveComponent(\"ContextMenu\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"block-diagram-element\",\n    style: _normalizeStyle(_ctx.cursorStyle)\n  }, [\n    (_ctx.menu.show)\n      ? (_openBlock(), _createBlock(_component_ContextMenu, {\n          key: 0,\n          class: \"block-diagram-menu\",\n          style: _normalizeStyle(_ctx.menuStyle),\n          sections: _ctx.menuOptions,\n          onSelect: _ctx.onItemSelect,\n          onUnfocus: _ctx.closeContextMenu\n        }, null, 8, [\"style\", \"sections\", \"onSelect\", \"onUnfocus\"]))\n      : _createCommentVNode(\"\", true)\n  ], 4))\n}","export abstract class PageCommand  {\n\n    /**\n     * The null page's id.\n     */\n    public static NullPage = \"$__null_page\"\n\n    /**\n     * The page the command is operating on.\n     */\n    public page: string;\n\n    /**\n     * Creates a new {@link PageCommand}.\n     * @param page\n     *  The page the command is operating on.\n     */\n    public constructor(page: string) {\n        this.page = page;\n    }\n\n    /**\n     * Executes a page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public abstract execute(): boolean;\n\n    /**\n     * Undoes the page command.\n     */\n    public abstract undo(): void;\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramAnchorModel,\n    DiagramLineModel,\n    DiagramObjectModel,\n    Hover, Select\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class AddLineObject extends PageCommand {\n\n    /**\n     * The line object to add.\n     */\n    private _object: DiagramLineModel;\n\n    /**\n     * The parent object.\n     */\n    private _parent: DiagramObjectModel;\n\n    /**\n     * The line's source anchor.\n     */\n    private _source: DiagramAnchorModel;\n\n    /**\n     * The line's target anchor.\n     */\n    private _target: DiagramAnchorModel | undefined;\n\n\n    /**\n     * Adds a line object to a parent object.\n     * @param object\n     *  The line object to add.\n     * @param parent\n     *  The parent object.\n     * @param source\n     *  The line's source anchor.\n     * @param target\n     *  The line's target anchor.\n     */\n    constructor(\n        object: DiagramLineModel,\n        parent: DiagramObjectModel,\n        source: DiagramAnchorModel,\n        target?: DiagramAnchorModel\n    ) {\n        super(parent.root.id);\n        this._object = object;\n        this._parent = parent;\n        this._source = source;\n        this._target = target;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        // Add line\n        this._parent.addChild(this._object);\n        // Connect source\n        let { xMid, yMid } = this._source.boundingBox;\n        this._object.srcEnding.moveTo(xMid, yMid);\n        this._source.addChild(this._object.srcEnding);\n        // Connect target\n        if(this._target) {\n            let { xMid, yMid } = this._target.boundingBox;\n            this._object.trgEnding.moveTo(xMid, yMid);\n            this._target.addChild(this._object.trgEnding);\n        }\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.setHover(Hover.Off);\n        this._object.setSelect(Select.False);\n        // Disconnect source\n        this._source.removeChild(this._object.srcEnding);\n        // Disconnect target\n        if(this._target) {\n            this._target.removeChild(this._object.trgEnding);\n        }\n        // Remove line\n        this._parent.removeChild(this._object);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Hover, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class AddObject extends PageCommand {\n\n    /**\n     * The object to add.\n     */\n    private _object: DiagramObjectModel;\n\n    /**\n     * The parent object.\n     */\n    private _parent: DiagramObjectModel;\n\n    \n    /**\n     * Adds an object to a parent object.\n     * @param object\n     *  The object to add.\n     * @param parent\n     *  The parent object.\n     */\n    constructor(object: DiagramObjectModel, parent: DiagramObjectModel) {\n        super(parent.root.id);\n        this._object = object;\n        this._parent = parent;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._parent.addChild(this._object);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.setHover(Hover.Off);\n        this._object.setSelect(Select.False);\n        // Skip check for external attachments. If object entered the diagram\n        // with external attachments it should leave with them too.\n        this._parent.removeChild(this._object, true, false);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class AttachObject extends PageCommand {\n    \n    /**\n     * The object's anchor.\n     */\n    private _anchor: DiagramAnchorModel;\n    \n    /**\n     * The object.\n     */\n    private _object: DiagramAnchorableModel;\n\n    \n    /**\n     * Attaches an object to an anchor.\n     * @param anchor\n     *  The object's anchor.\n     * @param object\n     *  The object.\n     */\n    constructor(anchor: DiagramAnchorModel, object: DiagramAnchorableModel) {\n        if(anchor.root.id !== object.root.id) {\n            throw new DiagramObjectModelError(\n                `Objects must originate from the same root.`\n            );\n        }\n        super(anchor.root.id);\n        this._object = object;\n        this._anchor = anchor;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._anchor.addChild(this._object);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._anchor.removeChild(this._object);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ListProperty, Property } from \"@/assets/scripts/BlockDiagram\";\n\nexport class CreateSubproperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: ListProperty;\n\n    /**\n     * The subproperty's id.\n     */\n    private _id: string | null;\n\n    /**\n     * The subproperty.\n     */\n    private _subproperty: Property;\n\n    \n    /**\n     * Creates a new subproperty and adds it to a {@link ListProperty}.\n     * @param property\n     *  The {@link ListProperty}.\n     */\n    constructor(property: ListProperty) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._id = null;\n        this._property = property;\n        this._subproperty = Property.create(property, property.descriptor.form);\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._id = this._property.addProperty(this._subproperty);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        if(this._id) {\n            this._property.removeProperty(this._id);\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModelError } from \"@/assets/scripts/BlockDiagram\";\n\nexport class GroupCommand extends PageCommand {\n\n    /**\n     * The list of commands in order of application.\n     */\n    private _commands: PageCommand[];\n    \n\n    /**\n     * Executes a series of page commands.\n     */\n    constructor() {\n        super(PageCommand.NullPage);\n        this._commands = [];\n    }\n    \n\n    /**\n     * Adds a command to the group.\n     * @param command\n     *  The command.\n     */\n    public add(command: PageCommand) {\n        if(this.page !== PageCommand.NullPage && this.page !== command.page) {\n            throw new DiagramObjectModelError(\n                `Commands must operate on the same page.`\n            );\n        }\n        this.page = command.page;\n        this._commands.push(command);\n    }\n\n    /**\n     * Applies the set of commands.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        let i = 0;\n        let l = this._commands.length;\n        let record = false;\n        try {\n            for(; i < l; i++) {\n                let r = this._commands[i].execute();;\n                record ||= r;\n            }\n        } catch (ex) {\n            // Rollback on failure\n            for(i--; 0 <= i; i--) {\n                this._commands[i].undo();\n            }\n            throw ex;\n        }\n        return record;\n    }\n\n    /**\n     * Reverts the set of commands.\n     */\n    public undo() {\n        let l = this._commands.length - 1;\n        for(let i = l; 0 <= i; i--) {\n            this._commands[i].undo();\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { \n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class RemoveObjects extends PageCommand {\n    \n    /**\n     * The set of objects to remove.\n     */\n    private _items: {\n        index: number,\n        parent: DiagramObjectModel,\n        object: DiagramObjectModel\n    }[];\n\n    /**\n     * The set of external attachments.\n     */\n    private _links: { \n        index: number,\n        anchor: DiagramAnchorModel,\n        object: DiagramAnchorableModel\n    }[]; \n\n\n    /**\n     * Removes one or more objects from their parent object.\n     * \n     * NOTE:\n     * Do NOT perform more than one `RemoveObjects` in a single transaction.\n     * If removals are broken into separate requests, their mutual dependencies\n     * can't be determined. This may cause `undo()` and  `redo()` to break as\n     * they can no longer reconstruct the objects and dependencies correctly.\n     * \n     * @param objects\n     *  The objects to remove from their parents.\n     */\n    constructor(objects: DiagramObjectModel[]) {\n        let page = objects[0].root.id;\n        for(let i = 1; i < objects.length; i++) {\n            if(page === objects[i].root.id)\n                continue;\n            throw new DiagramObjectModelError(\n                `Objects must originate from the same root.`\n            );\n        }\n        super(page);\n        // Compile objects\n        this._links = [];\n        this._items = [];\n        for(let o of objects) {\n            if(!o.parent) {\n                throw new DiagramObjectModelError(\n                    \"Object must have a parent.\", o\n                );\n            }\n            this._items.push({\n                index: o.getIndexInParent(),\n                parent: o.parent,\n                object: o\n            });\n        }\n        // Compile list of anchors and anchor-ables\n        let map = new Map<string, DiagramObjectModel>();\n        for(let item of this._items) {\n            for(let c of item.object.getSubtree()) {\n                if(\n                    c instanceof DiagramAnchorModel ||\n                    c instanceof DiagramAnchorableModel\n                ) {\n                    map.set(c.id, c);\n                }\n            }\n        }\n        // Save any dependencies that can't be found in the list\n        for(let obj of map.values()) {\n            if(obj instanceof DiagramAnchorableModel) {\n                if(obj.isAttached() && !map.has(obj.anchor!.id)) {\n                    this._links.push({ \n                        index: obj.getIndexInAnchor(),\n                        anchor: obj.anchor!,\n                        object: obj,\n                    })\n                }\n            } else if(obj instanceof DiagramAnchorModel) {\n                for(let child of obj.children) {\n                    if(!map.has(child.id)) {\n                        this._links.push({ \n                            index: child.getIndexInAnchor(),\n                            anchor: obj,\n                            object: child, \n                        })\n                    }\n                }\n            }\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        // Detach external attachments\n        for(let link of this._links) {\n            link.anchor.removeChild(link.object);\n        }\n        // Remove objects from parents\n        for(let item of this._items) {\n            item.parent.removeChild(item.object, true, false);\n        }\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        // Add objects to parents\n        for(let item of this._items) {\n            item.parent.addChild(item.object, item.index);\n        } \n        // Attach external attachments\n        for(let link of this._links) {\n            link.anchor.addChild(link.object, link.index);\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Hover } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnhoverObject extends PageCommand {\n\n    /**\n     * The object to un-hover.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Un-hovers an object.\n     * @param object\n     *  The object to un-hover.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        let p: DiagramObjectModel | undefined = this._object;\n        while(p) {\n            p.setHover(Hover.Off);\n            p = p.parent;\n        }\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnselectObject extends PageCommand {\n\n    /**\n     * The object to unselect.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Unselects an object.\n     * @param object\n     *  The object to unselect.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.setSelect(Select.False);\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { RemoveObjects } from \"./RemoveObjects\";\nimport { UnhoverObject } from \"./UnhoverObject\";\nimport { UnselectObject } from \"./UnselectObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class RemoveSelectedChildren extends GroupCommand {\n\n    /**\n     * Removes an object's selected children.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        for(let obj of objects) {\n            // Unhover children\n            if(obj.isHovered()) {\n                this.add(new UnhoverObject(obj))\n            }\n            // Unselect children\n            this.add(new UnselectObject(obj));\n        }\n        // Remove children\n        this.add(new RemoveObjects(objects));\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\nimport { RemoveSelectedChildren } from \"./RemoveSelectedChildren\";\n\nexport class CutSelectedChildren extends GroupCommand {\n\n    /**\n     * The application context.\n     */\n    private _context: ApplicationStore\n\n    /**\n     * The objects to add to the clipboard.\n     */\n    private _objects: DiagramObjectModel[];\n\n\n    /**\n     * Cuts an object's selected children to the application's clipboard.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        this._context = context;\n        // Get selected children\n        let objects = object.children.filter(c => c.isSelected());\n        // Clone selection\n        this._objects = object.factory.cloneObjects(...objects);\n        // Remove selected children\n        this.add(new RemoveSelectedChildren(object));\n    }\n\n    \n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public override execute(): boolean {\n        // Set the clipboard\n        this._context.clipboard = this._objects;\n        // Remove the selected children\n        return super.execute();\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ListProperty, Property } from \"@/assets/scripts/BlockDiagram\";\n\nexport class DeleteSubproperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: ListProperty;\n\n    /**\n     * The subproperty's id.\n     */\n    private _id: string;\n\n    /**\n     * The subproperty.\n     */\n    private _subproperty: Property;\n\n    /**\n     * The subproperty's location in the collection.\n     */\n    private _index: number;\n\n\n    /**\n     * Deletes a subproperty from a {@link ListProperty}.\n     * @param property\n     *  The {@link ListProperty}.\n     * @param id\n     *  The subproperty's id.\n     */\n    constructor(property: ListProperty, id: string) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        let subproperty = property.value.get(id);\n        if(!subproperty) {\n            throw new Error(`Subproperty '${ id }' does not exist.`);\n        }\n        super(root.object.root.id);\n        this._id = id;\n        this._index = property.indexOf(id);\n        this._property = property;\n        this._subproperty = subproperty;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.removeProperty(this._id);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.addProperty(this._subproperty, this._id, this._index);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class DetachObject extends PageCommand {\n    \n    /**\n     * The object's anchor.\n     */\n    private _anchor: DiagramAnchorModel;\n\n    /**\n     * The object.\n     */\n    private _object: DiagramAnchorableModel;\n\n    /**\n     * The object's location in its anchor.\n     */\n    private _index: number;\n\n    \n    /**\n     * Detaches an object from its anchor.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramAnchorableModel) {\n        if(!object.isAttached()) {\n            throw new DiagramObjectModelError(\n                \"Object must be attached to an anchor.\", object\n            );\n        }\n        super(object.root.id);\n        this._object = object;\n        this._anchor = object.anchor!;\n        this._index = object.getIndexInAnchor();\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._anchor.removeChild(this._object);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._anchor.addChild(this._object, this._index);\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { AddObject } from \"./AddObject\";\nimport { UnselectObject } from \"./UnselectObject\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class DuplicateSelectedChildren extends GroupCommand {\n\n    /**\n     * Duplicates an object's selected children.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        // Unselect children\n        let objects = object.children.filter(c => c.isSelected());\n        for(let obj of objects) {\n            this.add(new UnselectObject(obj));\n        }\n        // Duplicate selection\n        let o = context.settings.edit.clone_offset;\n        let clones = object.factory.cloneObjects(...objects);\n        // Add clones to object and select them\n        for(let obj of clones) {\n            obj.moveBy(o[0], o[1]);\n            obj.setSelect(Select.True);\n            this.add(new AddObject(obj, object));\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Hover } from \"@/assets/scripts/BlockDiagram\";\n\nexport class HoverObject extends PageCommand {\n\n    /**\n     * The object to hover.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Hovers an object.\n     * @param object\n     *  The object to hover.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        // Directly hover object\n        this._object.setHover(Hover.Direct);\n        // Indirectly hover object's parents\n        let p = this._object.parent;\n        while(p) {\n            p.setHover(Hover.Indirect);\n            p = p.parent;\n        }\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SelectObject extends PageCommand {\n\n    /**\n     * The object to select.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Selects an object.\n     * @param object\n     *  The object to select.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.setSelect(Select.True)\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { UnselectObject } from \"./UnselectObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnselectDescendants extends GroupCommand {\n\n    /**\n     * Unselects an object's descendants.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        for(let obj of object.getSubtree(o => o.isSelected())) {\n            this.add(new UnselectObject(obj));\n        }\n    }\n\n}\n\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\nimport {\n    CameraLocation,\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToObjects extends PageCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The camera's new location.\n     */\n    private _location: CameraLocation;\n\n\n    /**\n     * Focuses the camera on a set of objects.\n     * @param context\n     *  The application context.\n     * @param objects\n     *  The objects.\n     */\n    constructor(context: ApplicationStore, objects: DiagramObjectModel[]) {\n        let page = objects[0].root;\n        for(let i = 1; i < objects.length; i++) {\n            if(page.id === objects[i].root.id)\n                continue;\n            throw new DiagramObjectModelError(\n                `Objects must originate from the same root.`\n            );\n        }\n        let editor = context.pages.get(page.id);\n        if(!editor) {\n            throw new Error(\n                `Objects must be managed by an editor.`\n            );\n        }\n        super(page.id);\n        this._editor = editor;\n        // Calculate bounding box\n        let xMin = Infinity;\n        let yMin = Infinity;\n        let xMax = -Infinity;\n        let yMax = -Infinity;\n        for(let obj of objects) {\n            xMin = Math.min(xMin, obj.boundingBox.xMin);\n            yMin = Math.min(yMin, obj.boundingBox.yMin);\n            xMax = Math.max(xMax, obj.boundingBox.xMax);\n            yMax = Math.max(yMax, obj.boundingBox.yMax);\n        }\n        // Calculate camera position\n        let regionW = xMax - xMin;\n        let regionH = yMax - yMin;\n        let x = Math.round((xMin + xMax) / 2);\n        let y = Math.round((yMin + yMax) / 2);\n        let w = regionW / editor.view.w;\n        let h = regionH / editor.view.h;\n        let r = Math.max(w, h);\n        let k = Math.min(.9 / r, 1.5);\n        this._location = { x, y, k };\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.location.value = this._location;\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { SelectObject } from \"./SelectObject\";\nimport { UnselectDescendants } from \"./UnselectDescendants\";\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    SemanticAnalyzer\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToChildren extends GroupCommand {\n\n    /**\n     * Interprets an object's selected children as a graph and focuses the\n     * camera on their (graph-wise) children.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        if(!objects.length) {\n            return;\n        }\n        // Get (graph-wise) children\n        let children = new Set<DiagramObjectModel>;\n        for(let obj of objects) {\n            for(let n of this.getNextBlocks(obj)) {\n                children.add(n);\n            }\n        }\n        // Unselect objects\n        this.add(new UnselectDescendants(object));\n        // Select children\n        for(let child of children) {\n            this.add(new SelectObject(child));\n        }\n        // Move camera to children\n        if(children.size) {\n            this.add(new MoveCameraToObjects(context, [...children]));\n        }\n    }\n\n    /**\n     * Resolve next graph-wise blocks.\n     * @param obj\n     *  The source object.\n     */\n    private getNextBlocks(obj: DiagramObjectModel): Set<DiagramObjectModel> {\n        let set = new Set<DiagramObjectModel>();\n        let next = SemanticAnalyzer.getNextGraphLinks(obj);\n        for(let n of next) {\n            if(n instanceof DiagramLineModel) {\n                set = new Set([...set, ...this.getNextBlocks(n)])\n            } else {\n                set.add(n);\n            }\n        }\n        return set;\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { SelectObject } from \"./SelectObject\";\nimport { UnselectDescendants } from \"./UnselectDescendants\";\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    SemanticAnalyzer\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToParents extends GroupCommand {\n\n    /**\n     * Interprets an object's selected children as a graph and focuses the\n     * camera on their (graph-wise) parents.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        if(!objects.length) {\n            return;\n        }\n        // Get (graph-wise) parents\n        let parents = new Set<DiagramObjectModel>;\n        for(let obj of objects) {\n            for(let n of this.getPrevBlocks(obj)) {\n                parents.add(n);\n            }\n        }\n        // Unselect objects\n        this.add(new UnselectDescendants(object));\n        // Select parents\n        for(let child of parents) {\n            this.add(new SelectObject(child));\n        }\n        // Move camera to parents\n        if(parents.size) {\n            this.add(new MoveCameraToObjects(context, [...parents]));\n        }\n    }\n\n    /**\n     * Resolve prev graph-wise blocks.\n     * @param obj\n     *  The source object.\n     */\n    private getPrevBlocks(obj: DiagramObjectModel): Set<DiagramObjectModel> {\n        let set = new Set<DiagramObjectModel>();\n        let prev = SemanticAnalyzer.getPrevGraphLinks(obj);\n        for(let p of prev) {\n            if(p instanceof DiagramLineModel) {\n                set = new Set([...set, ...this.getPrevBlocks(p)])\n            } else {\n                set.add(p);\n            }\n        }\n        return set;\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToSelection extends GroupCommand {\n\n    /**\n     * Focuses the camera on an object's selected children.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        if(!objects.length) {\n            return;\n        }\n        // Move camera to selected children\n        this.add(new MoveCameraToObjects(context, objects));\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveObjectBy extends PageCommand {\n    \n    /**\n     * The object.\n     */\n    private _object: DiagramObjectModel;\n    \n    /**\n     * The object's change in x.\n     */\n    private _dx: number;\n\n    /**\n     * The object's change in y.\n     */\n    private _dy: number;\n\n\n    /**\n     * Moves an object relative to its current position.\n     * @param object\n     *  The object.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     */\n    constructor(object: DiagramObjectModel, dx: number, dy: number) {\n        super(object.root.id);\n        this._object = object;\n        this._dx = dx;\n        this._dy = dy;\n    }\n\n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.moveBy(this._dx, this._dy);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.moveBy(-this._dx, -this._dy);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveObjectTo extends PageCommand {\n    \n    /**\n     * The object.\n     */\n    private _object: DiagramObjectModel;\n    \n    /**\n     * The object's last x coordinate.\n     */\n    private _lx: number;\n\n    /**\n     * The object's last y coordinate.\n     */\n    private _ly: number;\n\n    /**\n     * The object's next x coordinate. \n     */\n    private _nx: number;\n\n    /**\n     * The object's next y coordinate.\n     */\n    private _ny: number;\n\n\n    /**\n     * Moves an object to a specific coordinate.\n     * @param object\n     *  The object.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     */\n    constructor(object: DiagramObjectModel, x: number, y: number) {\n        super(object.root.id);\n        this._object = object;\n        this._lx = object.boundingBox.xMid;\n        this._ly = object.boundingBox.yMid;\n        this._nx = x;\n        this._ny = y;\n    }\n\n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.moveTo(this._nx, this._ny);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.moveTo(this._lx, this._ly);\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { AddObject } from \"./AddObject\";\nimport { UnselectDescendants } from \"./UnselectDescendants\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class PasteToObject extends GroupCommand {\n\n    /**\n     * The application context.\n     */\n    private _context: ApplicationStore;\n\n\n    /**\n     * Pastes the application's clipboard to an object.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        this._context = context;\n        // Clear the object's current selection\n        this.add(new UnselectDescendants(object));\n        // Copy the clipboard\n        let clones = object.factory.cloneObjects(...context.clipboard);\n        // Select clones and add them to object\n        for(let clone of clones) {\n            clone.setSelect(Select.True);\n            this.add(new AddObject(clone, object));\n            \n        }\n    }\n\n\n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public override execute(): boolean {\n        // Offset the clipboard\n        let o = this._context.settings.edit.clone_offset;\n        for(let obj of this._context.clipboard) {\n            obj.moveBy(o[0], o[1]);\n        }\n        // Paste the clipboard\n        return super.execute();\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class RedoPageCommand extends PageCommand {\n\n    /**\n     * The page to apply the redo operation to.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Redoes the last undone page command.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The id of the page to apply the redo operation to.\n     */\n    constructor(context: ApplicationStore, page: string) {\n        super(page);\n        let editor = context.pages.get(page);\n        if(editor) {\n            this._editor = editor;\n        } else {\n            throw new Error(`'${ page }' is not a page.`);\n        }\n    }\n\n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.redo();\n        return false;\n    }\n    \n    /**\n     * Undoes the page command.\n     */\n    public undo(): void {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { Order, ReorderObject } from \"./ReorderObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class RelayerSelection extends GroupCommand {\n\n    /**\n     * Reorders an object's selected children.\n     * @param object\n     *  The object.\n     * @param order\n     *  The new ordering.\n     */\n    constructor(object: DiagramObjectModel, order: Order) {\n        super();\n        let select = object.children.filter(c => c.isSelected());\n        switch(order) {\n            case Order.Top:\n            case Order.OneAbove:\n                for(let i = select.length - 1; 0 <= i; i--) {\n                    this.add(new ReorderObject(select[i], order));\n                }\n                break;\n            case Order.Bottom:\n            case Order.OneBelow:\n                for(let i = 0; i < select.length; i++) {\n                    this.add(new ReorderObject(select[i], order));\n                }\n                break;\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageModel } from \"@/assets/scripts/BlockDiagram\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class ResetCamera extends PageCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Resets a page editor's camera.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The page.\n     */\n    constructor(context: ApplicationStore, page: PageModel) {\n        super(page.id);\n        let editor = context.pages.get(page.id);\n        if(!editor) {\n            throw new Error(\n                `Page '${ page.id }' does not have an editor.`\n            );\n        }\n        this._editor = editor;\n    }\n    \n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.location.value = { x: 0, y: 0, k: 1 };\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { SelectObject } from \"./SelectObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SelectChildren extends GroupCommand {\n\n    /**\n     * Selects an object's children.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        for(let obj of object.children) {\n            this.add(new SelectObject(obj));\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DateProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetDateProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: DateProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: Date | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: Date | null;\n\n\n    /**\n     * Sets a date property's value.\n     * @param property\n     *  The date property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: DateProperty, value: Date | null) {\n        let lv = property.toRawValue();\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = lv !== null ? new Date(lv) : lv;\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { EnumProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetEnumProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: EnumProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: string | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: string | null;\n\n\n    /**\n     * Sets a enum property's value.\n     * @param property\n     *  The enum property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: EnumProperty, value: string) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = property.toRawValue();\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { NumberProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetNumberProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: NumberProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: number | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: number | null;\n\n\n    /**\n     * Sets a number property's value.\n     * @param property\n     *  The number property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: NumberProperty, value: number | null) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = property.toRawValue();\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { StringProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetStringProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: StringProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: string | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: string | null;\n\n\n    /**\n     * Sets a string property's value.\n     * @param property\n     *  The string property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: StringProperty, value: string) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = property.toRawValue();\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { AddObject } from \"./AddObject\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport {\n    Alignment,\n    DiagramObjectModel,\n    round\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class SpawnObject extends GroupCommand {\n\n    /**\n     * Spawns a new object.\n     * @param context\n     *  The application context.\n     * @param parent\n     *  The parent object.\n     * @param template\n     *  The object's template.\n     */\n    constructor(\n        context: ApplicationStore,\n        parent: DiagramObjectModel,\n        template: string\n    );\n\n    /**\n     * Spawns a new object.\n     * @param context\n     *  The application context.\n     * @param parent\n     *  The parent object.\n     * @param template\n     *  The object's template.\n     * @param x\n     *  The object's x-coordinate relative to the viewport.\n     * @param y\n     *  The object's y-coordinate relative to the viewport.\n     */\n    constructor(\n        context: ApplicationStore,\n        parent: DiagramObjectModel,\n        template: string,\n        x: number,\n        y: number\n    );\n    constructor(\n        context: ApplicationStore,\n        parent: DiagramObjectModel,\n        template: string,\n        x?: number,\n        y?: number\n    ) {\n        super();\n        let editor = context.pages.get(parent.root.id);\n        if(!editor) {\n            throw new Error(\n                `'${ parent.id }' must belong to an existing editor.`\n            );\n        }\n        // Create object\n        let object = parent.factory.createObject(template);\n        // Move object\n        let view = editor.view;\n        if(x === undefined) {\n            // Position in center of screen\n            x = Math.round(((view.w / 2) - view.x) / view.k);\n        } else {\n            // Position left-side of object at x \n            let { xMid, xMin } = object.boundingBox;\n            x = ((x - view.x) / view.k) + xMid - xMin;\n        }\n        if(y === undefined) {\n            // Position in middle of screen\n            y = Math.round(((view.h / 2) - view.y) / view.k);\n        } else {\n            // Position top-side of object at y \n            let { yMid, yMin } = object.boundingBox;\n            y = ((y - view.y) / view.k) + yMid - yMin;\n        }\n        if(object.getAlignment() === Alignment.Grid) {\n            // If aligned to grid, snap x and y\n            x = round(x, editor.page.grid[0]);\n            y = round(y, editor.page.grid[1]);\n        }\n        object.moveTo(x, y);\n        // Add object\n        this.add(new AddObject(object, parent));\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class UndoPageCommand extends PageCommand {\n\n    /**\n     * The page to apply the undo operation to.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Undoes the last page command.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The id of the page to apply the undo operation to.\n     */\n    constructor(context: ApplicationStore, page: string) {\n        super(page);\n        let editor = context.pages.get(page);\n        if(editor) {\n            this._editor = editor;\n        } else {\n            throw new Error(`'${ page }' is not a page.`);\n        }\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.undo();\n        return false;\n    }\n    \n    /**\n     * Undoes the page command.\n     */\n    public undo(): void {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { UnhoverObject } from \"./UnhoverObject\";\nimport { DiagramObjectModel, Hover, HoverMask } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnhoverDescendants extends GroupCommand {\n\n    /**\n     * Unhover an object's descendants.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        for(let obj of object.getSubtree(this.isDirectlyHovered)) {\n            this.add(new UnhoverObject(obj));\n        }\n    }\n\n\n    /**\n     * Tests if an object is directly hovered.\n     * @param obj\n     *  The object.\n     * @returns\n     *  True if the object is directly hovered, false otherwise.\n     */\n    private isDirectlyHovered(obj: DiagramObjectModel): boolean {\n        return (obj.attrs & HoverMask) === Hover.Direct\n    }\n\n}\n\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, PositionSetByUser } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UserSetObjectPosition extends PageCommand {\n\n    /**\n     * The object.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Declares that an object's position was set by the user.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.setPositionSetByUser(PositionSetByUser.True);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.setPositionSetByUser(PositionSetByUser.False);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { CameraLocation, PageModel } from \"@/assets/scripts/BlockDiagram\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class ZoomCamera extends PageCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The camera's new location.\n     */\n    private _location: CameraLocation;\n\n\n    /**\n     * Zooms a page editor's camera in or out.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The page.\n     * @param delta\n     *  The camera's change in zoom.\n     */\n    constructor(context: ApplicationStore, page: PageModel, delta: number) {\n        super(page.id);\n        let editor = context.pages.get(page.id);\n        if(!editor) {\n            throw new Error(\n                `Page '${ page.id }' does not have an editor.`\n            );\n        }\n        this._editor = editor;\n        let k = editor.view.k\n        let x = ((editor.view.w / 2) - editor.view.x) / k;\n        let y = ((editor.view.h / 2) - editor.view.y) / k;\n        this._location = { x, y, k: k + delta };\n    }\n    \n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.location.value = this._location;\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    style: _normalizeStyle(_ctx.offset),\n    class: \"context-menu-control\",\n    onUnfocus: _cache[1] || (_cache[1] = ($event: any) => (_ctx.$emit('unfocus'))),\n    onContextmenu: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ContextMenuListing, {\n        sections: _ctx.sections,\n        onSelect: _cache[0] || (_cache[0] = data => _ctx.$emit('select', data)),\n        forceInsideWindow: false\n      }, null, 8, [\"sections\"])\n    ]),\n    _: 1\n  }, 8, [\"style\"]))\n}","\n// Dependencies\nimport { defineComponent, PropType } from 'vue';\nimport { ContextMenuSection } from \"@/assets/scripts/ContextMenuTypes\";\n// Components\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\n\nexport default defineComponent({\n  name: 'ContextMenu',\n  props: {\n    sections: {\n      type: Array as PropType<ContextMenuSection[]>,\n      required: true\n    }\n  },\n  data() {\n    return {\n      xOffset: 0,\n      yOffset: 0,\n    }\n  },\n  computed: {\n\n    /**\n     * Returns the ContextMenu's offset styling.\n     * @returns\n     *  The ContextMenu's offset styling.\n     */\n    offset(): { marginTop: string, marginLeft: string } {\n      return {\n        marginTop: `${ this.yOffset }px`,\n        marginLeft: `${ this.xOffset }px`\n      }\n    }\n\n  },\n  emits: [\"select\", \"unfocus\"],\n  mounted() {\n    // Offset menu if outside of viewport\n    let viewWidth  = window.innerWidth;\n    let viewHeight = window.innerHeight;\n    let { bottom, right } = this.$el.getBoundingClientRect();\n    // -1 ensures cursor is over menu and not the element beneath it\n    this.xOffset = right > viewWidth ? -(this.$el.clientWidth - 1) : 0;\n    this.yOffset = bottom > viewHeight ? -(this.$el.clientHeight - 1) : 0;\n  },\n  components: { FocusBox, ContextMenuListing }\n});\n","import { render } from \"./ContextMenu.vue?vue&type=template&id=6a0233c2&scoped=true&ts=true\"\nimport script from \"./ContextMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenu.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenu.vue?vue&type=style&index=0&id=6a0233c2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6a0233c2\"]])\n\nexport default __exports__","\nimport * as App from \"@/store/Commands/AppCommands\";\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport * as Store from \"@/store/StoreTypes\";\n// Dependencies\nimport { CommandEmitter } from \"@/store/Commands/Command\";\nimport { defineComponent, inject, markRaw } from 'vue';\nimport { mapGetters, mapMutations, mapState } from \"vuex\";\nimport {\n  ContextMenu as Menu,\n  ContextMenuSection,\n  ContextMenuSubmenu,\n  MenuType\n} from \"@/assets/scripts/ContextMenuTypes\";\nimport { \n  BlockDiagram,CameraLocation,Cursor,\n  CursorCssName,\n  DiagramAnchorableModel,\n  DiagramAnchorModel,\n  DiagramLineModel,\n  DiagramObjectModel,\n  MouseClick,\n  Namespace,\n  titleCase\n} from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport ContextMenu from \"@/components/Controls/ContextMenu.vue\";\n\nexport default defineComponent({\n  name: 'BlockDiagram',\n  setup() {\n    return {\n      isHotkeyActive: inject(\"isHotkeyActive\") as \n        (sequence: string, strict?: boolean) => boolean\n    }\n  },\n  data() {\n    return {\n      cursor: Cursor.Default,\n      diagram: markRaw(new BlockDiagram()),\n      menu: {\n        x: 0,\n        y: 0,\n        show: false,\n      },\n      view: { \n        x: 0, y: 0, k: 1,\n        w: 0, h: 0\n      }\n    }\n  },\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      ctx(state: Store.ApplicationStore): Store.ApplicationStore {\n        return state;\n      },\n      editor(state: Store.ApplicationStore): Store.PageEditor {\n        return state.activePage;\n      },\n      camera(state: Store.ApplicationStore): CameraLocation {\n        return state.activePage.location.value;\n      },\n      pageUpdate(state: Store.ApplicationStore): number {\n        return state.activePage.trigger.value;\n      },\n      displayGrid(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.display_grid;\n      },\n      displayShadows(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.display_shadows;\n      },\n      displayDebugMode(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.display_debug_mode;\n      },\n      renderHighQuality(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.render_high_quality;\n      },\n      disableShadowsAt(state: Store.ApplicationStore): number {\n        return state.settings.view.diagram.disable_shadows_at;\n      },\n      multiselectHotkey(state: Store.ApplicationStore): string {\n        return state.settings.hotkeys.select.many;\n      }\n    }),\n\n    ...mapGetters(\"ApplicationStore\", [\"hasSelection\"]),\n\n    /**\n     * Context Menu Store data\n     */\n    ...mapGetters(\"ContextMenuStore\", [\n      \"deleteMenu\",\n      \"clipboardMenu\",\n      \"duplicateMenu\",\n      \"layeringMenu\",\n      \"jumpMenu\",\n      \"undoRedoMenu\",\n      \"createAtMenu\",\n      \"selectAllMenu\",\n      \"zoomMenu\",\n      \"diagramViewMenu\"\n    ]),\n\n    /**\n     * Returns the current cursor style.\n     * @returns\n     *  The current cursor style.\n     */\n    cursorStyle(): { cursor: string } {\n      return { cursor: CursorCssName[this.cursor] }\n    },\n\n    /**\n     * Returns the context menu's style.\n     * @returns\n     *  The context menu's style.\n     */\n    menuStyle(): { top: string; left: string } {\n      return {\n        top: `${this.menu.y}px`,\n        left: `${this.menu.x}px`,\n      };\n    },\n\n    /**\n     * Returns the context menu options.\n     * @returns\n     *  The context menu options.\n     */\n    menuOptions(): ContextMenuSection[] {\n      if(this.hasSelection) {\n        return [\n          this.deleteMenu,\n          this.clipboardMenu,\n          this.duplicateMenu,\n          this.layeringMenu,\n          this.jumpMenu\n        ];\n      } else {\n        return [\n          this.undoRedoMenu,\n          this.createAtMenu,\n          this.selectAllMenu,\n          this.zoomMenu,\n          this.diagramViewMenu\n        ];\n      }\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store mutations\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Menu item selection behavior.\n     * @param emitter\n     *  Menu item's command emitter.\n     */\n    async onItemSelect(emitter: CommandEmitter) {\n      try {\n        let cmd = emitter();\n        if(cmd instanceof Promise) {\n          this.execute(await cmd);\n        } else {\n          this.execute(cmd);\n        }\n      } catch(ex: any) {\n        console.error(ex);\n      }\n      this.closeContextMenu();\n    },\n\n    /**\n     * Opens the context menu.\n     * @param x\n     *  The menu's x coordinate (relative to the container).\n     * @param y\n     *  The menu's y coordinate (relative to the container).\n     */\n    openContextMenu(x: number, y: number) {\n      // Allow unfocus event to run first (if context\n      // menu is already present) then show context menu.\n      requestAnimationFrame(() => {\n        this.menu.show = true;\n        this.menu.x = x;\n        this.menu.y = y;\n      })\n    },\n\n    /**\n     * Closes the context menu.\n     */\n    closeContextMenu() {\n      this.menu.show = false;\n    },\n\n\n    /**\n     * Object hover behavior.\n     * @param o\n     *  The hovered object. `undefined` if nothing is hovered.\n     * @param c\n     *  The cursor to use.\n     */\n    onObjectHover(o: DiagramObjectModel | undefined, c: number) {\n      this.cursor = c;\n      this.execute(new Page.UnhoverDescendants(this.editor.page));\n      if(o) {\n        this.execute(new Page.HoverObject(o));\n      }\n    },\n\n    /**\n     * Object click behavior.\n     * @param e\n     *  The click event.\n     * @param o\n     *  The clicked object.\n     * @param x\n     *  The clicked x-coordinate, relative to the container.\n     * @param y\n     *  The clicked y-coordinate, relative to the container.\n     */\n    onObjectClick(e: PointerEvent, o: DiagramObjectModel, x: number, y: number) {\n      // Unselect items, if needed\n      let isMultiselect = this.isHotkeyActive(this.multiselectHotkey);\n      if(!isMultiselect && !o.isSelected()) {\n        this.execute(new Page.UnselectDescendants(this.editor.page));\n      }\n      // Select item\n      this.execute(new Page.SelectObject(o));\n      // Open context menu, if needed\n      if (e.button === MouseClick.Right) {\n        this.openContextMenu(x, y);\n      }\n    },\n\n    /**\n     * Canvas click behavior.\n     * @param e\n     *  The click event.\n     * @param x\n     *  The clicked x-coordinate, relative to the container.\n     * @param y\n     *  The clicked y-coordinate, relative to the container.\n     */\n    onCanvasClick(e: PointerEvent, x: number, y: number) {\n      this.execute(new Page.UnselectDescendants(this.editor.page));\n      this.execute(new App.SetEditorPointerLocation(this.ctx, this.editor.id, x, y));\n      if (e.button === MouseClick.Right) {\n        this.openContextMenu(x, y);\n      }\n    },\n    \n    /**\n     * Object move behavior.\n     * @param o\n     *  The moved objects.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     */\n    onObjectMove(o: DiagramObjectModel[], dx: number, dy:number) {\n      let cmd = new Page.GroupCommand();\n      for(let obj of o) {\n        if(!obj.hasUserSetPosition()) {\n            cmd.add(new Page.UserSetObjectPosition(obj));\n        }\n        cmd.add(new Page.MoveObjectBy(obj, dx, dy));\n      }\n      this.execute(cmd);\n    },\n\n    /**\n     * Object attach behavior.\n     * @param o\n     *  The object.\n     * @param a\n     *  The object's anchor.\n     */\n    onObjectAttach(o: DiagramAnchorableModel, a: DiagramAnchorModel) {\n      let { xMid, yMid } = a.boundingBox;\n      let cmd = new Page.GroupCommand();\n      if(o.isAttached()) {\n        cmd.add(new Page.DetachObject(o));  \n      }\n      cmd.add(new Page.MoveObjectTo(o, xMid, yMid));\n      cmd.add(new Page.AttachObject(a, o));\n      this.execute(cmd);\n    },\n\n    /**\n     * Object detach behavior.\n     * @param o\n     *  The object to detach.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     */\n    onObjectDetach(o: DiagramAnchorableModel, dx: number, dy: number) {\n      let cmd = new Page.GroupCommand();\n      cmd.add(new Page.DetachObject(o));\n      cmd.add(new Page.MoveObjectBy(o, dx, dy));\n      this.execute(cmd);\n    },\n\n    /**\n     * Line create behavior.\n     * @param o\n     *  The line object.\n     * @param p\n     *  The parent object.\n     * @param s\n     *  The line source's anchor.\n     * @param t\n     *  The line target's anchor. `undefined` if there wasn't one.\n     */\n    onLineCreate(\n      o: DiagramLineModel,\n      p: DiagramObjectModel,\n      s: DiagramAnchorModel,\n      t?: DiagramAnchorModel\n    ) {\n      this.execute(new Page.AddLineObject(o, p, s, t));\n      this.execute(new Page.UnselectDescendants(this.editor.page));\n      this.execute(new Page.SelectObject(o));\n    },\n\n    /**\n     * View transform behavior.\n     * @param x\n     *  The view's left x-coordinate.\n     * @param y\n     *  The view's top y-coordinate.\n     * @param k\n     *  The view's scale.\n     * @param w\n     *  The view's width.\n     * @param h\n     *  The view's height.\n     */\n    onViewTransform(x: number, y: number, k: number, w: number, h: number) {\n      this.view = { x, y, k, w, h };\n      this.execute(\n        new App.SetEditorViewParams(\n          this.ctx, this.editor.id, { ...this.view }\n        )\n      );\n    }\n\n  },\n  watch: {\n    // On page change\n    editor() {\n      // Set page\n      this.diagram.setPage(markRaw(this.editor.page));\n      // Update view\n      this.diagram.updateView();\n      this.diagram.setCameraLocation(this.camera, 0);\n      // Configure view parameters\n      this.execute(\n        new App.SetEditorViewParams(\n          this.ctx, this.editor.id, { ...this.view }\n        )\n      );\n    },\n    // On camera update\n    camera() {\n      this.diagram.setCameraLocation(this.camera);\n    },\n    // On page update\n    pageUpdate() {\n      this.diagram.updateView();\n      this.diagram.render();\n    },\n    // On display grid change\n    displayGrid() {\n      this.diagram.setGridDisplay(this.displayGrid);\n      this.diagram.render();\n    },\n    // On display shadows change\n    displayShadows() {\n      this.diagram.setShadowsDisplay(this.displayShadows);\n      this.diagram.render();\n    },\n    // On display debug change\n    displayDebugMode() {\n      this.diagram.setDebugDisplay(this.displayDebugMode);\n      this.diagram.render();\n    },\n    // On render quality change\n    renderHighQuality() {\n      this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\n      this.diagram.render();\n    },\n    // On 'disable shadows at' change\n    disableShadowsAt() {\n      this.diagram.setShadowsDisableAt(this.disableShadowsAt);\n      this.diagram.render();\n    }\n  },\n  mounted() {\n    \n    // Subscribe to diagram events\n    this.diagram.on(\"object-hover\", this.onObjectHover);\n    this.diagram.on(\"object-click\", this.onObjectClick);\n    this.diagram.on(\"canvas-click\", this.onCanvasClick);\n    this.diagram.on(\"object-move\", this.onObjectMove);\n    this.diagram.on(\"object-attach\", this.onObjectAttach);\n    this.diagram.on(\"object-detach\", this.onObjectDetach);\n    this.diagram.on(\"view-transform\", this.onViewTransform);\n    this.diagram.on(\"line-create\", this.onLineCreate);\n\n    // Configure the current page\n    this.diagram.setGridDisplay(this.displayGrid);\n    this.diagram.setShadowsDisplay(this.displayShadows);\n    this.diagram.setDebugDisplay(this.displayDebugMode);\n    this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\n    this.diagram.setShadowsDisableAt(this.disableShadowsAt);\n    this.diagram.setPage(markRaw(this.editor.page));\n    \n    // Inject the diagram\n    this.diagram.inject(this.$el);\n    this.diagram.updateView();\n    this.diagram.setCameraLocation(this.camera, 0);\n\n  },\n  unmounted() {\n    this.diagram.destroy();\n  },\n  components: { ContextMenu }\n});\n","import { render } from \"./BlockDiagram.vue?vue&type=template&id=52fd0e8e&scoped=true&ts=true\"\nimport script from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\nexport * from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\n\nimport \"./BlockDiagram.vue?vue&type=style&index=0&id=52fd0e8e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-52fd0e8e\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-783f2534\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"app-footer-bar-element\" }\nconst _hoisted_2 = { class: \"info left\" }\nconst _hoisted_3 = { class: \"selected\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Selected:\", -1))\nconst _hoisted_5 = { class: \"info right\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"page-check valid\"\n}\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"✓\", -1))\nconst _hoisted_8 = {\n  key: 1,\n  class: \"page-check invalid\"\n}\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"⚠\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"p\", _hoisted_3, [\n        _hoisted_4,\n        _createTextVNode(\" \" + _toDisplayString(_ctx.hasSelection), 1)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_ctx.isValid)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _createTextVNode(\" Valid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n            _hoisted_9,\n            _createTextVNode(\" Invalid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n    ])\n  ]))\n}","\nimport Configuration from \"@/assets/builder.config\";\nimport { defineComponent } from \"vue\";\nimport { mapGetters } from \"vuex\";\n\nexport default defineComponent({\n  name: \"AppFooterBar\",\n  data(){\n    return {\n      fileName: Configuration.file_type_name\n    }\n  },\n  computed: {\n\n    /**\n     * Application Store getters\n     */\n    ...mapGetters(\"ApplicationStore\", [\n        \"hasSelection\", \"isValid\"\n    ])\n    \n  }\n});\n","import { render } from \"./AppFooterBar.vue?vue&type=template&id=783f2534&scoped=true&ts=true\"\nimport script from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppFooterBar.vue?vue&type=style&index=0&id=783f2534&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-783f2534\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_PropertyEditor = _resolveComponent(\"PropertyEditor\")!\n  const _component_AccordionPane = _resolveComponent(\"AccordionPane\")!\n  const _component_ValidatorProblems = _resolveComponent(\"ValidatorProblems\")!\n  const _component_AccordionBox = _resolveComponent(\"AccordionBox\")!\n\n  return (_openBlock(), _createBlock(_component_AccordionBox, { class: \"editor-tabs-element\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_AccordionPane, {\n        name: \"Properties\",\n        units: 3\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_PropertyEditor, {\n            class: \"properties-pane\",\n            property: _ctx.selected\n          }, {\n            \"no-props\": _withCtx(() => [\n              _createTextVNode(\" The selected object has no properties. \")\n            ]),\n            \"no-prop\": _withCtx(() => [\n              _createTextVNode(\" Select a single object to edit its properties. \")\n            ]),\n            _: 1\n          }, 8, [\"property\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_AccordionPane, {\n        name: \"Problems\",\n        units: 1\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ValidatorProblems, { class: \"validator-problems-pane\" })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\n// Dependencies\nimport { PointerTracker } from \"@/assets/scripts/PointerTracker\";\nimport { defineComponent, h, markRaw } from \"vue\";\n// Components\nimport CollapseArrow from \"@/components/Icons/CollapseArrow.vue\";\n\nexport default defineComponent({\n  name: \"AccordionBox\",\n  data() {\n    return {\n      track: markRaw(new PointerTracker()),\n      panes: [] as AccordionPaneHeight[],\n      activePane: 0,\n      onResizeObserver: null as ResizeObserver | null,\n    }\n  },\n  props: {\n    collapseHeight: {\n      type: Number,\n      default: 30,\n    }\n  },\n  computed: {\n\n    /**\n     * Returns the accordion box's style.\n     * @returns\n     *  The accordion box's style.\n     */\n    boxStyle() {\n      let gridTemplateRows = this.panes.map(\n        o => `${ o.activeHeight + this.collapseHeight }px`\n      ).join(\" \");\n      return { gridTemplateRows }\n    }\n\n  },\n  \n  methods: {\n\n    /**\n     * Pane collapse behavior.\n     * @param event\n     *  The pointer event.\n     * @param i\n     *  The index of the pane.\n     */\n    onCollapse(event: PointerEvent, i: number) {\n      if(this.panes[i].collapsed) {\n        this.uncollapsePane(i);\n      } else {\n        this.collapsePane(i);\n      }\n    },\n\n    /**\n     * Collapses a pane.\n     * @param i\n     *  The index of the pane.\n     */\n    collapsePane(i: number) {\n      let p = this.panes;\n\n      // Cache heights\n      this.cacheHeights();\n\n      // Calculate next height\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\n      let elementHeight = this.getAvailableHeight(); \n      let nextHeight = currentHeight - p[i].cachedHeight;\n      \n      // Collapse window\n      p[i].collapsed = true;\n      p[i].activeHeight = 0;\n      p[i].uncollapsedHeight = p[i].cachedHeight;\n\n      // Return collapsed height if room available.\n      if(nextHeight < elementHeight) {\n        let available = elementHeight - nextHeight;\n        let availableDelta = Math.min(available, p[i].cachedHeight);\n        for(let j = p.length - 1; 0 <= j; j--) {\n          if(p[j].collapsed) {\n            continue;\n          }\n          p[j].activeHeight += availableDelta;\n          break;\n        }\n      }\n\n      // Cache heights\n      this.cacheHeights();\n\n    },\n\n    /**\n     * Uncollapses a pane.\n     * @param i\n     *  The index of the pane.\n     */\n    uncollapsePane(i: number) {\n      let p = this.panes;\n      let neededHeight = p[i].uncollapsedHeight;\n      \n      // Cache heights\n      this.cacheHeights();\n\n      // Take collapsed height from element if available\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\n      let elementHeight = this.getAvailableHeight();\n      if(currentHeight === 0) {\n        p[i].activeHeight += elementHeight;\n        neededHeight -= Math.min(neededHeight, elementHeight);\n      }\n\n      // Take collapsed height from panes if available\n      for(let j = p.length - 1; 0 <= j; j--) {\n        if(p[j].collapsed) {\n          continue;\n        }\n        let available = p[j].cachedHeight - p[j].minHeight;\n        let availableDelta = Math.min(available, neededHeight);\n        p[j].activeHeight -= availableDelta;\n        p[i].activeHeight += availableDelta;\n        neededHeight -= availableDelta;\n      }\n\n      // Snap to minimum height if needed\n      p[i].activeHeight = Math.max(p[i].activeHeight, p[i].minHeight);\n      p[i].collapsed = false;\n\n      // Cache heights\n      this.cacheHeights();\n\n    },\n\n    /**\n     * Header drag start behavior.\n     * @param event\n     *  The pointer event.\n     * @param i\n     *  The index of the header.\n     */\n    startDrag(event: PointerEvent, i: number) {\n      // Cache heights\n      this.cacheHeights();\n      // Set active pane\n      this.activePane = i;\n      // Capture pointer\n      this.track.capture(event, this.onDrag);\n      // Configure stop drag\n      document.addEventListener(\"pointerup\", this.stopDrag, { once: true });\n    },\n\n    /**\n     * Header drag behavior.\n     * @param event\n     *  The pointer event.\n     * @param track\n     *  The mouse tracker.\n     */\n    onDrag(_: PointerEvent, track: PointerTracker) {\n      let p = this.panes;\n\n      // Ignore no movement\n      if(track.movementY === 0)\n        return;\n      \n      // Reset panes\n      p.forEach(o => o.activeHeight = o.cachedHeight);\n      \n      // Drag above origin\n      if(track.deltaY < 0) {\n        // Select grow pane\n        let growPane = -1;\n        for(let i = this.activePane!; i < p.length; i++) {\n          if(!p[i].collapsed) {\n            growPane = i;\n            break;\n          }\n        }\n        if(growPane === -1) {\n          return;\n        }\n        // Resize grow pane\n        let remainingDelta = Math.abs(track.deltaY);\n        for(let i = this.activePane! - 1; 0 <= i; i--) {\n          if(p[i].collapsed) {\n            continue;\n          }\n          let available = p[i].cachedHeight - p[i].minHeight;\n          let availableDelta = Math.min(available, remainingDelta);\n          p[i].activeHeight = p[i].cachedHeight - availableDelta;\n          remainingDelta -= availableDelta;\n        }\n        let growAmount = Math.abs(track.deltaY) - remainingDelta;\n        p[growPane].activeHeight = p[growPane].cachedHeight + growAmount; \n      }\n\n      // Drag below origin\n      else {\n        // Select grow pane\n        let growPane = -1;\n        for(let i = this.activePane! - 1; 0 <= i; i--) {\n          if(!p[i].collapsed) {\n            growPane = i;\n            break;\n          }\n        }\n        if(growPane === -1) {\n          return;\n        }\n        // Resize grow pane\n        let remainingDelta = track.deltaY;\n        for(let i = this.activePane!; i < p.length; i++) {\n          if(p[i].collapsed) {\n            continue;\n          }\n          let available = p[i].cachedHeight - p[i].minHeight;\n          let availableDelta = Math.min(available, remainingDelta);\n          p[i].activeHeight = p[i].cachedHeight - availableDelta;\n          remainingDelta -= availableDelta;\n        }\n        let growAmount = track.deltaY - remainingDelta;\n        p[growPane].activeHeight = p[growPane].cachedHeight + growAmount;\n      }\n      \n    },\n\n    /**\n     * Header drag stop behavior.\n     * @param event\n     *  The pointer event.\n     */\n    stopDrag(event: PointerEvent) {\n      // Release pointer\n      this.track.release(event);\n      // Cache heights\n      this.cacheHeights();\n    },\n\n    /**\n     * Refits the panes inside the container.\n     */\n    refit() {\n      let p = this.panes;\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\n      let elementHeight = this.getAvailableHeight();\n      \n      // If no height, bail\n      if(currentHeight === 0) {\n        return;\n      }\n\n      // Grow\n      else if(currentHeight <= elementHeight) {\n        let proportions = p.map(o => o.cachedHeight / currentHeight);\n        for(let i = 0; i < p.length; i++) {\n          p[i].activeHeight = elementHeight * proportions[i];\n        }\n      }\n\n      // Shrink\n      else {\n        let minElementHeight = p.reduce((a,o) => a + (o.collapsed ? 0 : o.minHeight), 0);\n        let n = currentHeight - Math.max(minElementHeight, elementHeight);\n        let d = currentHeight - minElementHeight;\n        let percentToMinimum = d !== 0 ? n / d : 1;\n        for(let i = 0; i < p.length; i++) {\n          if(p[i].collapsed) {\n            continue;\n          }\n          let delta = (p[i].cachedHeight - p[i].minHeight) * percentToMinimum;\n          p[i].activeHeight = p[i].cachedHeight - delta;\n        }\n      }\n\n    },\n\n    /**\n     * Resets the panes inside the container.\n     */\n    reset() {\n      if(!this.$slots.default)\n        return;\n\n      // Setup panes and heights\n      let panes: AccordionPaneHeight[] = [];\n      let units: number[] = [];\n      for(let slot of this.$slots.default()) {\n        units.push(slot.props?.units ?? 1);\n        panes.push({\n          minHeight: slot.props?.minHeight ?? 100,\n          activeHeight: 0,\n          cachedHeight: 0,\n          uncollapsedHeight: 0,\n          collapsed: slot.props?.collapsed ?? false\n        });\n      }\n      let totalHeight = this.getAvailableHeight();\n\n      // Configure base height\n      let totalUnits = units.reduce((a,b) => a+b);\n      for(let i = 0; i < panes.length; i++) {\n        let p = panes[i];\n        let height = totalHeight * (units[i] / totalUnits)\n        p.cachedHeight = Math.max(p.minHeight, height);\n      }\n      this.panes = panes;\n\n      // Fit to container\n      this.refit();\n\n      // Apply collapse state\n      for(let i = 0; i < this.panes.length; i++) {\n        if(this.panes[i].collapsed)\n          this.collapsePane(i);\n      }\n\n    },\n\n    /**\n     * Returns the amount of useable space available from the container.\n     */\n    getAvailableHeight() {\n      let height = this.$el.clientHeight;\n      if(!this.$slots.default) {\n        return height;\n      } else {\n        let totalPanes = this.$slots.default().length;\n        return height - (totalPanes * this.collapseHeight);\n      }\n    },\n\n    /**\n     * Caches the height of each pane.\n     */\n    cacheHeights() {\n      for(let pane of this.panes) {\n        pane.cachedHeight = pane.activeHeight;\n      }\n    }\n\n  },\n  mounted() {\n    // Configure resize observer\n    this.onResizeObserver = new ResizeObserver(() => this.refit());\n    this.onResizeObserver.observe(this.$el);\n    // Reset boxes\n    this.reset();\n  },\n  unmounted() {\n    this.onResizeObserver!.disconnect();\n  },\n  render() {\n    let children = [];\n    if(this.$slots.default) {\n      let _slots = this.$slots.default();\n      // Generate accordion boxes\n      for(let i = 0; i < _slots.length; i++) {\n        let slot = _slots[i];\n        // Generate handle\n        let handle = h(\n          \"div\",\n          {\n            class: \"accordion-box-handle\",\n            onPointerup: (e: PointerEvent) => this.stopDrag(e),\n            onPointerdown: (e: PointerEvent) => this.startDrag(e, i)\n          }\n        );\n        // Generate head\n        let head = h(\n          \"div\",\n          {\n            class: \"accordion-box-head\",\n            style: { height: `${ this.$props.collapseHeight }px` },\n            onClick: (e: PointerEvent) => this.onCollapse(e, i)\n          },\n          [\n            h(\n              CollapseArrow,\n              { \n                class: \"collapse-arrow\",\n                collapsed: this.panes[i]?.collapsed\n              }\n            ),\n            h(\"p\", slot.props?.name.toLocaleUpperCase())\n          ]\n        );\n        // Generate body\n        let body = h(\"div\", { class: \"accordion-box-body\" }, slot);\n        // Generate box\n        let box = h(\n          \"div\",\n          { \n            class: [\n              \"accordion-box\",\n              { collapsed: this.panes[i]?.collapsed }\n            ]\n          },\n          [handle, head, body]\n        );\n        // Add box\n        children.push(box);\n      }\n    }\n    // Return accordion box container\n    return h(\n      \"div\",\n      { \n        class: \"accordion-box-container\",\n        style: this.boxStyle,\n      },\n      children\n    )\n  },\n});\n\ntype AccordionPaneHeight = {\n  minHeight: number,\n  activeHeight: number,\n  cachedHeight: number,\n  uncollapsedHeight: number,\n  collapsed: boolean\n}\n\n","import script from \"./AccordionBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AccordionBox.vue?vue&type=script&lang=ts\"\n\nimport \"./AccordionBox.vue?vue&type=style&index=0&id=39ee0bdf&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39ee0bdf\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-22255fa2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"accordion-pane-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"AccordionPane\",\n  props: {\n    name: {\n      type: String,\n      required: true \n    },\n    units: {\n      type: Number,\n      default: 1\n    },\n    minHeight: {\n      type: Number,\n      default: 100\n    },\n    collapsed: {\n      type: Boolean,\n      default: false\n    }\n  }\n});\n","import { render } from \"./AccordionPane.vue?vue&type=template&id=22255fa2&scoped=true&ts=true\"\nimport script from \"./AccordionPane.vue?vue&type=script&lang=ts\"\nexport * from \"./AccordionPane.vue?vue&type=script&lang=ts\"\n\nimport \"./AccordionPane.vue?vue&type=style&index=0&id=22255fa2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-22255fa2\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5d47093b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"object-editor-element\" }\nconst _hoisted_2 = {\n  key: 1,\n  class: \"no-prop\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-prop\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DictionaryFieldContents = _resolveComponent(\"DictionaryFieldContents\")!\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.property)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n          (_ctx.hasEditableProperties)\n            ? (_openBlock(), _createBlock(_component_ScrollBox, {\n                key: 0,\n                alwaysShowScrollBar: true,\n                scrollColor: \"#1f1f1f\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DictionaryFieldContents, {\n                    class: \"contents\",\n                    property: _ctx.property,\n                    onChange: _ctx.onChange,\n                    onCreate: _ctx.onCreate,\n                    onDelete: _ctx.onDelete\n                  }, null, 8, [\"property\", \"onChange\", \"onCreate\", \"onDelete\"])\n                ]),\n                _: 1\n              }))\n            : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, [\n                _renderSlot(_ctx.$slots, \"no-props\", {}, undefined, true)\n              ]))\n        ], 64))\n      : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, [\n          _renderSlot(_ctx.$slots, \"no-prop\", {}, undefined, true)\n        ]))\n  ]))\n}","\nimport * as Page from \"@/store/Commands/PageCommands\";\n// Dependencies\nimport { mapMutations } from \"vuex\";\nimport { defineComponent, PropType } from \"vue\";\nimport { \n  DateProperty,\n  DictionaryProperty,\n  EnumProperty,\n  ListProperty,\n  NumberProperty,\n  Property,\n  PropertyType,\n  StringProperty\n} from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\nimport DictionaryFieldContents from \"@/components/Controls/Fields/DictionaryFieldContents.vue\";\n\nexport default defineComponent({\n  name: \"PropertyEditor\",\n  props: {\n    property: {\n      type: Object as PropType<DictionaryProperty>,\n      default: undefined\n    }\n  },\n  computed: {\n\n    /**\n     * Tests if the property has editable subproperties.\n     * @returns\n     *  True if the property has editable subproperties, false otherwise.\n     */\n    hasEditableProperties(): boolean {\n      if(!this.property) {\n        return false;\n      }\n      for(let value of this.property.value.values()) {\n        if(value.descriptor.is_visible ?? true)\n          return true;\n      }\n      return false;\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store actions\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Field change behavior.\n     * @param property\n     *  The field's property.\n     * @param value\n     *  The field's new value.\n     */\n    onChange(property: Property, value: any) {\n      switch(property.type) {\n        case PropertyType.Int:\n        case PropertyType.Float:\n          if(property instanceof NumberProperty) {\n            this.execute(new Page.SetNumberProperty(property, value));\n          }\n          break;\n        case PropertyType.String:\n          if(property instanceof StringProperty) {\n            this.execute(new Page.SetStringProperty(property, value));\n          }\n          break;\n        case PropertyType.Date:\n          if(property instanceof DateProperty) {\n            this.execute(new Page.SetDateProperty(property, value));\n          }\n          break;\n        case PropertyType.Enum:\n          if(property instanceof EnumProperty) {\n            this.execute(new Page.SetEnumProperty(property, value));\n          }\n          break;\n      }\n    },\n\n    /**\n     * Field create subproperty behavior.\n     * @param property\n     *  The field's property.\n     */\n    onCreate(property: Property) {\n      switch(property.type) {\n        case PropertyType.List:\n          if(property instanceof ListProperty) {\n            this.execute(new Page.CreateSubproperty(property));\n          }\n          break;\n      }\n    },\n\n    /**\n     * Field delete subproperty behavior.\n     * @param property\n     *  The field's property.\n     * @param id\n     *  The subproperty's id.\n     */\n    onDelete(property: Property, id: string) {\n      switch(property.type) {\n        case PropertyType.List:\n          if(property instanceof ListProperty) {\n            this.execute(new Page.DeleteSubproperty(property, id));\n          }\n          break;\n      }\n    }\n\n  },\n  components: { ScrollBox, DictionaryFieldContents }\n});\n","import { render } from \"./PropertyEditor.vue?vue&type=template&id=5d47093b&scoped=true&ts=true\"\nimport script from \"./PropertyEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./PropertyEditor.vue?vue&type=script&lang=ts\"\n\nimport \"./PropertyEditor.vue?vue&type=style&index=0&id=5d47093b&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5d47093b\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-28e3dbca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"validator-problems-element\" }\nconst _hoisted_2 = { class: \"content\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"icon\" }, \"\", -1))\nconst _hoisted_5 = { class: \"message\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"icon\" }, \"\", -1))\nconst _hoisted_8 = { class: \"message\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (0 < _ctx.getValidationErrors.length || 0 < _ctx.getValidationWarnings.length)\n      ? (_openBlock(), _createBlock(_component_ScrollBox, {\n          key: 0,\n          class: \"scrollbox\",\n          alwaysShowScrollBar: true,\n          scrollColor: \"#1f1f1f\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getValidationErrors, (error) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  class: \"validation-result error\",\n                  key: error,\n                  onClick: ($event: any) => (_ctx.focus(error.object))\n                }, [\n                  _hoisted_4,\n                  _createElementVNode(\"p\", _hoisted_5, _toDisplayString(error.reason), 1)\n                ], 8, _hoisted_3))\n              }), 128)),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getValidationWarnings, (warning) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  class: \"validation-result warning\",\n                  key: warning,\n                  onClick: ($event: any) => (_ctx.focus(warning.object))\n                }, [\n                  _hoisted_7,\n                  _createElementVNode(\"p\", _hoisted_8, _toDisplayString(warning.reason), 1)\n                ], 8, _hoisted_6))\n              }), 128))\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport * as Store from \"@/store/StoreTypes\";\n// Dependencies\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapMutations, mapState } from \"vuex\";\n// Components\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\n\nexport default defineComponent({\n  name: \"ValidatorProblems\",\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      ctx(state: Store.ApplicationStore): Store.ApplicationStore {\n        return state;\n      },\n      editor(state: Store.ApplicationStore): Store.PageEditor {\n        return state.activePage;\n      }\n    }),\n\n    ...mapGetters(\"ApplicationStore\", [\n        \"getValidationErrors\", \"getValidationWarnings\"\n    ])\n  \n  },\n  methods: {\n\n    /**\n     * Application Store actions\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Focuses the camera on an object.\n     * @param id\n     *  The id of the object.\n     */\n    focus(id: string) {\n      let obj = this.editor.page.lookup(id);\n      if(obj === this.editor.page) {\n        this.execute(new Page.UnselectDescendants(this.editor.page));\n      } else if(obj) {\n        this.execute(new Page.UnselectDescendants(this.editor.page));\n        this.execute(new Page.SelectObject(obj));\n        this.execute(new Page.MoveCameraToSelection(this.ctx, this.editor.page))\n      }\n    }\n\n  },\n  components: { ScrollBox }\n});\n","import { render } from \"./ValidatorProblems.vue?vue&type=template&id=28e3dbca&scoped=true&ts=true\"\nimport script from \"./ValidatorProblems.vue?vue&type=script&lang=ts\"\nexport * from \"./ValidatorProblems.vue?vue&type=script&lang=ts\"\n\nimport \"./ValidatorProblems.vue?vue&type=style&index=0&id=28e3dbca&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28e3dbca\"]])\n\nexport default __exports__","\nimport * as Store from \"@/store/StoreTypes\";\n// Dependencies\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapState } from \"vuex\";\nimport { DictionaryProperty, PageModel } from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport AccordionBox from \"@/components/Containers/AccordionBox.vue\";\nimport AccordionPane from \"@/components/Containers/AccordionPane.vue\";\nimport PropertyEditor from \"@/components/Elements/PropertyEditor.vue\";\nimport ValidatorProblems from \"@/components/Elements/ValidatorProblems.vue\";\n\nexport default defineComponent({\n  name: \"EditorSidebar\",\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      page(state: Store.ApplicationStore): PageModel {\n        return state.activePage.page;\n      },\n    }),\n\n    ...mapGetters(\"ApplicationStore\", [\n      \"hasSelection\", \"getSelection\"\n    ]),\n\n    /**\n     * Returns the currently selected object's properties.\n     * @returns\n     *  The currently selected object's properties.\n     */\n    selected(): DictionaryProperty | undefined {\n      if(this.hasSelection === 0) {\n        return this.page.props;\n      } else if(this.hasSelection === 1) {\n        return this.getSelection[0].props;\n      }\n      return undefined;\n    }\n\n  },\n  components: { \n    AccordionBox,\n    AccordionPane,\n    PropertyEditor,\n    ValidatorProblems\n  }\n});\n","import { render } from \"./EditorSidebar.vue?vue&type=template&id=09fcd1e8&scoped=true&ts=true\"\nimport script from \"./EditorSidebar.vue?vue&type=script&lang=ts\"\nexport * from \"./EditorSidebar.vue?vue&type=script&lang=ts\"\n\nimport \"./EditorSidebar.vue?vue&type=style&index=0&id=09fcd1e8&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-09fcd1e8\"]])\n\nexport default __exports__","\nimport * as Store from \"@/store/StoreTypes\";\nimport Configuration from \"@/assets/builder.config\"\n// Dependencies\nimport { clamp } from \"./assets/scripts/BlockDiagram\";\nimport { PointerTracker } from \"./assets/scripts/PointerTracker\";\nimport { mapMutations, mapState } from 'vuex';\nimport { LoadFile, LoadSettings } from './store/Commands/AppCommands';\nimport { defineComponent, markRaw, ref } from 'vue';\n// Components\nimport AppTitleBar from \"@/components/Elements/AppTitleBar.vue\";\nimport AppHotkeyBox from \"@/components/Elements/AppHotkeyBox.vue\";\nimport BlockDiagram from \"@/components/Elements/BlockDiagram.vue\";\nimport AppFooterBar from \"@/components/Elements/AppFooterBar.vue\";\nimport EditorSidebar from \"@/components/Elements/EditorSidebar.vue\";\n\nconst Handle = {\n  None   : 0,\n  Right  : 1\n}\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    return { body: ref<HTMLElement | null>(null) };\n  },\n  data() {\n    return {\n      Handle,\n      bodyWidth: -1,\n      bodyHeight: -1,\n      frameSize: {\n        [Handle.Right]: 350\n      },\n      minFrameSize: {\n        [Handle.Right]: 310\n      },\n      drag: {\n        handle: Handle.None,\n        track: markRaw(new PointerTracker())\n      },\n      onResizeObserver: null as ResizeObserver | null\n    }\n  },\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      context(state: Store.ApplicationStore): Store.ApplicationStore {\n        return state;\n      }\n    }),\n\n    /**\n     * Returns the current grid layout.\n     * @returns\n     *  The current grid layout.\n     */\n    gridLayout(): { gridTemplateColumns: string } {\n      let r = this.frameSize[Handle.Right];\n      return {\n        gridTemplateColumns: `minmax(0, 1fr) ${ r }px`\n      }\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Application Store mutations\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Resize handle drag start behavior.\n     * @param event\n     *  The pointer event.\n     * @param handle\n     *  The id of the handle being dragged.\n     */\n    startResize(event: PointerEvent, handle: number) {\n      let origin = this.frameSize[handle];\n      this.drag.handle = handle;\n      this.drag.track.capture(event, (_, track) => {\n        this.onResize(origin, track);\n      });\n      document.addEventListener(\"pointerup\", this.stopResize, { once: true });\n    },\n\n    /**\n     * Resize handle drag behavior.\n     * @param origin\n     *  The frame's origin.\n     * @param track\n     *  The mouse tracker.\n     */\n    onResize(origin: number, track: PointerTracker) {\n      switch (this.drag.handle) {\n        default:\n        case Handle.None:\n          break;\n        case Handle.Right:\n          this.setRightFrameSize(origin - track.deltaX);\n          break;\n      }\n    },\n\n    /**\n     * Resize handle drag stop behavior.\n     * @param event\n     *  The pointer event.\n     */\n    stopResize(event: PointerEvent) {\n      this.drag.handle = Handle.None;\n      this.drag.track.release(event);\n    },\n\n    /**\n     * Sets the size of the right frame.\n     * @param size\n     *  The new size of the right frame.\n     */\n    setRightFrameSize(size: number) {\n      let max = this.bodyWidth;\n      let min = this.minFrameSize[Handle.Right];\n      this.frameSize[Handle.Right] = clamp(size, min, max);\n    }\n\n  },\n  async created() {\n    // Import settings\n    let settings;\n    if(Configuration.is_web_hosted) {\n        settings = await (await fetch(\"./settings.json\")).json();\n    } else {\n        settings = require(\"../public/settings.json\");\n    }\n    // Load settings\n    this.execute(new LoadSettings(this.context, settings));\n\n\n    const div_report_pk = document.querySelector('#report_pk') as HTMLElement;\n    const report_pk = div_report_pk.getAttribute('value');\n\n    const div_finding_pk = document.querySelector('#finding_pk') as HTMLElement;\n    const finding_pk = div_finding_pk.getAttribute('value');\n\n    const div_attackflow_pk = document.querySelector('#attackflow_pk') as HTMLElement;\n    const attackflow_pk = div_attackflow_pk.getAttribute('value');\n\n    const div_attackflow_afb = document.querySelector('#attackflow_afb') as HTMLElement;\n    let attackflow_afb: string = div_attackflow_afb.getAttribute('value') as string;\n\n    // Load AFB file\n    if (attackflow_pk != \"None\") {\n        this.execute(await LoadFile.fromFile(this.context,attackflow_afb));\n    }else{\n        // Load empty file\n        this.execute(await LoadFile.fromNew(this.context));\n    }\n\n\n\n    // Load file from query parameters, if possible\n    let params = new URLSearchParams(window.location.search);\n    let src = params.get(\"src\");\n    if(src) {\n      try {\n        // TODO: Incorporate loading dialog\n        this.execute(await LoadFile.fromUrl(this.context, src));\n      } catch(ex) {\n        console.error(`Failed to load file from url: '${ src }'`);\n        console.error(ex);\n      }\n    }\n  },\n  mounted() {\n    this.bodyWidth = this.body!.clientWidth;\n    this.bodyHeight = this.body!.clientHeight;\n    this.onResizeObserver = new ResizeObserver(() => {\n      // Update current body size\n      this.bodyWidth = this.body!.clientWidth;\n      this.bodyHeight = this.body!.clientHeight;\n      // Restrict bottom and right frames\n      this.setRightFrameSize(this.frameSize[Handle.Right]);\n    });\n    this.onResizeObserver.observe(this.body!);\n    \n  },\n  unmounted() {\n    this.onResizeObserver?.disconnect();\n  },\n  components: {\n    AppHotkeyBox,\n    AppTitleBar,\n    BlockDiagram,\n    AppFooterBar,\n    EditorSidebar\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=e3ab4db0&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=e3ab4db0&lang=css\"\n\nimport exportComponent from \"/home/rout/Documents/petereport/attack_flow/attack_flow_builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { PageEditor } from \"@/store/PageEditor\"\nimport { DiagramValidator } from \"@/assets/scripts/DiagramValidator/DiagramValidator\"\nimport { DiagramPublisher } from \"@/assets/scripts/DiagramPublisher/DiagramPublisher\"\nimport { BlockDiagramSchema } from \"@/assets/scripts/BlockDiagram/DiagramFactory\"\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\"\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Stores  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Central Module Store\n */\nexport type ModuleStore = {\n    ApplicationStore: ApplicationStore,\n    ContextMenuStore: ContextMenuStore,\n    HotkeyStore: HotkeyStore\n}\n\n\n/**\n * Application Store\n */\nexport type ApplicationStore = {\n    settings: AppSettings,\n    clipboard: DiagramObjectModel[],\n    publisher: DiagramPublisher | undefined,\n    pages: Map<string, PageEditor>,\n    activePage: PageEditor\n}\n\n/**\n * Context Menu Store\n */\nexport type ContextMenuStore = {}\n\n/**\n * Hotkey Store\n */\nexport type HotkeyStore = {}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. App Settings  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Base App Settings\n */\nexport const BaseAppSettings: AppSettings = {\n    file: {\n        image_export: {\n            padding: 0,\n        }\n    },\n    edit: {\n        clone_offset: [0, 0]\n    },\n    view: {\n        diagram: {\n            display_grid: true,\n            display_shadows: true,\n            display_debug_mode: false,\n            render_high_quality: true,\n            disable_shadows_at: 0\n        }\n    },\n    hotkeys: {\n        file: { \n            new_file: \"\",\n            open_file: \"\",\n            save_file: \"\",\n            save_image: \"\",\n            save_select_image: \"\",\n            publish_file: \"\",\n            open_library: \"\",\n            save_library: \"\"\n        },\n        edit: {\n            undo: \"\",\n            redo: \"\",\n            cut: \"\",\n            copy: \"\",\n            paste: \"\",\n            delete: \"\",\n            duplicate: \"\",\n            select_all: \"\"\n        },\n        layout: {\n            selection_to_front: \"\",\n            selection_to_back: \"\",\n            bring_selection_forward: \"\",\n            send_selection_backward: \"\",\n            align_left: \"\",\n            align_center: \"\",\n            align_right: \"\",\n            align_top: \"\",\n            align_middle: \"\",\n            align_bottom: \"\",\n            group: \"\",\n            ungroup: \"\",\n            open_group: \"\",\n            close_group: \"\"\n        },\n        view: {\n            toggle_grid: \"\",\n            toggle_shadows: \"\",\n            reset_view: \"\",\n            zoom_in: \"\",\n            zoom_out: \"\",\n            fullscreen: \"\",\n            jump_to_selection: \"\",\n            jump_to_parents: \"\",\n            jump_to_children: \"\",\n            toggle_debug_view: \"\",\n        },\n        select: {\n            many: \"\"\n        }\n    }\n}\n\n/**\n * App Settings File\n */\nexport type AppSettings = {\n    file: {\n        image_export: {\n            padding: number\n        }\n    },\n    edit: {\n        clone_offset: [number, number]\n    },\n    view: {\n        diagram: DiagramDisplaySettings\n    },\n    hotkeys: {\n        file: FileHotkeys,\n        edit: EditHotkeys,\n        layout: LayoutHotkeys,\n        view: ViewHotkeys,\n        select: SelectHotkeys\n    }\n}\n\n/**\n * Diagram display settings\n */\nexport type DiagramDisplaySettings = {\n    display_grid: boolean,\n    display_shadows: boolean,\n    display_debug_mode: boolean,\n    render_high_quality: boolean,\n    disable_shadows_at: number\n}\n\n/**\n * File hotkeys\n */\nexport type FileHotkeys = { \n    new_file: string,\n    open_file: string,\n    save_file: string,\n    save_image: string,\n    save_select_image: string,\n    publish_file: string,\n    open_library: string,\n    save_library: string\n}\n\n/**\n * Edit hotkeys\n */\nexport type EditHotkeys = {\n    undo: string,\n    redo: string,\n    cut: string,\n    copy: string,\n    paste: string,\n    delete: string,\n    duplicate: string,\n    select_all: string\n}\n\n/**\n * Layout hotkeys\n */\nexport type LayoutHotkeys = {\n    selection_to_front: string,\n    selection_to_back: string,\n    bring_selection_forward: string,\n    send_selection_backward: string,\n    align_left: string,\n    align_center: string,\n    align_right: string,\n    align_top: string,\n    align_middle: string,\n    align_bottom: string,\n    group: string,\n    ungroup: string,\n    open_group: string,\n    close_group: string\n}\n\n/**\n * View hotkeys\n */\nexport type ViewHotkeys = {\n    toggle_grid: string,\n    toggle_shadows: string,\n    reset_view: string,\n    zoom_in: string,\n    zoom_out: string,\n    jump_to_selection: string,\n    jump_to_parents: string,\n    jump_to_children: string,\n    fullscreen: string,\n    toggle_debug_view: string\n}\n\n/**\n * Select hotkeys\n */\nexport type SelectHotkeys = {\n    many: string\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. App Configuration  /////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * App Configuration File\n */\nexport type AppConfiguration = {\n    is_web_hosted: boolean,\n    file_type_name: string,\n    file_type_extension: string,\n    schema: BlockDiagramSchema,\n    menus: {\n        help_menu: {\n            help_links: { text: string, url: string }[]\n        }\n    },\n    validator?: typeof DiagramValidator,\n    publisher?: typeof DiagramPublisher\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Type Helpers  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Returns all keys of object type `T` whose value matches type `V`.\n * \n * Typescript Reference: \n *  - {@link https://www.typescriptlang.org/docs/handbook/2/mapped-types.html#mapping-modifiers Mapped Type Modifiers}\n *  - {@link https://www.typescriptlang.org/docs/handbook/2/conditional-types.html Conditional Types}\n *  - {@link https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html Index Access Types} \n */\nexport type ObjectKeysOfType<T, V> = { [K in keyof T]-?: T[K] extends V ? K : never }[keyof T];\n\n\n/**\n * Returns all valid key/value pairs from type `T`.\n */\nexport type KeyValuePairs<T> = {\n    [K in keyof T] : {\n        key: K,\n        value: T[K]\n    }\n}[keyof T];\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  5. Page Editor  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport * from \"./PageEditor\";\n","import Configuration from \"@/assets/builder.config\";\nimport { Module } from \"vuex\"\nimport { PageEditor } from \"@/store/PageEditor\";\nimport { AppCommand } from \"@/store/Commands/AppCommand\";\nimport { PageCommand } from \"@/store/Commands/PageCommand\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\nimport { ValidationErrorResult, ValidationWarningResult } from \"@/assets/scripts/DiagramValidator\";\nimport { ModuleStore, ApplicationStore, BaseAppSettings } from \"@/store/StoreTypes\"\n\nconst Publisher = Configuration.publisher ? \n    new Configuration.publisher() : undefined;\n\nconst DummyPage = PageEditor.createDummy();\n\nexport default {\n    namespaced: true,\n    state: {\n        settings: BaseAppSettings,\n        clipboard: [],\n        publisher: Publisher,\n        pages: new Map([[ DummyPage.id, DummyPage ]]),\n        activePage: DummyPage\n    },\n    getters: {\n\n        /**\n         * Tests if the clipboard has contents.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  True if the clipboard has contents, false otherwise.\n         */\n        hasClipboardContents(state): boolean {\n            return 0 < state.clipboard.length;\n        },\n\n        /**\n         * Tests if the active page has a selection.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The number of items selected.\n         */\n        hasSelection(state): number {\n            let s = [...state.activePage.page.getSubtree(o => o.isSelected())];\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? s : s).length;\n        },\n\n        /**\n         * Returns the active page's selection.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The selected objects.\n         */\n        getSelection(state): DiagramObjectModel[] {\n            let s = [...state.activePage.page.getSubtree(o => o.isSelected())];\n            // Use trigger to trip the reactivity system\n            return state.activePage.trigger.value ? s : s;\n        },\n\n        /**\n         * Tests if the active page represents a valid diagram per the\n         * configured validator. If the application is not configured with a\n         * validator, true is returned by default.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  True if the page is valid, false otherwise.\n         */\n        isValid(state): boolean {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).isValid();\n        },\n\n        /**\n         * Returns the active page's validation errors. If the application is\n         * not configured with a validator, an empty array is returned.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The active page's validation errors.\n         */\n        getValidationErrors(state): ValidationErrorResult[] {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).getValidationErrors(); \n        },\n\n        /**\n         * Returns the active page's validation warnings. If the application is\n         * not configured with a validator, an empty array is returned.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The active page's validation warnings.\n         */\n        getValidationWarnings(state): ValidationWarningResult[] {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).getValidationWarnings();\n        }\n\n    },\n    mutations: {\n\n        /**\n         * Executes an application command.\n         * @param state\n         *  The Vuex state. \n         * @param command\n         *  The application command.\n         */\n        execute(state, command: AppCommand | PageCommand) {\n            if(command instanceof PageCommand) {\n                // Ignore null page\n                if(command.page === PageCommand.NullPage)\n                    return;\n                // Execute command\n                let editor = state.pages.get(command.page);\n                if(editor) {\n                    editor.execute(command);\n                } else {\n                    throw new Error(\n                        `'${ command.page }' is not a page.`\n                    );\n                }\n            } else {\n                command.execute();\n            }\n        }\n\n    }\n} as Module<ApplicationStore, ModuleStore>\n","import Configuration from \"@/assets/builder.config\";\nimport * as App from \"@/store/Commands/AppCommands\";\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport { Module } from \"vuex\";\nimport { ContextMenuStore, ModuleStore } from \"../StoreTypes\";\nimport { ContextMenu, ContextMenuSection, ContextMenuSubmenu, MenuType } from \"@/assets/scripts/ContextMenuTypes\";\nimport { Namespace, titleCase } from \"@/assets/scripts/BlockDiagram\";\nimport { SpawnObject } from \"@/store/Commands/PageCommands\";\n\nexport default {\n    namespaced: true,\n    getters: {\n\n\n        ///////////////////////////////////////////////////////////////////////\n        //  1. File Menu  /////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the file menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The file menu.\n         */\n        fileMenu(_s, getters, rootState): ContextMenu {\n            let ctx = rootState.ApplicationStore;\n            // Sections\n            let sections: ContextMenuSection[] = [\n                getters.openFileMenu,\n                getters.saveFileMenu,\n                ctx.publisher ? getters.publishFileMenu : null,\n                getters.PetereportFileMenu\n            ].filter(Boolean);\n            // Menu\n            return { text: \"Attack Flow File\", type: MenuType.Submenu, sections };\n        },\n\n        /**\n         * Returns the 'open file' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The 'open file' menu section.\n         */\n        openFileMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let file = ctx.settings.hotkeys.file;\n            return {\n                id: \"open_file_options\",\n                items: [\n                    {\n                        text: \"New File\",\n                        type: MenuType.Item,\n                        data: () => App.LoadFile.fromNew(ctx),\n                        shortcut: file.new_file,\n                    },\n                    {\n                        text: `Open File...`,\n                        type: MenuType.Item,\n                        data: () => App.LoadFile.fromFileSystem(ctx),\n                        shortcut: file.open_file,\n                    }\n                ],\n            }\n        },\n        \n        /**\n         * Returns the 'Petereport file' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The 'save file' menu section.\n         */\n        PetereportFileMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let file = ctx.settings.hotkeys.file;\n            let page = ctx.activePage.page;\n\n            return {\n                id: \"save_petereport_options\",\n                items: [\n                    {\n                        text: \"Save AttackFlow in Petereport and exit\",\n                        type: MenuType.Item,\n                        data: () => new App.SavePageToDevicePetereport(ctx, page.id)\n                        //shortcut: file.save_file\n                    }\n\n                ]\n            }\n        },\n\n        /**\n         * Returns the 'save file' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The 'save file' menu section.\n         */\n        saveFileMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let file = ctx.settings.hotkeys.file;\n            let page = ctx.activePage.page;\n            return {\n                id: \"save_file_options\",\n                items: [\n\n                    {\n                        text: \"Save as AFB file\",\n                        type: MenuType.Item,\n                        data: () => new App.SavePageToDevice(ctx, page.id),\n                        shortcut: file.save_file\n                    },\n\n                    {\n                        text: \"Save as Image\",\n                        type: MenuType.Item,\n                        data: () => new App.SavePageImageToDevice(ctx, page.id),\n                        shortcut: file.save_image\n                    },\n                    {\n                        text: \"Save Selection as Image\",\n                        type: MenuType.Item,\n                        data: () => new App.SaveSelectionImageToDevice(ctx, page.id),\n                        shortcut: file.save_select_image,\n                        disabled: !rootGetters[\"ApplicationStore/hasSelection\"],\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the 'publish file' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The 'publish file' menu section.\n         */\n        publishFileMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let file = ctx.settings.hotkeys.file;\n            let page = ctx.activePage.page;\n            return {\n                id: \"publish_options\",\n                items: [\n                    {\n                        text: `Publish ${ Configuration.file_type_name }`,\n                        type: MenuType.Item,\n                        data: () => new App.PublishPageToDevice(ctx, page.id),\n                        shortcut: file.publish_file,\n                        disabled: !rootGetters[\"ApplicationStore/isValid\"]\n                    }\n                ]\n            }\n        },\n\n\n        ///////////////////////////////////////////////////////////////////////\n        //  2. Edit Menus  ////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the edit menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters.\n         * @returns\n         *  The edit menu.\n         */\n        editMenu(_s, getters): ContextMenu {\n            return {\n                text: \"Edit\",\n                type: MenuType.Submenu,\n                sections: [\n                    getters.undoRedoMenu,\n                    getters.clipboardMenu,\n                    getters.deleteMenu,\n                    getters.duplicateMenu,\n                    getters.createMenu,\n                    getters.selectAllMenu\n                ]\n            }\n        },\n\n        /**\n         * Returns the undo/redo menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The undo/redo menu section.\n         */\n        undoRedoMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            return {\n                id: \"undo_redo_options\",\n                items: [\n                    {\n                        text: \"Undo\",\n                        type: MenuType.Item,\n                        data: () => new Page.UndoPageCommand(ctx, page.id),\n                        shortcut: edit.undo,\n                        disabled: !ctx.activePage.canUndo()\n                    },\n                    {\n                        text: \"Redo\",\n                        type: MenuType.Item,\n                        data: () => new Page.RedoPageCommand(ctx, page.id),\n                        shortcut: edit.redo,\n                        disabled: !ctx.activePage.canRedo()\n                    }\n                ],\n            }\n        },\n\n        /**\n         * Returns the clipboard menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The clipboard menu section.\n         */\n        clipboardMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let canPaste = ctx.clipboard.length;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"clipboard_options\",\n                items: [\n                    {\n                        text: \"Cut\",\n                        type: MenuType.Item,\n                        data: () => new Page.CutSelectedChildren(ctx, page),\n                        shortcut: edit.cut,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Copy\",\n                        type: MenuType.Item,\n                        data: () => new App.CopySelectedChildren(ctx, page),\n                        shortcut: edit.copy,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Paste\",\n                        type: MenuType.Item,\n                        data: () => new Page.PasteToObject(ctx, page),\n                        shortcut: edit.paste,\n                        disabled: !canPaste\n                    }\n                ],\n            }\n        },\n\n        /**\n         * Returns the delete menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The delete menu section.\n         */\n        deleteMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"delete_options\",\n                items: [\n                    {\n                        text: \"Delete\",\n                        type: MenuType.Item,\n                        data: () => new Page.RemoveSelectedChildren(page),\n                        shortcut: edit.delete,\n                        disabled: !hasSelection\n                    }\n                ]\n            };\n        },\n\n        /**\n         * Returns the duplicate menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The duplicate menu section.\n         */\n        duplicateMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"duplicate_options\",\n                items: [\n                    {\n                        text: \"Duplicate\",\n                        type: MenuType.Item,\n                        data: () => new Page.DuplicateSelectedChildren(ctx, page),\n                        shortcut: edit.duplicate,\n                        disabled: !hasSelection\n                    }\n                ]\n            };\n        },\n\n        /**\n         * Returns the 'select all' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The 'select all' menu section.\n         */\n        selectAllMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            return {\n                id: \"select_options\",\n                items: [\n                    {\n                        text: \"Select All\",\n                        type: MenuType.Item,\n                        data: () => new Page.SelectChildren(page),\n                        shortcut: edit.select_all,\n                    }\n                ],\n            };\n        },\n\n        /**\n         * Returns the create menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The create menu section.\n         */\n        createMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            \n            // Build menu\n            let root = page.factory.getNamespace().get(\"@\")! as Namespace;\n            let menu = generateCreateMenu(\n                \"@\", root, (id) => new Page.SpawnObject(ctx, page, id)\n            );\n            \n            // Return menu\n            return {\n                id: \"create_options\",\n                items: [\n                    {\n                        text: \"Create\",\n                        type: MenuType.Submenu,\n                        sections: menu.sections\n                    }\n                ]\n            };\n\n        },\n\n        /**\n         * Returns the create at menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The create at menu section.\n         */\n        createAtMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let x = ctx.activePage.pointer.value.x;\n            let y = ctx.activePage.pointer.value.y;\n            \n            // Build menu\n            let root = page.factory.getNamespace().get(\"@\")! as Namespace;\n            let menu = generateCreateMenu(\n                \"@\", root, (id) => new Page.SpawnObject(ctx, page, id, x, y)\n            );\n            \n            // Return menu\n            return {\n                id: \"create_options\",\n                items: [\n                    {\n                        text: \"Create\",\n                        type: MenuType.Submenu,\n                        sections: menu.sections\n                    }\n                ]\n            };\n            \n        },\n\n\n        ///////////////////////////////////////////////////////////////////////\n        //  3. Layout Menus  //////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the time menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters.\n         * @returns\n         *  The time menu.\n         */\n        layoutMenu(_s, getters): ContextMenu {\n            return {\n                text: \"Layout\",\n                type: MenuType.Submenu,\n                sections: [\n                    getters.layeringMenu\n                ]\n            };\n        },\n\n\n        /**\n         * Returns the layering menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The layering menu section.\n         */\n        layeringMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let layout = ctx.settings.hotkeys.layout;\n            return {\n                id: \"layering_options\",\n                items: [\n                    {\n                        text: \"To Front\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.Top),\n                        shortcut: layout.selection_to_front,\n                    },\n                    {\n                        text: \"To Back\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.Bottom),\n                        shortcut: layout.selection_to_back,\n                    },\n                    {\n                        text: \"Bring Forward\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.OneAbove),\n                        shortcut: layout.bring_selection_forward,\n                    },\n                    {\n                        text: \"Send Backward\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.OneBelow),\n                        shortcut: layout.send_selection_backward,\n                    }\n                ],\n            }\n        },\n\n        \n        ///////////////////////////////////////////////////////////////////////\n        //  4. View Menus  ////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the view menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters.\n         * @returns\n         *  The view menu.\n         */\n        viewMenu(_s, getters): ContextMenu {\n            return {\n                text: \"View\",\n                type: MenuType.Submenu,\n                sections: [\n                    getters.diagramViewMenu,\n                    getters.diagramRenderMenu,\n                    getters.zoomMenu,\n                    getters.jumpMenu,\n                    getters.fullscreenMenu,\n                    getters.developerViewMenu\n                ]\n            }\n        },\n\n\n        /**\n         * Returns the diagram view menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The diagram view menu section.\n         */\n        diagramViewMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let view = ctx.settings.hotkeys.view;\n            let { \n                display_grid,\n                display_shadows\n            } = ctx.settings.view.diagram;\n            return {\n                id: \"diagram_view_options\",\n                items: [\n                    {\n                        text: \"Grid\",\n                        type: MenuType.Toggle,\n                        data: () => new App.ToggleGridDisplay(ctx),\n                        shortcut: view.toggle_grid,\n                        value: display_grid,\n                        keepMenuOpenOnSelect: true\n                    },\n                    {\n                        text: \"Shadows\",\n                        type: MenuType.Toggle,\n                        data: () => new App.ToggleShadowDisplay(ctx),\n                        shortcut: view.toggle_shadows,\n                        value: display_shadows,\n                        keepMenuOpenOnSelect: true\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the diagram render menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The diagram render menu section.\n         */\n        diagramRenderMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let render_high_quality = ctx.settings.view.diagram.render_high_quality;\n            return {\n                id: \"diagram_render_quality\",\n                items: [\n                    {\n                        text: \"Rendering – High Quality\",\n                        type: MenuType.Toggle,\n                        data: () => new App.SetRenderQuality(ctx, true),\n                        value: render_high_quality,\n                        keepMenuOpenOnSelect: true\n                    },\n                    {\n                        text: \"Rendering – Fast\",\n                        type: MenuType.Toggle,\n                        data: () => new App.SetRenderQuality(ctx, false),\n                        value: !render_high_quality,\n                        keepMenuOpenOnSelect: true\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the zoom menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The zoom menu section.\n         */\n        zoomMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let view = ctx.settings.hotkeys.view;\n            return {\n                id: \"zoom_options\",\n                items: [\n                    {\n                        text: \"Reset View\",\n                        type: MenuType.Item,\n                        data: () => new Page.ResetCamera(ctx, page),\n                        shortcut: view.reset_view\n                    },\n                    {\n                        text: \"Zoom In\",\n                        type: MenuType.Item,\n                        data: () => new Page.ZoomCamera(ctx, page, 0.25),\n                        shortcut: view.zoom_in\n                    },\n                    {\n                        text: \"Zoom Out\",\n                        type: MenuType.Item,\n                        data: () => new Page.ZoomCamera(ctx, page, -0.25),\n                        shortcut: view.zoom_out\n                    },\n                ]\n            }\n        },\n\n        /**\n         * Returns the jump menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The jump menu section.\n         */\n        jumpMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let view = ctx.settings.hotkeys.view;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"jump_options\",\n                items: [\n                    {\n                        text: \"Zoom to Selection\",\n                        type: MenuType.Item,\n                        data: () => new Page.MoveCameraToSelection(ctx, page),\n                        shortcut: view.jump_to_selection,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Jump to Parents\",\n                        type: MenuType.Item,\n                        data: () => new Page.MoveCameraToParents(ctx, page),\n                        shortcut: view.jump_to_parents,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Jump to Children\",\n                        type: MenuType.Item,\n                        data: () => new Page.MoveCameraToChildren(ctx, page),\n                        shortcut: view.jump_to_children,\n                        disabled: !hasSelection\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the fullscreen menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The fullscreen menu section.\n         */\n        fullscreenMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let view = ctx.settings.hotkeys.view;\n            return {\n                id: \"fullscreen_options\",\n                items: [\n                    {\n                        text: \"Fullscreen\",\n                        type: MenuType.Item,\n                        data: () => new App.SwitchToFullscreen(ctx),\n                        shortcut: view.fullscreen,\n                    }\n                ],\n            };\n        },\n\n        /**\n         * Returns the developer view menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The developer view menu section.\n         */\n        developerViewMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let view = ctx.settings.hotkeys.view;\n            let { display_debug_mode } = ctx.settings.view.diagram;\n            return {\n                id: \"developer_view_options\",\n                items: [\n                    {\n                        text: \"Debug Mode\",\n                        type: MenuType.Toggle,\n                        data: () => new App.ToggleDebugDisplay(ctx),\n                        shortcut: view.toggle_debug_view,\n                        value: display_debug_mode,\n                        keepMenuOpenOnSelect: true\n                    }\n                ],\n            };\n        },\n\n        \n        ///////////////////////////////////////////////////////////////////////\n        //  5. Help Menu  /////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the help menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The help menu.\n         */\n        helpMenu(_s, _g, rootState): ContextMenu {\n            let ctx = rootState.ApplicationStore;\n            let links = Configuration.menus.help_menu.help_links;\n            // Links\n            let items: ContextMenu[] = links.map(link => ({\n                text: link.text,\n                type: MenuType.Item,\n                data: () => new App.OpenHyperlink(ctx, link.url)\n            }));\n            // Menu\n            return {\n                text: \"Help\",\n                type: MenuType.Submenu,\n                sections: [{ id: \"help_links\", items }]\n            };\n        }\n\n    }\n\n} as Module<ContextMenuStore, ModuleStore>\n\n/**\n * Generates a create submenu from a namespace.\n * @param key\n *  The namespace's key.\n * @param value\n *  The namespace.\n * @param spawn\n *  A callback that produces a {@link SpawnObject} from a template id.\n * @returns\n *  The formatted submenu.\n */\nfunction generateCreateMenu(key: string, value: Namespace, spawn: (id: string) => SpawnObject): ContextMenuSubmenu {\n    let sm: ContextMenuSubmenu = {\n        text: titleCase(key),\n        type: MenuType.Submenu,\n        sections: [\n            { id: \"submenus\", items: [] },\n            { id: \"options\", items: [] }\n        ]\n    }\n    for (let [k, v] of value) {\n        if (typeof v !== \"string\") {\n            sm.sections[0].items.push(\n                generateCreateMenu(k, v, spawn)\n            );\n        } else {\n            sm.sections[1].items.push({\n                text: titleCase(k),\n                type: MenuType.Item,\n                data: () => spawn(v as string),\n            });\n        }\n    }\n    sm.sections = sm.sections.filter(s => 0 < s.items.length)\n    return sm;\n}\n","import * as App from \"@/store/Commands/AppCommands\";\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport { Module } from \"vuex\"\nimport { Hotkey } from \"@/assets/scripts/HotkeyObserver\"\nimport { CommandEmitter } from \"../Commands/Command\";\nimport { HotkeyStore, ModuleStore } from \"../StoreTypes\";\n\nexport default {\n    namespaced: true,\n    getters: {\n\n        /**\n         * Returns the native hotkeys.\n         * @returns\n         *  The supported native hotkeys.\n         */\n        nativeHotkeys(): Hotkey<CommandEmitter>[] {\n            return [\n                {\n                    shortcut: \"Control+R\",\n                    allowBrowserBehavior: true\n                },\n                {\n                    shortcut: \"Control+Shift+R\",\n                    allowBrowserBehavior: true\n                }\n            ]\n        },\n\n        /**\n         * Returns the file hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The file hotkeys.\n         */\n        fileHotkeys(_s, _g, rootState, rootGetters): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let file = ctx.settings.hotkeys.file;\n            let isValid = rootGetters[\"ApplicationStore/isValid\"];\n            return [\n                {\n                    data: () => App.LoadFile.fromNew(ctx),\n                    shortcut: file.new_file,\n                },\n                {\n                    data: () => App.LoadFile.fromFileSystem(ctx),\n                    shortcut: file.open_file,\n                },\n                {\n                    data: () => new App.SavePageToDevice(ctx, page.id),\n                    shortcut: file.save_file\n                },\n                {\n                    data: () => new App.SavePageImageToDevice(ctx, page.id),\n                    shortcut: file.save_image,\n                },\n                {\n                    data: () => new App.SaveSelectionImageToDevice(ctx, page.id),\n                    shortcut: file.save_select_image\n                },\n                {\n                    data: () => new App.PublishPageToDevice(ctx, page.id),\n                    shortcut: file.publish_file,\n                    disabled: !ctx.publisher || !isValid\n                }\n            ];\n        },\n\n        /**\n         * Returns the edit hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The edit hotkeys.\n         */\n        editHotKeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let repeat = { delay: 400, interval: 50 };\n            return [\n                {\n                    data: () => new Page.UndoPageCommand(ctx, page.id),\n                    shortcut: edit.undo,\n                    repeat\n                },\n                {\n                    data: () => new Page.RedoPageCommand(ctx, page.id),\n                    shortcut: edit.redo,\n                    repeat\n                },\n                {\n                    data: () => new Page.CutSelectedChildren(ctx, page),\n                    shortcut: edit.cut,\n                },\n                {\n                    data: () => new App.CopySelectedChildren(ctx, page),\n                    shortcut: edit.copy,\n                },\n                {\n                    data: () => new Page.PasteToObject(ctx, page),\n                    shortcut: edit.paste,\n                },\n                {\n                    data: () => new Page.RemoveSelectedChildren(page),\n                    shortcut: edit.delete\n                },\n                {\n                    data: () => new Page.DuplicateSelectedChildren(ctx, page),\n                    shortcut: edit.duplicate\n                },\n                {\n                    data: () => new Page.SelectChildren(page),\n                    shortcut: edit.select_all\n                }\n            ];\n        },\n\n        /**\n         * Returns the layout hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The layout hotkeys.\n         */\n        layoutHotkeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let layout = ctx.settings.hotkeys.layout;\n            return [\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.Top),\n                    shortcut: layout.selection_to_front\n                },\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.OneBelow),\n                    shortcut: layout.selection_to_back\n                },\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.OneAbove),\n                    shortcut: layout.bring_selection_forward\n                },\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.Bottom),\n                    shortcut: layout.send_selection_backward\n                }\n            ];\n        },\n\n        /**\n         * Returns the view hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The view hotkeys.\n         */\n        viewHotkeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let view = ctx.settings.hotkeys.view;\n            return  [\n                {\n                    data: () => new App.ToggleGridDisplay(ctx),\n                    shortcut: view.toggle_grid,\n                },\n                {\n                    data: () => new App.ToggleShadowDisplay(ctx),\n                    shortcut: view.toggle_shadows,\n                },\n                {\n                    data: () => new Page.ResetCamera(ctx, page),\n                    shortcut: view.reset_view\n                },\n                {\n                    data: () => new Page.ZoomCamera(ctx, page, 0.25),\n                    shortcut: view.zoom_in\n                },\n                {\n                    data: () => new Page.ZoomCamera(ctx, page, -0.25),\n                    shortcut: view.zoom_out\n                },\n                {\n                    data: () => new Page.MoveCameraToSelection(ctx, page),\n                    shortcut: view.jump_to_selection\n                },\n                {\n                    data: () => new Page.MoveCameraToParents(ctx, page),\n                    shortcut: view.jump_to_parents\n                },\n                {\n                    data: () => new Page.MoveCameraToChildren(ctx, page),\n                    shortcut: view.jump_to_children\n                },\n                {\n                    data: () => new App.SwitchToFullscreen(ctx),\n                    shortcut: view.fullscreen\n                },\n                {\n                    data: () => new App.ToggleDebugDisplay(ctx),\n                    shortcut: view.toggle_debug_view,\n                }\n            ];\n        }\n\n    }\n\n} as Module<HotkeyStore, ModuleStore>\n","import { createStore } from 'vuex'\nimport { ModuleStore } from './StoreTypes'\nimport ApplicationStore from './Stores/ApplicationStore'\nimport ContextMenuStore from './Stores/ContextMenuStore'\nimport HotkeyStore from './Stores/HotkeyStore'\n\nexport default createStore<ModuleStore>({\n  modules: {\n    ApplicationStore,\n    ContextMenuStore,\n    HotkeyStore\n  }\n})\n\n","import App from './App.vue'\nimport store from './store'\nimport { createApp } from 'vue'\nimport \"@/assets/fonts/inter.css\"\nimport \"@/assets/fonts/roboto_mono.css\"\n\ncreateApp(App).use(store).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"10cd7592\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + \"624054c4\" + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"attack-flow-builder:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/static/attack_flow_builder/\";","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"985\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkattack_flow_builder\"] = self[\"webpackChunkattack_flow_builder\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(581); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","onPointerdown","$event","$emit","class","$slots","name","data","onFocusOut","event","this","$el","target","contains","bind","emits","mounted","setTimeout","document","body","addEventListener","unmounted","removeEventListener","__exports__","_hoisted_1","_","ref","onWheelPassive","moveScrollPosition","scrollTop","deltaY","undefined","style","scroll","sty","handle","args","startDrag","onPointerup","stopDrag","showScrollbar","alwaysShowScrollBar","setup","content","props","resetScrollOnChange","type","Boolean","default","propagateScroll","handleColor","String","scrollColor","borderColor","width","Number","windowMax","background","trk","PointerTracker","hei","max","pos","height","transform","onResizeObserver","onMutateObserver","methods","capture","onDrag","once","track","handleTopToTop","movementY","release","recalculateScrollState","resetTop","clientHeight","ratio","scrollHeight","Math","round","position","topToHandleTop","hasMoved","canMove","stopPropagation","top","mutateOptions","childList","characterData","subtree","MutationObserver","ResizeObserver","observe","disconnect","_hoisted_2","fields","key","value","titleCase","getField","property","onChange","onCreate","onDelete","_hoisted_3","disabled","isEditable","tabindex","onFocus","showPlaceholder","onInput","onKeyup","onKeydown","onBlur","contenteditable","field","Object","required","updateTimeout","sto","activeProperty","computed","_property","trigger","descriptor","is_editable","$nextTick","focus","clearTimeout","innerText","updateProperty","toRawValue","refreshValue","watch","_component_Plus","d","version","viewBox","xmlns","fill","color","_hoisted_4","_hoisted_5","_component_ScrollBox","_component_FocusBox","open","showMenu","openMenu","onUnfocus","closeMenu","isNull","toString","active","hovered","onMouseenter","onClick","options","k","v","maxHeight","components","FocusBox","ScrollBox","placeholder","onKeyDown","preventDefault","delta","parseFloat","isNaN","min","n","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","enterEditMode","prop_M","prop_D","prop_Y","prop_H","prop_m","prop_s","showEditor","maxlength","segment","value_M","value_D","value_Y","value_H","value_m","value_s","Segment","Months","M","D","Y","H","m","s","Date","getUTCMonth","getUTCDate","getUTCFullYear","getUTCHours","padStart","getUTCMinutes","getUTCSeconds","relatedTarget","exitEditMode","selectionStart","selectionEnd","shiftFocus","maxLength","length","start","activeElement","index","indexOf","getAttribute","adj","ISO8601","date","getTime","toISOString","split","DictionaryField","id","Plus","TextField","EnumField","NumberField","DateTimeField","entries","filter","o","is_visible","ListField","_withScopeId","collapsed","Alignment","Free","Grid","AlignmentMask","Cursor","Default","Pointer","Crosshair","Move","NotAllowed","Grab","Grabbing","N_Resize","E_Resize","S_Resize","W_Resize","EW_Resize","NS_Resize","Col_Resize","Row_Resize","CursorMask","Hover","Off","Direct","Indirect","HoverMask","InheritAlignment","False","True","InheritAlignmentMask","PositionSetByUser","PositionSetByUserMask","Priority","Normal","High","PriorityMask","Select","SelectMask","SemanticRole","None","Node","Edge","LinkSource","LinkTarget","SemanticRoleMask","CursorCssName","DiagramObjectMover","constructor","gridX","gridY","dx","dy","ox","oy","odx","ody","anchor","_cx","_cy","_cdx","_cdy","_alignment","_gridX","_gridY","_anchors","reset","alignment","cx","cy","anchors","updateDelta","r","ax","ay","bb","cursorX","cursorY","boundingBox","radius","xMid","yMid","DiagramDisplaySettings","showGrid","showShadows","showDebug","ssaaScale","shadowsDisableAt","DragActionType","BlockDiagram","super","page","cache","RasterCache","_canvas","_context","_display","_elWidth","_elHeight","_mover","grid","_layoutLocked","_page","createView","_rafId","_rasterCache","_resizeObserver","_transform","_viewport","ViewportRegion","_ztoId","_zoom","scaleExtent","on","onCanvasZoom","onCanvasZoomEnd","_hovObj","inject","container","clientWidth","append","attr","onHoverSubject","e","node","getContext","alpha","onCanvasResize","call","subject","onSelectSubject","onObjectDragStarted","onObjectDragged","onObjectDragEnded","destroy","remove","removeAllListeners","callback","emit","setGridDisplay","display","setShadowsDisplay","setDebugDisplay","setSsaaScale","setScale","setShadowsDisableAt","requestAnimationFrame","executeRenderPipeline","renderPageSurfaceTo","renderTo","renderDebugTo","x","y","cursor","invertX","invertY","hovObj","el","getObjectAt","getCursor","mv","evt","sourceEvent","obj","rc","button","line","makeLine","srcEnding","moveTo","trgEnding","view","updateView","CreateLine","parent","lookup","selects","MoveAnchorable","objs","an","al","getAlignment","children","push","anchorCache","attrs","fakePositionSetByUser","moveBy","tdx","tdy","ids","map","object","isAttached","par","src","trg","getScale","RASTER_CACHE_UPDATE_DELAY","updateViewportBounds","setTransform","newWidth","newHeight","t","padding","VIEWPORT_PADDING","xMin","xMax","yMin","yMax","scale","setPage","setCameraLocation","location","animate","transition","duration","_scale","Map","createRaster","w","h","p","raster","Raster","set","drawRaster","context","get","drawImage","canvas","clear","tp","createElement","fillStyle","font","lineWidth","strokeStyle","textBaseline","beginPath","closePath","lineTo","stroke","fillText","text","drawRect","tl","tr","br","bl","ctx","quadraticCurveTo","Colors","Blue","fill_color","stroke_color","Orange","Green","Red","Gray","BlockDiagramTheme","theme","_theme","AnchorPoint","merge","structuredClone","BranchBlock","branch","DictionaryBlock","dictionary","Line","LineEnding","lineEnding","LineHandle","lineHandle","TextBlock","Page","dst","Error","DarkTheme","max_width","head","one_title","title","family","size","weight","two_title","subtitle","line_height","vertical_padding","field_name","field_value","horizontal_padding","select_outline","border_radius","anchor_markers","cap_size","select_color","stroke_width","grid_color","background_color","drop_shadow","offset","DiagramFactoryError","message","TemplateType","AnchorAngle","BUILTIN_PREFIX","BuiltinTemplates","role","properties","Property","is_primary","line_templates","DEG_0","DEG_90","LineHandlePoint","LineEndingPoint","namespace","LineHorizontalElbow","hitbox_width","line_handle_template","line_ending_template","source","LineVerticalElbow","DiagramFactory","schema","templates","_namespace","static","page_template","copy","Set","template","has","add","values","path","i","ns","join","fonts","concat","getFontDescriptorsFromTemplate","swapFontDescriptorsWithFonts","getTemplate","getNamespace","createObject","param1","vals","temp","cloneObjects","objects","clones","cloneObject","links","link","addChild","clone","toExport","crypto","randomUUID","descriptors","s1","s2","s3","b","getSchema","cloneTemplate","JSON","stringify","parse","DiagramObjectModel","factory","setAlignment","setCursor","setInheritAlignment","setSemanticRole","BoundingBox","root","owner","match","visited","queue","shift","DiagramAnchorModel","child","update","DiagramObjectModelError","splice","updateLayout","LayoutUpdateReason","ChildAdded","removeChild","safely","hasExternalAttachments","ChildDeleted","reorderChild","findIndex","getSubtree","DiagramAnchorableModel","c","getIndexInParent","select","hasHigherPriorityThan","getPriority","updateParent","atBaseOfMovement","Movement","recalculateLayout","atBaseOfLayout","Initialization","reasons","Infinity","align","floor","isAlignmentInherited","isHovered","isHoveredOrSelected","hasUserSetPosition","getPositionSetByUser","isSelected","getSemanticRole","hasRole","setHover","hover","inherit","setPositionSetByUser","positionSetByUser","setPriority","priority","setSelect","PropUpdate","lineTemplates","angle","hasAttachments","console","warn","tem","DiagramLineModel","getIndexInAnchor","DiagramLineEndingModel","useSuper","moveChild","DiagramLineHandleModel","hitboxWidth","at","le","lh","isAnchored","DiagramRootModel","_objectCache","LineEndingPointModel","LineHandlePointModel","LineHorizontalElbowModel","hitboxes","han","hitbox","find","e1","h1","e2","e1x","e1y","e2x","e2y","h1x","h2y","hdx","hdy","LineVerticalElbowModel","AnchorPointModel","DictionaryBlockModel","layout","anchor_template","a","onUpdate","contentHash","toHashValue","contentChanged","fullLayoutRequired","fnf","fvf","strokeWidth","titleText","toLocaleUpperCase","subtitleText","isDefined","hasSubtitle","hasBody","hasFields","tf","mw","measureWidth","keys","measure","ascent","descent","stf","lines","wordWrap","headerHeight","fieldName","fieldValue","primaryKey","xo","yo","BranchBlockModel","branches","bw","branchText","x0","y0","vp","_x","_m","_h","_hh","_hw","x1","y1","pop","TextBlockModel","hp","PageModel","DiagramObjectView","rasterCache","DiagramAnchorView","DiagramAnchorableView","vr","dsx","dsy","isVisible","viewport","Array","fakeAlignment","fakeCursor","fakeHover","fakeInheritAlignment","fakePriority","fakeSelect","DiagramLineEndingView","DiagramLineHandleView","DiagramLineView","DiagramRootView","save","setLineDash","restore","LineEndingPointView","arc","PI","LineHandlePointView","wo","LineHorizontalElbowView","lineColor","cs","eo","sign","LineVerticalElbowView","AnchorPointView","DictionaryBlockView","tlx","tly","bf","bs","so","hh","isSplitBlock","shadowOffsetX","shadowOffsetY","css","BranchBlockView","TextBlockView","placements","PageView","gc","bc","_gridPattern","createGridPattern","fillRect","shadowColor","fillColor","strokeColor","can","ptr","createPattern","DOMMatrix","translate","PageImage","_padding","_showGrid","_showShadows","_showDebug","attrCache","attrObjs","PropertyType","_parent","RootProperty","StringProperty","Int","Float","NumberProperty","DateProperty","Enum","EnumProperty","List","ListProperty","Dictionary","DictionaryProperty","_value","setValue","CollectionProperty","form","val","isArray","prop","create","addProperty","removeProperty","getNextId","delete","toReferenceValue","dpd","_notifyPropertyUpdate","listener","hex","toHex","num","str","charAt","stringToBlocks","blocks","charCodeAt","lsw","msw","rol","cnt","cmn","q","ff","gg","ii","MD5","old_a","old_b","old_c","old_d","drawArrowHead","sx","sy","tx","ty","atan2","cos","sin","EventEmitter","_listeners","unshift","actions","listeners","FontStore","_fontList","Font","getFont","getCssFontString","loadFonts","timeout","req","loadFont","results","Promise","allSettled","failedFonts","status","fontString","check","timeoutId","now","load","res","rej","fetch","then","fontList","result","timer","race","_widthIndex","char","DEFAULT_INDEX","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","getCharWidth","trim","segments","lineWrap","flat","tokens","WHITESPACE","whitespaceParity","test","tokenWidth","trimEnd","word","j","GlobalFontStore","clamp","multiple","abs","generateBitMask","mask","bit","getLineHitbox","vx","vy","acos","sqrt","isInsideRegion","vertices","minX","minY","maxX","maxY","v1x0","v1y0","v1x1","v1y1","totalIntersections","len","intersection","doVectorsIntersect","v2x0","v2y0","v2x1","v2y1","a1","b1","c1","a2","b2","c2","d1","d2","computeHash","string","hash","capitalize","substring","MouseClick","Direction","GraphObjectExport","nextLinkMap","prevLinkMap","prev","next","SemanticAnalyzer","items","edges","nodes","traverse","Next","Prev","direction","stack","registerLink","traverseAnchorable","via","r1","r2","deltaX","movementX","_originX","_originY","_lastX","_lastY","clientX","clientY","setPointerCapture","pointerId","onpointermove","releasePointerCapture","_component_AppTitleBar","_component_BlockDiagram","_component_EditorSidebar","_component_AppFooterBar","_component_AppHotkeyBox","gridLayout","startResize","Handle","Right","DiagramValidator","_errors","_warnings","run","validate","diagram","getWarnings","getErrors","addWarning","reason","addError","inValidState","AttackFlowValidator","graph","validateNode","edge","validateEdge","validateProperty","is_required","DiagramPublisher","publish","AttackFlowExtensionId","AttackFlowSchemaUrl","AttackFlowSchemaVersion","AttackFlowExtensionCreatedDate","AttackFlowExtensionModifiedDate","AttackFlowDocsExternalReference","source_name","description","url","AttackFlowGitHubExternalReference","AttackFlowExtensionCreatorName","AttackFlowSdos","AttackFlowTemplatesMap","AttackFlowPublisher","pageId","stixBundle","createStixBundle","author","createFlowAuthorSdo","flow","createFlowSdo","stixNodes","stixChildren","stixNode","toStixNode","prevNode","nextNode","SROs","tryEmbed","loop1","prevEdgeId","prevEdge","stixId","start_refs","createSdo","mergeActionProperty","mergeBasicDictProperty","getSubproperties","mergeBasicListProperty","sro","tryEmbedInAction","tryEmbedInAsset","tryEmbedInCondition","tryEmbedInOperator","tryEmbedInNote","tryEmbedInDefault","command_ref","createSro","asset_refs","effect_refs","object_ref","on_true_refs","on_false_refs","object_refs","extensionAuthor","createExtensionAuthorSdo","extension","createExtensionSdo","creatorId","created","modified","created_by_ref","extension_types","external_references","create_by_ref","identity_class","authorId","fromEntries","toLocaleLowerCase","replace","sdo","spec_version","extensions","extension_type","relationship_type","source_ref","target_ref","subproperties","config","is_web_hosted","file_type_name","file_type_extension","contact_information","scope","tactic_id","tactic_ref","technique_id","technique_ref","confidence","execution_start","execution_end","pattern","pattern_type","pattern_version","operator","aliases","kill_chain_phases","first_seen","last_seen","objective","action_type","os_execution_envs","action_bin","roles","sectors","indicator_types","patter_version","valid_from","valid_until","infrastructure_types","goals","resource_level","primary_motivation","secondary_motivations","latitude","longitude","precision","region","country","administrative_area","city","street_address","postal_code","malware_types","is_family","architecture_execution_envs","implementation_languages","capabilities","product","configuration_version","modules","analysis_engine_version","analysis_definition_version","submitted","analysis_started","analysis_ended","av_result","abstract","authors","first_observed","last_observed","number_observed","explanation","opinion","report_types","published","threat_actor_types","sophistication","personal_motivations","tool_types","tool_version","mime_type","payload_bin","hashes","encryption_algorithm","decryption_key","number","rir","path_enc","ctime","mtime","atime","display_name","is_multipart","content_type","message_id","received_lines","additional_header_fields","body_multipart","name_enc","magic_number_hex","end","is_active","src_port","dst_port","protocols","src_byte_count","dst_byte_count","src_packets","dst_packets","ipfix","is_hidden","pid","created_time","cwd","command_line","environment_variables","cpe","languages","vendor","user_id","credential","account_login","account_type","is_service_account","is_privileged","can_escalate_privs","is_disabled","account_created","account_expires","credential_last_changed","account_first_login","account_last_login","modified_time","number_of_subkeys","is_self_signed","serial_number","signature_algorithm","issuer","validity_not_before","validity_not_after","subject_public_key_algorithm","subject_public_key_modulus","subject_public_key_exponent","menus","help_menu","help_links","validator","publisher","AppCommand","CopySelectedChildren","settings","edit","clone_offset","_objects","execute","clipboard","Browser","filename","ext","div_report_pk","querySelector","report_pk","div_finding_pk","finding_pk","div_csrf_token","csrf_token","div_attackflow_pk","attackflow_pk","atttack_flow_image","toDataURL","requestOptions","method","headers","afb_content","afb_image","response","json","ok","window","href","catch","error","blob","Blob","URL","createObjectURL","_aLink","download","click","revokeObjectURL","toBlob","fileInput","resolve","file","files","reader","FileReader","onload","contents","readAsText","cast","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","PageEditor","pointer","_undoStack","_redoStack","_validator","command","undo","canUndo","redo","canRedo","isValid","getValidationErrors","getValidationWarnings","pageExp","pageObj","deserialize","exp","expIndex","objIndex","toFile","doc","LoadFile","_editor","createNew","fromFile","openTextFileDialog","credentials","pages","activePage","LoadSettings","_settings","OpenHyperlink","_url","PublishPageToDevice","editor","downloadTextFile","SavePageImageToDevice","image_export","image","display_grid","display_shadows","display_debug_mode","downloadImageFile","SavePageToDevice","SavePageToDevicePetereport","downloadTextPetereport","SaveSelectionImageToDevice","SetEditorPointerLocation","_y","SetEditorViewParams","params","_params","SetRenderQuality","highQuality","_highQuality","render_high_quality","SwitchToFullscreen","ToggleDebugDisplay","ToggleGridDisplay","ToggleShadowDisplay","_component_TitleBar","onSelect","onItemSelect","icon","_component_ContextMenuListing","menuClose","menu","focused","focusedMenu","menuEnter","menuOpen","sections","menuSelect","onContextmenu","section","item","MenuType","Submenu","submenuEnter","onMouseleave","submenuLeave","focusedSubMenu","onChildItemSelect","onItemClick","formatShortcut","shortcut","KeyToText","Control","Escape","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Delete","forceInsideWindow","xOffset","yOffset","leaveTimeout","leaveTimeoutId","marginTop","marginLeft","keepMenuOpenOnSelect","closeSubmenu","viewWidth","innerWidth","viewHeight","innerHeight","left","bottom","right","getBoundingClientRect","ContextMenuListing","fileMenu","editMenu","layoutMenu","viewMenu","helpMenu","emitter","cmd","ex","TitleBar","_component_HotkeyBox","hotkeys","global","onFire","onHotkeyFired","HotkeyObserver","recognitionDelay","_boundAdvanceKeyState","advanceKeyState","_boundReverseKeyState","reverseKeyState","_callback","_callLoop","_container","_hotkeyIdMap","_keyState","_recognitionDelay","setHotkeys","keyMap","hotkeyId","keySequenceToHotKeyId","startsWith","OverlappingHotkeysError","isHotkeyActive","sequence","strict","includes","endsWith","tagName","hotkey","allowBrowserBehavior","triggerHotkey","repeat","interval","delay","provide","observer","nativeHotkeys","fileHotkeys","editHotKeys","layoutHotkeys","viewHotkeys","HotkeyBox","Order","_component_ContextMenu","cursorStyle","menuStyle","menuOptions","closeContextMenu","PageCommand","NullPage","AddLineObject","_object","_source","_target","AddObject","AttachObject","_anchor","CreateSubproperty","_id","_subproperty","GroupCommand","_commands","l","record","RemoveObjects","_links","_items","UnhoverObject","UnselectObject","RemoveSelectedChildren","CutSelectedChildren","DeleteSubproperty","subproperty","_index","DetachObject","DuplicateSelectedChildren","HoverObject","SelectObject","UnselectDescendants","MoveCameraToObjects","regionW","regionH","_location","MoveCameraToChildren","getNextBlocks","MoveCameraToParents","parents","getPrevBlocks","MoveCameraToSelection","MoveObjectBy","_dx","_dy","MoveObjectTo","_lx","_ly","_nx","_ny","PasteToObject","RedoPageCommand","ReorderObject","order","_prevIndex","Top","_nextIndex","OneAbove","OneBelow","Bottom","RelayerSelection","ResetCamera","SelectChildren","SetDateProperty","lv","_lastValue","_nextValue","SetEnumProperty","SetNumberProperty","SetStringProperty","SpawnObject","UndoPageCommand","UnhoverDescendants","isDirectlyHovered","UserSetObjectPosition","ZoomCamera","show","state","camera","pageUpdate","displayGrid","displayShadows","displayDebugMode","renderHighQuality","disableShadowsAt","disable_shadows_at","multiselectHotkey","many","hasSelection","deleteMenu","clipboardMenu","duplicateMenu","layeringMenu","jumpMenu","undoRedoMenu","createAtMenu","selectAllMenu","zoomMenu","diagramViewMenu","openContextMenu","onObjectHover","onObjectClick","isMultiselect","onCanvasClick","onObjectMove","onObjectAttach","onObjectDetach","onLineCreate","onViewTransform","ContextMenu","fileName","_component_PropertyEditor","_component_AccordionPane","_component_ValidatorProblems","_component_AccordionBox","units","selected","panes","activePane","collapseHeight","boxStyle","gridTemplateRows","activeHeight","onCollapse","uncollapsePane","collapsePane","cacheHeights","currentHeight","reduce","cachedHeight","elementHeight","getAvailableHeight","nextHeight","uncollapsedHeight","available","availableDelta","neededHeight","minHeight","forEach","growPane","remainingDelta","growAmount","refit","proportions","minElementHeight","percentToMinimum","slot","totalHeight","totalUnits","totalPanes","pane","_slots","CollapseArrow","box","_component_DictionaryFieldContents","hasEditableProperties","DictionaryFieldContents","warning","getSelection","AccordionBox","AccordionPane","PropertyEditor","ValidatorProblems","bodyWidth","bodyHeight","frameSize","minFrameSize","drag","gridTemplateColumns","origin","onResize","stopResize","setRightFrameSize","div_attackflow_afb","attackflow_afb","fromNew","URLSearchParams","search","fromUrl","AppHotkeyBox","AppTitleBar","AppFooterBar","EditorSidebar","BaseAppSettings","new_file","open_file","save_file","save_image","save_select_image","publish_file","open_library","save_library","cut","paste","duplicate","select_all","selection_to_front","selection_to_back","bring_selection_forward","send_selection_backward","align_left","align_center","align_right","align_top","align_middle","align_bottom","group","ungroup","open_group","close_group","toggle_grid","toggle_shadows","reset_view","zoom_in","zoom_out","fullscreen","jump_to_selection","jump_to_parents","jump_to_children","toggle_debug_view","Publisher","DummyPage","createDummy","namespaced","getters","hasClipboardContents","mutations","_s","rootState","ApplicationStore","openFileMenu","saveFileMenu","publishFileMenu","PetereportFileMenu","_g","Item","rootGetters","createMenu","canPaste","generateCreateMenu","diagramRenderMenu","fullscreenMenu","developerViewMenu","Toggle","spawn","sm","ContextMenuStore","HotkeyStore","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","fn","notFulfilled","fulfilled","every","definition","defineProperty","enumerable","f","chunkId","all","promises","u","miniCssF","g","globalThis","Function","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","done","script","needAttach","scripts","getElementsByTagName","charset","nc","setAttribute","onScriptComplete","onerror","doneFns","parentNode","appendChild","Symbol","toStringTag","createStylesheet","fullhref","reject","linkTag","rel","onLinkComplete","errorType","realHref","err","code","request","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}